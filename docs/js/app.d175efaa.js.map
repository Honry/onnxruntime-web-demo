{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/common/DrawingModelUI.vue","webpack:///./src/components/models/Emotion.vue?975e","webpack:///./src/assets/mnist.png","webpack:///./src/components/models/Squeezenet.vue","webpack:///./src/components/Home.vue?ef87","webpack:///./src/components/common/ImageModelUI.vue?a9b0","webpack:///./src/assets/emotion.png","webpack:///./src/components/common/ModelStatus.vue?d944","webpack:///./src/components/common/ImageModelUI.vue?1f2a","webpack:///./src/components/common/ImageModelUI.vue?e8b6","webpack:///./src/components/Home.vue","webpack:///./src/components/models/MNIST.vue?4330","webpack:///./src/components/models/Yolo.vue?23b9","webpack:///./src/components/Home.vue?006d","webpack:///./src/components/MainMenu.vue?34e8","webpack:///./src/components/Home.vue?c1bb","webpack:///./src/assets/EmotionSampleImages/neutral.jpg","webpack:///./src/assets/background.png","webpack:///./src/assets/EmotionSampleImages/angry_man.jpg","webpack:///./src/App.vue?7360","webpack:///./src/components/models/Emotion.vue?6999","webpack:///./src/components/models/Squeezenet.vue?abaa","webpack:///./src/utils/yolo.ts","webpack:///./src/components/models/MNIST.vue","webpack:///./src/utils/utils-yolo/yoloPostprocess.ts","webpack:///./src/App.vue?3746","webpack:///./src/assets/squeezenet.png","webpack:///./src/components/models/MNIST.vue?770f","webpack:///./src/components/models/Emotion.vue?81bf","webpack:///./src/components/models/Mobilenet.vue","webpack:///./src/components/MainMenu.vue","webpack:///./src/utils/runModel.ts","webpack:///./src/components/common/ModelStatus.vue?4e05","webpack:///./src/assets/EmotionSampleImages/neutral_girl.jpg","webpack:///./src/components/common/ModelStatus.vue?de3f","webpack:///./src/assets/mobilenet.png","webpack:///./src/components/Home.vue?063a","webpack:///./src/assets/EmotionSampleImages/fear.jpg","webpack:///./src/components/common/ModelStatus.vue?fca7","webpack:///./src/utils/utils-yolo/softmax.ts","webpack:///./src/App.vue","webpack:///./src/utils/imagenet.ts","webpack:///./src/utils/utils-yolo/unary-op.ts","webpack:///./src/components/models/Yolo.vue?55fa","webpack:///./src/components/models/Squeezenet.vue?e6c3","webpack:///./src/App.vue?17af","webpack:///./src/components/common/WebcamModelUI.vue?b69f","webpack:///./src/utils/utils-yolo/transpose.ts","webpack:///./src/components/common/ImageModelUI.vue","webpack:///./src/utils/utils-yolo/binary-op.ts","webpack:///./src/assets/EmotionSampleImages/surprised_boy.jpg","webpack:///./src/components/common/ModelStatus.vue","webpack:///./src/data/sample-image-urls.ts","webpack:///./src/utils/utils-yolo/reshape.ts","webpack:///./src/components/common/WebcamModelUI.vue?c5ab","webpack:///./src/components/common/DrawingModelUI.vue?8fb4","webpack:///./src/components/common/DrawingModelUI.vue?ab07","webpack:///./src/components/models/Mobilenet.vue?86fa","webpack:///./src/components/MainMenu.vue?9ba5","webpack:///./src/components/MainMenu.vue?4fc2","webpack:///./src/router/index.ts","webpack:///./src/components/common/WebcamModelUI.vue","webpack:///./src/components/models/Yolo.vue?9194","webpack:///./src/utils/math.ts","webpack:///./src/assets/EmotionSampleImages/surprised_woman.jpg","webpack:///./src/components/models/Emotion.vue","webpack:///./src/utils/utils-yolo/yoloPostprocessUtils.ts","webpack:///./src/data/imagenet.ts","webpack:///../../lib/backend-impl.ts","webpack:///../../lib/env-impl.ts","webpack:///../../lib/env.ts","webpack:///../../lib/tensor-impl.ts","webpack:///../../lib/tensor.ts","webpack:///../../lib/inference-session-impl.ts","webpack:///../../lib/inference-session.ts","webpack:///./src/components/common/ImageModelUI.vue?9706","webpack:///./src/components/common/DrawingModelUI.vue?cd58","webpack:///./src/assets/EmotionSampleImages/sad_baby.jpg","webpack:///./src/main.ts","webpack:///onnxruntime-web/webpack/universalModuleDefinition","webpack:///onnxruntime-web/lib/wasm/binding/ort-wasm-threaded.min.js","webpack:///onnxruntime-web/lib/wasm/binding/ort-wasm.js","webpack:///onnxruntime-web/node_modules/@protobufjs/aspromise/index.js","webpack:///onnxruntime-web/node_modules/@protobufjs/base64/index.js","webpack:///onnxruntime-web/node_modules/@protobufjs/eventemitter/index.js","webpack:///onnxruntime-web/node_modules/@protobufjs/float/index.js","webpack:///onnxruntime-web/node_modules/@protobufjs/inquire/index.js","webpack:///onnxruntime-web/node_modules/@protobufjs/pool/index.js","webpack:///onnxruntime-web/node_modules/@protobufjs/utf8/index.js","webpack:///onnxruntime-web/node_modules/guid-typescript/dist/guid.js","webpack:///onnxruntime-web/node_modules/long/src/long.js","webpack:///onnxruntime-web/node_modules/onnx-proto/dist/onnx.js","webpack:///onnxruntime-web/node_modules/protobufjs/minimal.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/index-minimal.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/reader.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/reader_buffer.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/roots.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/rpc.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/rpc/service.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/util/longbits.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/util/minimal.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/writer.js","webpack:///onnxruntime-web/node_modules/protobufjs/src/writer_buffer.js","webpack:///onnxruntime-web/lib/backend-onnxjs.ts","webpack:///onnxruntime-web/lib/backend-wasm.ts","webpack:///onnxruntime-web/lib/index.ts","webpack:///onnxruntime-web/lib/onnxjs/attribute-with-cache-key.ts","webpack:///onnxruntime-web/lib/onnxjs/attribute.ts","webpack:///onnxruntime-web/lib/onnxjs/backend.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/backend-webgl.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-source.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/inference-handler.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/cast.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/concat.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/conv-transpose.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/conv.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/flatten.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/gather.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/gemm.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/im2col.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/matmul.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/pack.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/pad.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/pool.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/reduce.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/reshape.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/shape.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/slice.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/softmax.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/split.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/sum.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/tile.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/transpose.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/unpack.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/ops/upsample.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/program-manager.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/session-handler.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/texture-layout.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/texture-manager.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/types.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/utils.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack:///onnxruntime-web/lib/onnxjs/backends/webgl/webgl-context.ts","webpack:///onnxruntime-web/lib/onnxjs/execution-plan.ts","webpack:///onnxruntime-web/lib/onnxjs/graph.ts","webpack:///onnxruntime-web/lib/onnxjs/instrument.ts","webpack:///onnxruntime-web/lib/onnxjs/model.ts","webpack:///onnxruntime-web/lib/onnxjs/operators.ts","webpack:///onnxruntime-web/lib/onnxjs/opset.ts","webpack:///onnxruntime-web/lib/onnxjs/ort-schema/ort-generated.ts","webpack:///onnxruntime-web/lib/onnxjs/session-handler.ts","webpack:///onnxruntime-web/lib/onnxjs/session.ts","webpack:///onnxruntime-web/lib/onnxjs/tensor.ts","webpack:///onnxruntime-web/lib/onnxjs/util.ts","webpack:///onnxruntime-web/lib/wasm/options-utils.ts","webpack:///onnxruntime-web/lib/wasm/proxy-wrapper.ts","webpack:///onnxruntime-web/lib/wasm/run-options.ts","webpack:///onnxruntime-web/lib/wasm/session-handler.ts","webpack:///onnxruntime-web/lib/wasm/session-options.ts","webpack:///onnxruntime-web/lib/wasm/string-utils.ts","webpack:///onnxruntime-web/lib/wasm/wasm-core-impl.ts","webpack:///onnxruntime-web/lib/wasm/wasm-factory.ts","webpack:///onnxruntime-web/lib/wasm/proxy-worker/main.ts","webpack:///onnxruntime-web/node_modules/worker-loader/dist/runtime/inline.js","webpack:///onnxruntime-web/external umd {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack:///onnxruntime-web/node_modules/flatbuffers/js/flatbuffers.mjs","webpack:///onnxruntime-web/webpack/bootstrap","webpack:///onnxruntime-web/webpack/runtime/compat get default export","webpack:///onnxruntime-web/webpack/runtime/define property getters","webpack:///onnxruntime-web/webpack/runtime/global","webpack:///onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack:///onnxruntime-web/webpack/runtime/make namespace object","webpack:///onnxruntime-web/webpack/startup","webpack:///./src/components/models/MNIST.vue?da12","webpack:///./src/App.vue?9844","webpack:///./src/assets/EmotionSampleImages/happy.jpg","webpack:///./src/utils/index.ts","webpack:///./src/components/models/Mobilenet.vue?dbef","webpack:///./src/components/common/WebcamModelUI.vue?cf88","webpack:///./src/components/models/Mobilenet.vue?e40d","webpack:///./src/utils/utils-yolo/concat.ts","webpack:///./src/assets/EmotionSampleImages/sad_baby2.jpg","webpack:///./src/components/MainMenu.vue?0482","webpack:///./src/components/models/Squeezenet.vue?5499","webpack:///./src/assets/yolo.png","webpack:///./src/assets/EmotionSampleImages/angry_baby.jpg","webpack:///./src/components/common/WebcamModelUI.vue?2cc5","webpack:///./src/components/common/DrawingModelUI.vue?8318","webpack:///./src/data/yolo_classes.ts","webpack:///./src/components/models/Yolo.vue","webpack:///./src/data/demo-titles.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_c","_self","_setupProxy","modelLoading","modelInitializing","attrs","_e","staticStyle","staticClass","_v","sessionRunning","backendSelectList","maxHeight","model","sessionBackend","callback","$$v","expression","modelLoadingError","on","activateDraw","run","draw","clear","_l","outputClasses","concat","class","predicted","predictedClass","_s","style","width","Math","round","output","staticRenderFns","WebcamModelUI_vue_1","__importDefault","require","vue_property_decorator_1","index_1","sample_image_urls_1","onnxruntime_web_1","math_1","MODEL_FILEPATH_PROD","Emotion","_super","_this","imageUrls","EMOTION_IMAGE_URLS","modelFilepath","__extends","warmupModel","session","runModelUtils","preprocess","ctx","scale","height","greyScale","tensor","Tensor","Float32Array","set","scaledImage","document","getElementById","scaledCtx","getContext","drawImage","canvas","getImageData","postprocess","inferenceTime","emotionMap","myOutput","softmax","Array","maxInd","maxProb","drawRect","toFixed","x","y","w","h","text","color","rect","createElement","label","cssText","innerText","appendChild","__decorate","Component","components","WebcamModel","default","Vue","getPredictedClass","DEMO_INFO","title","path","imagePath","HomePage","demoInfo","blueimp_load_image_1","utils_1","ModelStatus_vue_1","ImageModelUI","imageURLInput","imageURLSelect","imageURLSelectList","imageLoading","imageLoadingError","modelFile","ArrayBuffer","created","fetch","response","_b","sent","_a","arrayBuffer","initSession","gpuSession","cpuSession","xnnpackSession","webnnGpuSession","webnnCpuSession","createModelGpu","_f","createModelCpu","createModelXnnpack","_d","createModelWebnn","console","log","e_2","undefined","Error","setTimeout","imageSize","onSessionBackendChange","newVal","clearAll","onImageURLSelectChange","loadImageToCanvas","beforeDestroy","onImageURLInputEnter","e","target","handleFileChange","$emit","files","url","img","type","element","$nextTick","runModel","maxWidth","cover","crop","crossOrigin","preprocessedData","tensorOutput","clearRect","file","Prop","String","required","Number","Function","Watch","modelStatus","info","DrawingModelUI_vue_1","MNIST","imageDataCenterCrop","mathUtils","centerCrop","ctxCenterCrop","putImageData","ctxScaled","save","imageDataScaled","restore","input","len","rawOutput","reduce","a","b","argmax","DrawingModelUI","ndarray_1","ndarray_ops_1","Yolo","YOLO_IMAGE_URLS","imageData","dataTensor","dataProcessedTensor","assign","pick","originalOutput","outputTensor","yoloTransforms","transpose","yolo","boxes","forEach","box","top","left","bottom","right","classProb","className","alert","webcamContainerElement","offsetWidth","offsetHeight","ox","oy","Boolean","MainMenu","yolo_classes_1","__importStar","YOLO_ANCHORS","from","DEFAULT_FILTER_BOXES_THRESHOLD","DEFAULT_IOU_THRESHOLD","DEFAULT_CLASS_PROB_THRESHOLD","INPUT_DIM","numClasses","yolo_head","boxXy","boxWh","boxConfidence","boxClassProbs","allBoxes","yolo_boxes_to_corners","yolo_filter_boxes","outputBoxes","scores","classes","scalar","imageDims","reshape","stack","mul","Promise","all","preKeepBoxesArr","scoresArr","non_max_suppression","keepIndx","boxesArr","keepScores","gather","classesIndxArr","results","classIndx","max","min","resultObj","threshold","boxScores","boxClasses","argMax","boxClassScores","predictionMask","as1D","greaterEqual","N","size","allIndices","cast","linspace","negIndices","zeros","indices","where","two","boxMins","sub","div","boxMaxes","add","dim0","dims","dim1","dim2","iouThreshold","zipped","sortedBoxes","sort","selectedBoxes","curIou","box_iou","map","feats","anchors","numAnchors","anchorsArray","convDims","convDims0","convDims1","convHeightIndex","range","convWidthIndex","tile","expandDims","convIndex","convDimsTensor","sigmoid","exp","box_intersection","box_union","binary_op_1","concat_1","reshape_1","softmax_1","transpose_1","unaryOps","yoloPostprocessUtils_1","dtype","TypedArrayUtil","createTypedArray","ShapeUtil","validateDims","start","stop","num","increments","step","abs","ceil","t1","t2","binaryOp","e1","e2","dim","tensors","axis","typeCheckRequired","types_1","TypeUtil","validateSameTypes","types","shapes","validateEqualDims","rank","getActualAxisFromNegativeValue","expanded","newDims","indicesData","dimsStrides","computeStrides","newDimsStrides","Y","X","newLogicalIndex","offsetToIndices","oldLogicalIndex","oldOffset","indicesToOffset","begin","newDimsStride","oldDimsStride","idx","reps","perm","changedShapeLength","changedShape","iter","condition","areEqual","outputShape","outputData","conditionData","conditionDims","t1Dims","offset","Int32Array","Uint8Array","splitDimsIntoTwo","reduceDims","resultDims","blockSize","max_1","index","keepDims","max_2","adjustedResultDims","origDims","component","_m","active","currentView","init","env","wasm","proxy","numThreads","simd","InferenceSession","executionProviders","deviceType","logSeverityLevel","warmupTensor","random","feeds","inputNames","performance","now","error","e_1","inferenceTimeArray","numRuns","getNumRuns","newTensor","outputNames","getMedianValue","array","floor","params","URLSearchParams","location","hash","split","numRunsParam","isInteger","parseInt","ModelStatus","inputDimensions","inputRank","axisCorrected","sizeToDimension","D","sizeFromDimension","MIN_VALUE","showNav","$event","stopPropagation","currentTitle","hasWebGL","currentDescription","currentLink","lodash_1","imagenet_1","imagenetClassesTopK","classProbabilities","k","probs","isTypedArray","sorted","reverse","sortBy","prob","probIndex","topK","take","iClass","imagenetClasses","id","replace","probability","ImageModelUI_vue_1","SqueezeNet","SQUEEZENET_IMAGE_URLS","divseq","subseq","res","empty","imagenetUtils","inputDims","finalPerm","outputDims","stride","inpDim","numAxesInPrefix","suffixBlocksize","prefixBlocksize","isSuffix","inpAxis","doTransposeSingleBlock","doTransposeEltWise","doTranspose","numAxes","targetDims","numBlocks","numElementsInBlock","source","targetIndex","fill","startSourceIndex","startTargetIndex","sizeOffset","computeOffset","arrayCopyHelper","incrementIndex","sourceOffset","background","transition","opLambda","resultType","BroadcastUtil","calc","rType","shape","message","directives","rawName","MOBILENET_IMAGE_URLS","reshapedDims","calculateReshapedDims","drawing","strokes","time","points","getCoordinates","preventDefault","lineWidth","lineJoin","lineCap","strokeStyle","slen","p1","p2","beginPath","moveTo","midpoint","getMidpoint","quadraticCurveTo","lineTo","stroke","vue_1","vue_router_1","Home_vue_1","Emotion_vue_1","MNIST_vue_1","Mobilenet_vue_1","Squeezenet_vue_1","Yolo_vue_1","use","base","process","routes","domProps","webcamEnabled","webcamController","webcamStatus","arr","C","x1","y1","x2","y2","clientX","clientY","touches","getBoundingClientRect","xmin","ymin","xmax","ymax","widthNew","heightNew","halfBefore","halfAfter","dataNew","Uint8ClampedArray","idxNew","ImageData","calcShape","adims","bdims","isMatMul","arank","brank","crank","cdims","cShapeMatMul","calcMatMulShape","aLen","bLen","shapeOrigin","dimOffset","indicesOrigin","dimLen","op","constructor","rest","indicesA","indicesB","isValidBroadcast","finalShape","finalRank","sourceIndex","typesArray","baseType","dimsArray","baseDims","baseRank","TypeError","RangeError","_i","dims_1","getSizeFromDimensionRange","end","strides","tensorRank","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","originalTensorFlattenedSize","sortBasedOnPerm","v","padShape","pad","shape1","shape2","every","picked","remnants","_regeneratorRuntime","Op","hasOwn","obj","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","_typeof","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","abrupt","done","methodName","return","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","keys","val","pop","skipTempReset","prev","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_createForOfIteratorHelper","allowArrayLike","it","isArray","_unsupportedIterableToArray","F","f","normalCompletion","didErr","_e2","minLen","_arrayLikeToArray","toString","test","arr2","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","backends","backendsSortedByPriority","registerBackend","backend","priority","createSessionHandler","currentBackend","indexOf","resolveBackend","_ref","_callee","backendHints","backendNames","errors","_iterator","_step","backendName","backendInfo","isInitializing","_context","initialized","aborted","initPromise","t0","join","_x","EnvImpl","_classCallCheck","webgl","logLevelInternal","_createClass","isBigInt64ArrayAvailable","BigInt64Array","isBigUint64ArrayAvailable","BigUint64Array","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Int8Array","Uint16Array","Int16Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","calculateSize","isSafeInteger","arg0","arg1","arg2","typedArrayConstructor","firstElementType","mappedType","TensorImpl","instance","Constructor","_defineProperties","props","descriptor","_toPropertyKey","protoProps","staticProps","_toPrimitive","hint","prim","toPrimitive","handler","_run","fetches","options","isFetchesEmpty","isFetches","arg1Keys","_iterator2","_step2","_name","_iterator3","_step3","_name3","_iterator4","_step4","_name2","returnValue","getOwnPropertyNames","_x2","_x3","startProfiling","endProfiling","_create","_callee2","arg3","filePathOrUint8Array","buffer","byteOffset","byteLength","eps","_context2","SharedArrayBuffer","_x4","_x5","_x6","_x7","InferenceSessionImpl","vuetify_1","App_vue_1","router_1","config","productionTip","theme","primary","secondary","accent","router","$mount","__WEBPACK_EXTERNAL_MODULE__1670__","_scriptDir","currentScript","src","M","ee","U","V","B","z","u","W","H","ready","g","_","T","S","importScripts","O","versions","node","A","ENVIRONMENT_IS_PTHREAD","E","I","locateFile","dirname","normalize","readFileSync","readFile","argv","ye","se","exitCode","exit","inspect","Worker","href","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","onload","status","onerror","P","warn","writeSync","$","print","printErr","thisProgram","quit","Atomics","load","store","compareExchange","wasmBinary","R","noExitRuntime","WebAssembly","fe","L","G","q","TextDecoder","decode","subarray","fromCharCode","K","Z","charCodeAt","J","Q","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","te","ne","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","re","oe","ie","ae","ue","Oe","ce","le","pe","de","postMessage","cmd","onAbort","RuntimeError","he","startsWith","ge","me","be","Se","pthreads","returnWorkerToPool","ve","getNewWorker","runningWorkers","pthread_ptr","start_routine","startRoutine","runPthread","transferList","loaded","we","varargs","getStr","xe","Ft","terminateAllThreads","onExit","Te","Ee","an","rn","Wt","Gt","unusedWorkers","tlsInitFunctions","initWorker","initMainThread","setExitStatus","_Object$values","terminate","ln","receiveObjectTransfer","threadInitTLS","loadWasmModuleToWorker","onmessage","currentProxiedOperationCallerThread","targetThread","en","_t","queue","thread","threadId","filename","lineno","urlOrBlob","mainScriptUrlOrBlob","wasmModule","allocateUnusedWorker","Ae","hn","PThread","establishStackSpace","dn","Ie","Pe","excPtr","ptr","set_type","get_type","set_destructor","get_destructor","set_refcount","set_caught","get_caught","set_rethrown","get_rethrown","set_adjusted_ptr","add_ref","release_ref","get_adjusted_ptr","get_exception_ptr","mn","De","$e","ke","Ce","Fe","Ne","Re","Le","Me","je","Ue","Ve","Be","ze","We","invokeEntryPoint","pn","Ge","He","qe","Xe","Ye","Ke","Ze","Je","Qe","et","tt","nt","rt","ignoreDuplicateRegistrations","ot","at","refcount","st","ut","ct","fromWireType","lt","pt","dt","ft","ht","gt","mt","bt","yt","cn","vt","nn","executeNotifiedProxyingQueue","wt","xt","Tt","St","globalThis","Ot","At","Et","It","Pt","Dt","$t","tn","kt","Date","getFullYear","getTimezoneOffset","toTimeString","match","Ct","shown","gn","un","hrtime","__performance_now_clock_drift","Nt","Rt","grow","Lt","Mt","strings","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","jt","Ut","Vt","Bt","zt","Ht","qt","Xt","Yt","Kt","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","tm_zone","RegExp","getMonth","getDate","getDay","getTime","setDate","setMonth","setFullYear","substring","includes","BindingError","InternalError","count_emval_handles","get_first_emval","Zt","Jt","Qt","ba","sn","ia","ga","fa","ha","qa","ra","ta","toWireType","argPackAdvance","readValueFromPointer","destructorFunction","sa","ua","isVoid","ka","aa","wa","deleteObject","va","ma","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","na","getSeconds","getMinutes","getHours","oa","setTime","pa","called","ea","copyWithin","cpus","hardwareConcurrency","ja","ca","da","la","asm","Wa","xa","unshift","monitorRunDependencies","clearInterval","credentials","ok","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","ya","_OrtCreateSessionOptions","za","_OrtAppendExecutionProvider","Aa","_OrtAddSessionConfigEntry","Ba","_OrtReleaseSessionOptions","Ca","_OrtCreateSession","Da","_OrtReleaseSession","Ea","_OrtGetInputCount","Fa","_OrtGetOutputCount","Ga","_OrtGetInputName","Ha","_OrtGetOutputName","Ia","_OrtFree","Ja","_OrtCreateTensor","Ka","_OrtGetTensorData","La","_OrtReleaseTensor","Ma","_OrtCreateRunOptions","Na","_OrtAddRunConfigEntry","Oa","_OrtReleaseRunOptions","Pa","_OrtRun","Qa","_OrtEndProfiling","Ra","_pthread_self","Sa","_malloc","Ta","_free","Ua","_fflush","Va","__emscripten_tls_init","___getTypeName","Xa","__embind_initialize_bindings","Ya","___funcs_on_exit","Za","__emscripten_thread_init","$a","__emscripten_thread_crashed","ab","_emscripten_run_in_main_runtime_thread_js","bb","__emscripten_proxy_execute_task_queue","cb","__emscripten_thread_free_data","db","__emscripten_thread_exit","eb","_emscripten_stack_set_limits","fb","stackSave","gb","stackRestore","hb","stackAlloc","ib","___cxa_is_pointer_type","jb","bn","preRun","setStatus","calledRun","onRuntimeInitialized","postRun","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","ExitStatus","preInit","encode","_listeners","off","emit","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","LN2","pow","NaN","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","inquire","moduleName","mod","eval","read","write","EMPTY","isGuid","validator","createEmpty","parse","raw","equals","isEmpty","toJSON","Guid","Instance","Module","low","high","unsigned","__isLong__","isLong","neg","fromInt","fromNumber","fromBits","fromString","fromValue","ZERO","UZERO","ONE","UONE","NEG_ONE","MAX_VALUE","MAX_UNSIGNED_VALUE","toInt","toNumber","isZero","isNegative","eq","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","negate","not","subtract","multiply","get_high","divide","div_u","div_s","toUnsigned","shru","shr","shl","modulo","rem_u","rem_s","rem","and","or","xor","shiftLeft","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","Reader","Writer","util","roots","onnx","Version","AttributeProto","floats","ints","graphs","refAttrName","docString","Long","newBuffer","emptyArray","uint32","string","float","int64","bytes","TensorProto","fork","ldelim","GraphProto","int32","encodeDelimited","pos","skipType","decodeDelimited","verify","isString","fromObject","LongBits","base64","toObject","arrays","defaults","longs","enums","json","isFinite","AttributeType","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","TensorShapeProto","Dimension","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","elemType","version","_configure","BufferWriter","BufferReader","build","rpc","configure","utf8","buf","Buffer","isBuffer","lo","hi","_slice","sint32","bool","fixed32","sfixed32","skip","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","EventEmitter","rpcImpl","requestDelimited","responseDelimited","rpcCall","asPromise","zero","zzEncode","zeroHash","toLong","fromHash","toHash","captureStackTrace","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","newError","ProtocolError","allocUnsafe","head","tail","states","alloc","_push","writeBytesBuffer","copy","_class","_init","_createSessionHandler","Session","loadModel","OnnxjsSessionHandler","rX","initTimeout","c8","_class2","_init2","_callee3","_context3","initWasm","_createSessionHandler2","_callee4","_context4","OnnxruntimeWebAssemblySessionHandler","_cacheKey","createAttributeWithCacheKey","onnxruntime","experimental","fbs","_attributes","getValue","getType","Attribute","delete","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","fromProto","fromOrtTensor","decodeUtf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","_i2","_callee6","_t11","_r3","_context6","initialize","dispose","WebGLBackend","_e11","_callee5","_e12","_t10","_e13","_n7","_context5","_class3","contextId","matmulMaxBatchSize","textureCacheMode","pack","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","WebGLSessionHandler","_o$GlslLib","_inherits","_createSuper","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","GlslLibRoutine","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","unpackedShape","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","getGlsl","floatTextureSetRGBA","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetR","ArrayUtil","arraysEqual","texture2D","_this2","programInfo","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","getBroadcastDims","getCoordsDataType","getGlChannels","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","squeezeInputShape","JSON","stringify","routineBody","getSqueezedParams","dependencies","_ref2","squeezeShape","newShape","keptDims","_ref3","_ref4","_ref5","_this3","getValueFromSingle","GlslLib","CoordsGlslLib","FunctionType","ValueBased","Positional","GlslContext","_class4","_class5","_class6","GlslLibRoutineNode","_class7","TopologicalSortGlslRoutines","_class8","Set","createOrderedNodes","dfsTraverse","has","_r$GlslLib","_super2","encodeFloat32","decodeFloat32","isLittleEndian","EncodingGlslLib","_r$GlslLib2","_super3","setFragColor","getColorAsFloat","FragColorGlslLib","replaceInlines","exec","trim","filter","body","_loop","GlslPreprocessor","_class9","_this4","libs","glslLibRoutineDependencyGraph","glslRegistry","getFunctions","addDependency","shaderSource","hasMain","getDefaultFragShaderMain","getFragShaderPreamble","getUniforms","variables","getImports","selectGlslLibRoutinesToBeIncluded","_this5","returnOrderedNodes","_step5","_iterator5","arrayLength","encoding","fragcolor","vec","VecGlslLib","shapeUtils","ShapeUtilsGlslLib","coordinates","_r$GlslLib3","_super4","bcastIndex","bcastMatmulIndex","incrementIndices","_this6","_this7","_this8","indexToOffsetSingle","_this9","offsetToIndicesSingle","_this10","varyingVertex","varyingFrag","outputDeclaration","getVertexShaderSource","_r$GlslLib4","_super5","binaryVecFunctions","copyVec","setVecItem","getVecItem","WebGLInferenceHandler","_class10","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","layoutStrategy","inputTypes","getOrCreateTextureData","cacheHint","programManager","getArtifact","createTextureLayoutFromTextureType","textureType","createTextureData","setArtifact","runProgram","executeProgram","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","numberData","createTextureLayoutFromShape","reverseWH","textureManager","createTextureFromLayout","createTextureDataFromTexture","unpacked","channels","texture","isReshapeCheap","processDims3D","reshapePacked","createPackedReshape3DProgramInfoLoader","_this11","readTexture","_ref6","_callee7","_context7","readTextureAsync","setTextureData","isInitializer","_this12","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","_readTextureAsync","_callee8","_context8","_x8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WEBGL_OP_RESOLVE_RULES","acos","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","parseCastAttributes","clip","parseClipAttributes","clipV11","parseConcatAttributes","conv","parseConvAttributes","convTranspose","parseConvTransposeAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","flatten","parseFlattenAttributes","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","padV2","parsePadAttributesV2","padV11","parsePadAttributesV11","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","resize","parseResizeAttributesV10","parseResizeAttributesV11","sin","sliceV10","parseSliceAttributes","parseSoftmaxAttributes","softmaxV13","parseSoftmaxAttributesV13","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","squeezeV13","sum","tan","tanh","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","unsqueezeV13","cacheKey","attributes","getFloat","getInt","epsilon","momentum","spatial","_e$calculateTextureWi","_e$calculateTextureWi2","_slicedToArray","glslAdd","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslPRelu","ProtoUtil","tensorDataTypeFromProto","createPackedConcatProgramInfoLoader","getChannels","unpackFromChannel","_step6","_iterator6","createUnpackedGroupedConvProgramInfoLoader","group","autoPad","dilations","kernelShape","pads","calculateOutputShape","_ref7","getActivationSnippet","activationFunction","applyActivation","conv2DPackedPointwise","createPackedMatmulProgramInfoLoader","conv2DPacked","createPackedIm2ColProgramInfoLoader","_toConsumableArray","_ref8","outputPadding","parseInternalActivationAttributes","getString","getInts","_ref9","reshapeUnpacked","createMatmulProgramInfoLoader","createIm2ColProgramInfoLoader","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","blocksize","_ref10","_ref11","activationCacheKey","calculateIm2ColDims","_e$calculateTextureWi3","_e$calculateTextureWi4","_e$calculateTextureWi5","_e$calculateTextureWi6","_ref12","flattenShape","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","_e$getFloats","getFloats","MIN_CLIP","MAX_CLIP","_e$getFloats2","normalizeAxis","NUMBER_TYPES","transA","transB","alpha","beta","isOptionalC","_o$GemmUtil$getShapeO","GemmUtil","getShapeOfGemmResult","_o$GemmUtil$getShapeO2","bias","_e$calculateTextureWi7","_e$calculateTextureWi8","_ref13","getBiasForMatmul","_ref14","unpackedReversed","getVecChannels","integerData","_e$calculateTextureWi9","_e$calculateTextureWi10","ceilMode","countIncludePad","_u18","_u19","storageOrder","_u20","_u21","adjustPoolAttributes","computePoolOutputShape","axes","normalizeAxes","validateInputs","parseUpsampleAttributes","_l4","_l5","coordinateTransformMode","scales","scalesInputIdx","sizesInputIdx","isResize","scalesValidation","starts","ends","some","_e$calculateTextureWi11","_e$calculateTextureWi12","_e$calculateTextureWi13","_e$calculateTextureWi14","_e$calculateTextureWi15","_e$calculateTextureWi16","_loop2","_o15","outputs","numOutputs","_o$SplitUtil$splitSha","SplitUtil","splitShape","_o$SplitUtil$splitSha2","_o$SplitUtil$splitSha3","_o$SplitUtil$splitSha4","downloadUint8AsFloat","glslAbs","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createUnpackProgramInfo","unsqueezeShape","inputs","opset","extrapolationValue","useExtrapolation","needRoiInput","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","_e$calculateTextureWi17","_e$calculateTextureWi18","_e$calculateTextureWi19","_e$calculateTextureWi20","_step7","_iterator7","_step8","_iterator8","ProgramManager","_class11","profiler","textureLayoutStrategy","repo","attributesBound","_this13","event","gl","program","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","_this14","vertexShader","deleteShader","deleteProgram","_this15","compile","getUniformLocations","getAttribLocations","compileShader","VERTEX_SHADER","debug","FRAGMENT_SHADER","createProgram","attachFramebuffer","position","textureCoord","setVertexAttributes","_step9","_this16","_iterator9","_loop3","_step9$value","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","bindTextureToUniform","getAttribLocation","_step10","_iterator10","getUniformLocation","_step11","_iterator11","_class12","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","getValues","initializers","_this17","resolveOperator","impl","opImpl","opInit","RedFloat32DataEncoder","_class13","internalFormat","R32F","format","RED","channelSize","RGBA32F","RGBA","allocate","RGBAFloatDataEncoder","_class14","Uint8DataEncoder","_class15","ALPHA","UNSIGNED_BYTE","assert","AlwaysKeepOriginalSizeStrategy","_class16","breakAxis","_class17","computeTexture","parseAxisParam","isInt","sizeFromShape","getRowsCols","sizeToSquarishShape","getBatchDim","_e$computeTextureWH","computeTextureWH","_e$computeTextureWH2","reversedWH","_class18","pendingRead","inUseTextures","idleTextures","textureLookup","toEncoderType","getEncoder","updateTexture","toTextureData","allocateTexture","_this18","toTensorData","_readTextureAsync2","_callee10","_e51","_this19","_context10","_callee9","_context9","createAndWaitForFence","_x9","_x10","_x11","_this20","deleteTexture","getPackedShape","repeatedTry","_ref16","_callee11","_args11","_context11","_x12","toUpperCase","OffscreenCanvas","depth","antialias","stencil","preserveDrawingBuffer","premultipliedAlpha","failIfMajorPerformanceCaveat","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","createNewWebGLContext","linearSearchLastTrue","_class19","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","scissor","readPixels","getParameter","ACTIVE_TEXTURE","TEXTURE0","TEXTURE_BINDING_2D","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","NO_ERROR","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createBuffer","createDefaultGeometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","getExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","POINTS","createQuery","beginQuery","TIME_ELAPSED_EXT","endQuery","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","QUERY_RESULT","deleteQuery","_waitForQueryAndGetTime","_callee12","_this21","_context12","isTimerResultAvailable","getTimerResult","waitForQueryAndGetTime","_x13","_createAndWaitForFence","_callee13","_context13","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","query","isFencePassed","_pollFence","_callee14","_this22","_context14","addItemToPoll","_x14","isDoneFn","resolveFn","_addItemToPoll","_callee15","_this23","_context15","pollItems","_x15","_x16","ExecutionPlan","_class20","_this24","getNodes","_ops","_starter","_step12","_iterator12","_values","getInputIndices","_execute","_callee18","_this25","_context19","_callee17","_loop4","_e56","_t44","_n37","_context18","createInferenceHandler","_context17","_callee16","_context16","_step13","_iterator13","to","_step14","_iterator14","getOutputIndices","getData","execute","_x17","_x18","Graph","_from","_to","tensorValueTypeFromProto","Node","tensorAttributesFromORTFormat","executeNode","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","_allInputNames","_allOutputIndices","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","_step15","_iterator15","_step16","_iterator16","tensorDimsFromProto","_step17","_iterator17","_step18","_iterator18","_step19","_iterator19","_step20","_iterator20","inputsLength","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","nodes","nodesLength","attributesLength","_this26","_loop5","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","_this27","_loop6","_t55","_t54","_loop7","_t57","_t56","_step21","_iterator21","_step22","_iterator22","deleteNode","_step23","_iterator23","_step24","_iterator24","isActivation","fatal","none","_class21","_class22","provider","minimalSeverity","logDateTime","logSourceLocation","toISOString","logLevel","category","startTime","endCallback","timer","_checkTimer","_callee19","_context20","endTimer","checkTimer","endTime","Profiler","_class23","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","logOneEvent","_ref19","_callee20","_context21","_x19","_ref20","_callee21","_context22","_x20","_this28","endSync","beginTimer","_ref21","_callee22","_context23","_x21","_end","_callee23","_context24","_x22","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","Model","_class24","loadFromOnnxFormat","loadFromOrtFormat","_opsets","_graph","flatbuffers","ByteBuffer","getRootAsInferenceSession","opsetImportLength","INT_TYPES","FLOAT_TYPES","endsWith","_step25","_iterator25","_step26","_iterator26","UNDEFINED","SPARSE_TENSOR","SPARSE_TENSORS","UNKNOWN","VALUE","PARAM","DimensionValueType","UINT8","INT8","UINT16","INT16","INT32","INT64","BOOL","FLOAT16","DOUBLE","UINT32","UINT64","COMPLEX64","COMPLEX128","BFLOAT16","TensorDataType","Primitive","Fused","NodeType","NONE","sequence_type","map_type","bb_pos","__offset","__init","__indirect","__vector","__vector_len","readInt32","setPosition","SIZE_PREFIX_LENGTH","startObject","addFieldOffset","startVector","addOffset","endVector","endObject","startShape","addDim","endShape","Shape","DimensionValue","__string","startDimension","addValue","addDenotation","endDimension","readInt8","readInt64","createLong","addFieldInt8","addFieldInt64","startDimensionValue","addDimType","addDimValue","addDimParam","endDimensionValue","addFieldInt32","startTensorTypeAndShape","addElemType","addShape","endTensorTypeAndShape","TypeInfo","startMapType","addKeyType","addValueType","endMapType","MapType","startSequenceType","endSequenceType","SequenceType","EdgeEnd","_class25","readUint32","prep","writeInt32","startNodeEdge","addNodeIndex","addInputEdges","addOutputEdges","endNodeEdge","NodeEdge","addInt32","startNode","addName","addDocString","addDomain","addSinceVersion","addIndex","addOpType","addType","addExecutionProviderType","addInputs","addOutputs","addAttributes","addInputArgCounts","addImplicitInputs","endNode","startValueInfo","endValueInfo","ValueInfo","readUint8","__union","startTypeInfo","endTypeInfo","startOperatorSetId","addVersion","endOperatorSetId","OperatorSetId","addInt64","addInt8","startTensor","addDims","addDataType","addRawData","addStringData","endTensor","startSparseTensor","addValues","addIndices","endSparseTensor","SparseTensor","readFloat32","addFieldFloat32","addFloat32","startAttribute","addF","addI","addS","addT","addG","addFloats","addInts","addStrings","addTensors","addGraphs","endAttribute","startGraph","addInitializers","addNodeArgs","addNodes","addMaxNodeIndex","addNodeEdges","addSparseInitializers","endGraph","startModel","addIrVersion","addOpsetImport","addProducerName","addProducerVersion","addModelVersion","addGraph","addGraphDocString","endModel","readUint64","startKernelCreateInfos","addNodeIndices","addKernelDefHashes","endKernelCreateInfos","KernelCreateInfos","SessionState","requiredField","startSubGraphSessionState","addGraphId","addSessionState","endSubGraphSessionState","SubGraphSessionState","startSessionState","addKernels","addSubGraphSessionStates","endSessionState","__has_identifier","startInferenceSession","addOrtVersion","addModel","endInferenceSession","_class26","_dispose","_callee24","_context25","_callee25","_t79","_n144","_context26","_x23","_x24","_x25","_class27","_initialized","backendHint","graphInputTypes","graphInputDims","_model","getInputNames","getOutputNames","_loadModel","_callee27","_this29","_context28","_callee26","_t80","_n145","_n146","_r36","_r37","_context27","sessionHandler","promisify","isView","_x26","_x27","_x28","_this30","onGraphInitialized","initializeOps","_executionPlan","_run2","_callee29","_this31","_context30","_callee28","_context29","normalizeAndValidateInputs","createOutput","_x29","validateInputTensorDims","validateInputTensorTypes","compareTensorDims","opsets","dataProvider","asyncDataProvider","cache","validateDimsAndCalcSize","_getData","_callee30","_context31","_strides","DataView","stringDataLength","rawDataArray","rawDataLength","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","checkInputsShape","_len","_key","_class28","MatMulUtil","_n157","fillIndex","_class29","dimsLength","_this32","_step27","_iterator27","MathUtil","_class30","determineSplit","calcReduceShape","calcReduceByAxis","ReduceUtil","adjustPadAndReturnShape","computeShapeHelper","iterateExtraOptions","entries","_ref24","_ref25","out","_callee31","_context32","wasmPaths","in","initializeWebAssembly","initOrt","_ref27","_callee32","_context33","loggingLevel","createSessionAllocate","_ref28","_callee33","_context34","_x32","createSessionFinalize","_ref29","_callee34","_context35","modeldata","_x33","_x34","createSession","_ref30","_callee35","_context36","_x35","_x36","releaseSession","_ref31","_callee36","_context37","_ref32","_callee37","_context38","sessionId","inputIndices","outputIndices","extractTransferableBuffers","_x38","_x39","_x40","_x41","_x42","_ref33","_callee38","_context39","setRunOptions","getInstance","logVerbosityLevel","tag","allocWasmString","extra","WeakSet","_class31","_createSessionAllocate","_callee39","_context40","_x44","_loadModel2","_callee40","_n165","_yield","_yield2","_n166","_yield3","_yield4","_yield5","_yield6","_context41","_x45","_x46","_dispose2","_callee41","_context42","_run3","_callee42","_e93","_this33","_context43","_x47","_x48","_x49","setSessionOptions","use_ort_model_bytes_directly","graphOptimizationLevel","enableCpuMemArena","enableMemPattern","executionMode","logId","enableProfiling","_step28","_iterator28","powerPreference","_ref34","_ref35","_ref36","_ref37","_loop8","_step29","_iterator29","_ref38","_callee43","_context44","MessageChannel","port1","validate","Blob","URL","createObjectURL","race","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","revokeObjectURL","encodeURIComponent","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","float32","float64","toFloat64","Builder","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","capacity","forceDefaults","dataBuffer","asUint8Array","growByteBuffer","writeInt8","writeInt16","writeInt64","writeFloat32","writeFloat64","addInt16","addFloat64","slot","addFieldInt16","addFieldFloat64","addFieldStruct","nested","notNested","readInt16","finishSizePrefixed","createString","bytes_","position_","readUint16","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","__webpack_module_cache__","__webpack_modules__","__webpack_exports__","MainMenu_vue_1","demo_titles_1","vue_class_component_1","App","$route","DEMO_TITLES","description","DEMO_DESCRIPTIONS","link","DEMO_MODEL_LINKS","MobileNet","input0","inputShape","concatAxisSize","dataN","dataNShape","axisIndex","axisPitch","outputBase","inputIndex","dataNDims","inputAxisPitch","inputData","inputSize","outputOffset","WebcamModelUI","webcamInitialized","mounted","webcamElement","webcamContainer","stopCamera","clearRects","clearCanvas","clearFileInput","webcamStream","getTracks","runLiveVideo","ctx_1","imageWidth","imageHeight","setup","mediaDevices","getUserMedia","audio","video","facingMode","stream","srcObject","onloadedmetadata","videoOrigWidth","videoWidth","videoOrigHeight","videoHeight","adjustVideoSize","pause","requestAnimationFrame","startCamera","play","capture","childNodes","removeChild","centerHeight","beginHeight","centerWidth","beginWidth","aspectRatio","mobilenet","squeezenet","emotion_ferplus","mnist"],"mappings":"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","file":"js/app.d175efaa.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/onnxruntime-web-demo/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[(_vm.modelLoading || _vm.modelInitializing)?_c('model-status',{attrs:{\"modelLoading\":_vm.modelLoading,\"modelInitializing\":_vm.modelInitializing}}):_vm._e(),_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-layout',{staticStyle:{\"margin\":\"auto\",\"width\":\"40%\",\"padding\":\"40px\"},attrs:{\"justify-center\":\"\",\"align-center\":\"\"}},[_c('div',{staticClass:\"select-backend\"},[_vm._v(\"Select Backend:\")]),_c('v-select',{attrs:{\"disabled\":_vm.modelLoading || _vm.modelInitializing || _vm.sessionRunning,\"items\":_vm.backendSelectList,\"label\":\"Switch Backend\",\"menu-props\":{ maxHeight: '750' },\"solo\":\"\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.sessionBackend),callback:function ($$v) {_vm.sessionBackend=$$v},expression:\"sessionBackend\"}})],1),_c('v-layout',[(_vm.modelLoadingError)?_c('v-flex',{staticClass:\"error-message\",staticStyle:{\"padding-bottom\":\"30px\"}},[_vm._v(\" Error: Current backend is not supported on your machine. Try Selecting a different backend. \")]):_vm._e()],1),_c('v-layout',{staticClass:\"image-panel elevation-1\",attrs:{\"row\":\"\",\"wrap\":\"\",\"justify-center\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"sm6\":\"\",\"md4\":\"\"}},[_c('div',{staticClass:\"input-column\"},[_c('div',{staticClass:\"input-container\"},[_c('div',{staticClass:\"input-label\"},[_vm._v(\"Draw any digit (0-9) here\")]),_c('div',{staticClass:\"canvas-container\"},[_c('canvas',{attrs:{\"id\":\"input-canvas\",\"width\":\"300\",\"height\":\"300\"},on:{\"mousedown\":_vm.activateDraw,\"mouseup\":_vm.run,\"mouseleave\":_vm.run,\"mousemove\":_vm.draw,\"touchstart\":_vm.activateDraw,\"touchend\":_vm.run,\"touchmove\":_vm.draw}})])]),_c('v-layout',{attrs:{\"align-end\":\"\",\"justify-end\":\"\"}},[_c('v-btn',{staticStyle:{\"margin\":\"0px\"},attrs:{\"color\":\"primary\"},on:{\"click\":_vm.clear}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"close\")]),_vm._v(\" Clear \")],1)],1)],1)]),_c('v-flex',{attrs:{\"sm6\":\"\",\"md4\":\"\"}},[_c('div',{staticClass:\"output-column\"},[_c('div',{staticClass:\"output\"},_vm._l((_vm.outputClasses),function(i){return _c('div',{key:`output-class-${i}`,staticClass:\"output-class\",class:{ predicted: i === _vm.predictedClass }},[_c('div',{staticClass:\"output-label\"},[_vm._v(_vm._s(i))]),_c('div',{staticClass:\"output-bar\",style:({ width: `${Math.round(180 * _vm.output[i])}px` })})])}),0)])])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport WebcamModel from \"../common/WebcamModelUI.vue\";\nimport { Vue, Component } from \"vue-property-decorator\";\nimport { runModelUtils } from \"../../utils/index\";\nimport { EMOTION_IMAGE_URLS } from \"../../data/sample-image-urls\";\nimport { Tensor, InferenceSession } from \"onnxruntime-web\";\n\nimport { softmax } from \"../../utils/math\";\n\nconst MODEL_FILEPATH_PROD = `/onnxruntime-web-demo/emotion.onnx`;\nconst MODEL_FILEPATH_DEV = \"/emotion.onnx\";\n\n@Component({\n  components: {\n    WebcamModel,\n  },\n})\nexport default class Emotion extends Vue {\n  imageUrls: Array<{ text: string; value: string }>;\n  modelFilepath: string;\n\n  constructor() {\n    super();\n    this.imageUrls = EMOTION_IMAGE_URLS;\n    this.modelFilepath =\n      process.env.NODE_ENV === \"production\"\n        ? MODEL_FILEPATH_PROD\n        : MODEL_FILEPATH_DEV;\n  }\n\n  warmupModel(session: InferenceSession) {\n    return runModelUtils.warmupModel(session, [1, 1, 64, 64]);\n  }\n\n  preprocess(ctx: CanvasRenderingContext2D): Tensor {\n    const data = this.scale(ctx);\n    const width = 64;\n    const height = 64;\n    // data processing\n    const greyScale = [];\n    for (let i = 0; i < data.length; i += 4) {\n      greyScale.push(\n        (data[i] * 0.299 + data[i + 1] * 0.587 + data[i + 2] * 0.114 - 127.5) /\n          127.5\n      );\n    }\n    const tensor = new Tensor(\"float32\", new Float32Array(width * height), [\n      1,\n      1,\n      width,\n      height,\n    ]);\n    (tensor.data as Float32Array).set(greyScale);\n    return tensor;\n  }\n\n  scale(ctx: CanvasRenderingContext2D): Uint8ClampedArray {\n    const scaledImage = document.getElementById(\n      \"temp-canvas\"\n    ) as HTMLCanvasElement;\n    const scaledCtx = scaledImage.getContext(\"2d\") as CanvasRenderingContext2D;\n    scaledImage.width = 64;\n    scaledImage.height = 64;\n    scaledCtx.drawImage(ctx.canvas, 0, 0, 64, 64);\n    return scaledCtx.getImageData(0, 0, 64, 64).data;\n  }\n\n  postprocess(tensor: Tensor, inferenceTime: number) {\n    const output = tensor.data;\n    const emotionMap = [\n      \"neutral\",\n      \"happiness\",\n      \"surprise\",\n      \"sadness\",\n      \"anger\",\n      \"disgust\",\n      \"fear\",\n      \"contempt\",\n    ];\n    const myOutput = softmax(Array.prototype.slice.call(output));\n\n    let maxInd = -1;\n    let maxProb = -1;\n    for (let i = 0; i < myOutput.length; i++) {\n      if (maxProb < myOutput[i]) {\n        maxProb = myOutput[i];\n        maxInd = i;\n      }\n    }\n\n    this.drawRect(\n      416 / 2 - 75,\n      0,\n      150,\n      50,\n      `${emotionMap[maxInd]}\\nTime: ${inferenceTime.toFixed(1)}ms`\n    );\n  }\n\n  drawRect(\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    text = \"\",\n    color = \"blue\"\n  ) {\n    const rect = document.createElement(\"div\");\n    const label = document.createElement(\"div\");\n    rect.style.cssText = `top: 0px;`;\n    label.style.cssText = \"font-size: 24px\";\n    label.innerText = text;\n    rect.appendChild(label);\n\n    (document.getElementById(\"webcam-container\") as HTMLElement).appendChild(\n      rect\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"img/mnist.85899b27.png\";","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('ImageModelUI',{attrs:{\"modelFilepath\":_vm.modelFilepath,\"imageSize\":224,\"imageUrls\":_vm.imageUrls,\"preprocess\":_vm.preprocess,\"getPredictedClass\":_vm.getPredictedClass}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport { Component, Vue } from \"vue-property-decorator\";\nconst DEMO_INFO = [\n  {\n    title: \"MobileNet, trained on ImageNet\",\n    path: \"mobilenet\",\n    imagePath: require(\"@/assets/mobilenet.png\"),\n  },\n  {\n    title: \"SqueezeNet, trained on ImageNet\",\n    path: \"squeezenet\",\n    imagePath: require(\"@/assets/squeezenet.png\"),\n  },\n  {\n    title: \"Emotion FerPlus\",\n    path: \"emotion_ferplus\",\n    imagePath: require(\"@/assets/emotion.png\"),\n  },\n  { title: \"Yolo\", path: \"yolo\", imagePath: require(\"@/assets/yolo.png\") },\n  { title: \"MNIST\", path: \"mnist\", imagePath: require(\"@/assets/mnist.png\") },\n];\n\n@Component\nexport default class HomePage extends Vue {\n  demoInfo: Array<{ title: string; path: string; imagePath: string }> =\n    DEMO_INFO;\n\n  constructor() {\n    super();\n    this.demoInfo = DEMO_INFO;\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageModelUI.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageModelUI.vue?vue&type=script&lang=ts&\"","module.exports = __webpack_public_path__ + \"img/emotion.3042a490.png\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelStatus.vue?vue&type=style&index=0&id=784ce5d0&prod&scoped=true&lang=postcss&\"","\nimport loadImage from \"blueimp-load-image\";\nimport { runModelUtils } from \"../../utils\";\n\nimport modelStatus from \"./ModelStatus.vue\";\nimport { InferenceSession, Tensor } from \"onnxruntime-web\";\nimport { Vue, Component, Prop, Watch } from \"vue-property-decorator\";\n\n@Component({\n  components: {\n    modelStatus,\n  },\n})\nexport default class ImageModelUI extends Vue {\n  @Prop({ type: String, required: true }) modelFilepath!: string;\n  @Prop({ type: Number, required: true }) imageSize!: number;\n  @Prop({ type: Array, required: true }) imageUrls!: Array<{\n    text: string;\n    value: string;\n  }>;\n  @Prop({ type: Function, required: true }) preprocess!: (\n    ctx: CanvasRenderingContext2D\n  ) => Tensor;\n  @Prop({ type: Function, required: true }) getPredictedClass!: (\n    output: Float32Array\n  ) => {};\n\n  sessionBackend: string;\n  backendSelectList: Array<{ text: string; value: string }>;\n  modelLoading: boolean;\n  modelInitializing: boolean;\n  modelLoadingError: boolean;\n  sessionRunning: boolean;\n  session: InferenceSession | undefined;\n  gpuSession: InferenceSession | undefined;\n  cpuSession: InferenceSession | undefined;\n  xnnpackSession: InferenceSession | undefined;\n  webnnGpuSession: InferenceSession | undefined;\n  webnnCpuSession: InferenceSession | undefined;\n\n  inferenceTime: number;\n  imageURLInput: string;\n  imageURLSelect: null;\n  imageURLSelectList: Array<{ text: string; value: string }>;\n  imageLoading: boolean;\n  imageLoadingError: boolean;\n  output: Tensor.DataType;\n  modelFile: ArrayBuffer;\n\n  constructor() {\n    super();\n    this.sessionBackend = \"webgl\";\n    this.backendSelectList = [\n      { text: \"GPU-WebGL\", value: \"webgl\" },\n      { text: \"CPU-WebAssembly\", value: \"wasm\" },\n      { text: \"XNNPACK-WebAssembly\", value: \"xnnpack\" },\n      { text: \"GPU-WebNN\", value: \"webnn_gpu\" },\n      { text: \"CPU-WebNN\", value: \"webnn_cpu\" },\n    ];\n    this.modelLoading = true;\n    this.modelInitializing = true;\n    this.modelLoadingError = false;\n    this.sessionRunning = false;\n    this.inferenceTime = 0;\n    this.imageURLInput = \"\";\n    this.imageURLSelect = null;\n    this.imageURLSelectList = this.imageUrls;\n    this.imageLoading = false;\n    this.imageLoadingError = false;\n    this.output = [];\n    this.modelFile = new ArrayBuffer(0);\n  }\n\n  async created() {\n    // fetch the model file to be used later\n    const response = await fetch(this.modelFilepath);\n    this.modelFile = await response.arrayBuffer();\n    try {\n      await this.initSession();\n    } catch (e) {\n      this.sessionBackend = \"wasm\";\n    }\n  }\n\n  async initSession() {\n    this.sessionRunning = false;\n    this.modelLoadingError = false;\n    if (this.sessionBackend === \"webgl\") {\n      if (this.gpuSession) {\n        this.session = this.gpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"wasm\") {\n      if (this.cpuSession) {\n        this.session = this.cpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"xnnpack\") {\n      if (this.xnnpackSession) {\n        this.session = this.xnnpackSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"webnn_gpu\") {\n      if (this.webnnGpuSession) {\n        this.session = this.webnnGpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"webnn_cpu\") {\n      if (this.webnnCpuSession) {\n        this.session = this.webnnCpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n\n    try {\n      if (this.sessionBackend === \"webgl\") {\n        this.gpuSession = await runModelUtils.createModelGpu(this.modelFile);\n        this.session = this.gpuSession;\n      } else if (this.sessionBackend === \"wasm\") {\n        this.cpuSession = await runModelUtils.createModelCpu(this.modelFile);\n        this.session = this.cpuSession;\n      } else if (this.sessionBackend === \"xnnpack\") {\n        this.xnnpackSession = await runModelUtils.createModelXnnpack(this.modelFile);\n        this.session = this.xnnpackSession;\n      } else if (this.sessionBackend === \"webnn_gpu\") {\n        this.webnnGpuSession = await runModelUtils.createModelWebnn(this.modelFile, 1);\n        this.session = this.webnnGpuSession;\n      } else if (this.sessionBackend === \"webnn_cpu\") {\n        this.webnnCpuSession = await runModelUtils.createModelWebnn(this.modelFile, 2);\n        this.session = this.webnnCpuSession;\n      }\n    } catch (e) {\n      console.log(e);\n      this.modelLoading = false;\n      this.modelInitializing = false;\n      if (this.sessionBackend === \"webgl\") {\n        this.gpuSession = undefined;\n      } else if (this.sessionBackend === \"wasm\") {\n        this.cpuSession = undefined;\n      } else if (this.sessionBackend === \"xnnpack\") {\n        this.xnnpackSession = undefined;\n      } else if (this.sessionBackend === \"webnn_gpu\") {\n        this.webnnGpuSession = undefined;\n      } else if (this.sessionBackend === \"webnn_cpu\") {\n        this.webnnCpuSession = undefined;\n      }\n      throw new Error(\"Error: Backend not supported. \");\n    }\n    this.modelLoading = false;\n    // warm up session with a sample tensor. Use setTimeout(..., 0) to make it an async execution so\n    // that UI update can be done.\n    if (this.sessionBackend === \"webgl\") {\n      setTimeout(() => {\n        runModelUtils.warmupModel(this.session!, [\n          1,\n          3,\n          this.imageSize,\n          this.imageSize,\n        ]);\n        this.modelInitializing = false;\n      }, 0);\n    } else {\n      await runModelUtils.warmupModel(this.session!, [\n        1,\n        3,\n        this.imageSize,\n        this.imageSize,\n      ]);\n      this.modelInitializing = false;\n    }\n  }\n\n  @Watch(\"sessionBackend\")\n  async onSessionBackendChange(newVal: string) {\n    this.sessionBackend = newVal;\n    this.clearAll();\n    try {\n      await this.initSession();\n    } catch (e) {\n      this.modelLoadingError = true;\n    }\n    return newVal;\n  }\n\n  @Watch(\"imageURLSelect\")\n  onImageURLSelectChange(newVal: string) {\n    this.imageURLInput = newVal;\n    this.loadImageToCanvas(newVal);\n  }\n\n  beforeDestroy() {\n    this.session = undefined;\n    this.gpuSession = undefined;\n    this.cpuSession = undefined;\n  }\n\n  get outputClasses() {\n    return this.getPredictedClass(Array.prototype.slice.call(this.output));\n  }\n\n  onImageURLInputEnter(e: any) {\n    this.imageURLSelect = null;\n    this.loadImageToCanvas(e.target.value);\n  }\n\n  handleFileChange(e: any) {\n    this.$emit(\"input\", e.target.files[0]);\n    this.loadImageToCanvas(e.target.files[0]);\n  }\n\n  loadImageToCanvas(url: string) {\n    if (!url) {\n      this.clearAll();\n      return;\n    }\n    this.imageLoading = true;\n    loadImage(\n      url,\n      (img) => {\n        if ((img as Event).type === \"error\") {\n          this.imageLoadingError = true;\n          this.imageLoading = false;\n        } else {\n          // load image data onto input canvas\n          const element = document.getElementById(\n            \"input-canvas\"\n          ) as HTMLCanvasElement;\n          if (element) {\n            const ctx = element.getContext(\"2d\");\n            if (ctx) {\n              ctx.drawImage(img as HTMLImageElement, 0, 0);\n              this.imageLoadingError = false;\n              this.imageLoading = false;\n              this.sessionRunning = true;\n              this.output = [];\n              this.inferenceTime = 0;\n              // session predict\n              this.$nextTick(function () {\n                setTimeout(() => {\n                  this.runModel();\n                }, 10);\n              });\n            }\n          }\n        }\n      },\n      {\n        maxWidth: this.imageSize,\n        maxHeight: this.imageSize,\n        cover: true,\n        crop: true,\n        canvas: true,\n        crossOrigin: \"Anonymous\",\n      }\n    );\n  }\n\n  async runModel() {\n    const element = document.getElementById(\n      \"input-canvas\"\n    ) as HTMLCanvasElement;\n    const ctx = element.getContext(\"2d\") as CanvasRenderingContext2D;\n    const preprocessedData = this.preprocess(ctx);\n    let tensorOutput = null;\n    [tensorOutput, this.inferenceTime] = await runModelUtils.runModel(\n      this.session!,\n      preprocessedData\n    );\n    this.output = tensorOutput.data;\n    this.sessionRunning = false;\n  }\n\n  clearAll() {\n    this.sessionRunning = false;\n    this.inferenceTime = 0;\n    this.imageURLInput = \"\";\n    this.imageURLSelect = null;\n    this.imageLoading = false;\n    this.imageLoadingError = false;\n    this.output = [];\n\n    const element = document.getElementById(\n      \"input-canvas\"\n    ) as HTMLCanvasElement;\n    if (element) {\n      const ctx = element.getContext(\"2d\");\n      if (ctx) {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      }\n    }\n\n    const file = document.getElementById(\"input-upload-image\") as HTMLInputElement;\n    if (file) {\n      file.value = '';\n    }\n  }\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageModelUI.vue?vue&type=style&index=0&id=e56ace00&prod&lang=postcss&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"demo home text-xs-center\"},[_c('v-img',{staticClass:\"banner\",attrs:{\"src\":require('@/assets/background.png')}},[_c('v-container',{staticClass:\"onnx-wrapper\"},[_c('v-layout',{attrs:{\"column\":\"\",\"justify-center\":\"\",\"align-center\":\"\"}},[_c('v-flex',{staticClass:\"onnx\"},[_vm._v(\"ONNX Runtime Web\")]),_c('v-flex',{staticClass:\"run-onnx\"},[_vm._v(\"Run ONNX model in the browser\")]),_c('v-flex',{staticClass:\"onnx-info\"},[_vm._v(\"Interactive ML without install and device independent\"),_c('br'),_vm._v(\" Latency of server-client communication reduced\"),_c('br'),_vm._v(\" Privacy and security ensured\"),_c('br'),_vm._v(\" GPU acceleration\")])],1)],1)],1),_c('div',{staticClass:\"demo-card-wrapper\"},_vm._l((_vm.demoInfo),function(info){return _c('div',{key:info.path,staticClass:\"demo-card\"},[_c('router-link',{attrs:{\"to\":`/${info.path}`}},[_c('div',{staticClass:\"demo-card-image\"},[_c('img',{attrs:{\"src\":info.imagePath}})]),_c('div',{staticClass:\"demo-card-heading\"},[_vm._v(_vm._s(info.title))])])],1)}),0)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport DrawingModelUI from \"../common/DrawingModelUI.vue\";\nimport { Vue, Component } from \"vue-property-decorator\";\nimport { Tensor } from \"onnxruntime-web\";\nimport { mathUtils } from \"../../utils\";\n\nconst MODEL_FILEPATH_PROD = `/onnxruntime-web-demo/mnist.onnx`;\nconst MODEL_FILEPATH_DEV = \"/mnist.onnx\";\n\n@Component({\n  components: {\n    DrawingModelUI,\n  },\n})\nexport default class MNIST extends Vue {\n  modelFilepath: string;\n  constructor() {\n    super();\n    this.modelFilepath =\n      process.env.NODE_ENV === \"production\"\n        ? MODEL_FILEPATH_PROD\n        : MODEL_FILEPATH_DEV;\n  }\n\n  preprocess(ctx: CanvasRenderingContext2D): Tensor {\n    // center crop\n    const imageDataCenterCrop = mathUtils.centerCrop(\n      ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n    );\n    const ctxCenterCrop = (\n      document.getElementById(\"input-canvas-centercrop\") as HTMLCanvasElement\n    ).getContext(\"2d\") as CanvasRenderingContext2D;\n    ctxCenterCrop.canvas.width = imageDataCenterCrop.width;\n    ctxCenterCrop.canvas.height = imageDataCenterCrop.height;\n    ctxCenterCrop.putImageData(imageDataCenterCrop, 0, 0);\n    // scaled to 28 x 28\n    const ctxScaled = (\n      document.getElementById(\"input-canvas-scaled\") as HTMLCanvasElement\n    ).getContext(\"2d\") as CanvasRenderingContext2D;\n    ctxScaled.save();\n    ctxScaled.scale(\n      28 / ctxCenterCrop.canvas.width,\n      28 / ctxCenterCrop.canvas.height\n    );\n    ctxScaled.clearRect(\n      0,\n      0,\n      ctxCenterCrop.canvas.width,\n      ctxCenterCrop.canvas.height\n    );\n    ctxScaled.drawImage(\n      document.getElementById(\"input-canvas-centercrop\") as HTMLCanvasElement,\n      0,\n      0\n    );\n    const imageDataScaled = ctxScaled.getImageData(\n      0,\n      0,\n      ctxScaled.canvas.width,\n      ctxScaled.canvas.height\n    );\n    ctxScaled.restore();\n    // process image data for model input\n    const { data } = imageDataScaled;\n    const input = new Float32Array(784);\n    for (let i = 0, len = data.length; i < len; i += 4) {\n      input[i / 4] = data[i + 3] / 255;\n    }\n\n    const tensor = new Tensor(\"float32\", input, [1, 1, 28, 28]);\n    return tensor;\n  }\n\n  postprocess(rawOutput: Tensor): Float32Array {\n    return mathUtils.softmax(Array.prototype.slice.call(rawOutput.data));\n  }\n\n  getPredictedClass(output: Float32Array) {\n    if (output.reduce((a, b) => a + b, 0) === 0) {\n      return -1;\n    }\n    return output.reduce(\n      (argmax, n, i) => (n > output[argmax] ? i : argmax),\n      0\n    );\n  }\n}\n","\nimport ndarray from \"ndarray\";\nimport ops from \"ndarray-ops\";\nimport WebcamModel from \"../common/WebcamModelUI.vue\";\nimport { Vue, Component, Prop } from \"vue-property-decorator\";\nimport { runModelUtils, yolo, yoloTransforms } from \"../../utils/index\";\nimport { YOLO_IMAGE_URLS } from \"../../data/sample-image-urls\";\nimport { Tensor, InferenceSession } from \"onnxruntime-web\";\n\nconst MODEL_FILEPATH_PROD = `/onnxruntime-web-demo/yolo.onnx`;\nconst MODEL_FILEPATH_DEV = \"/yolo.onnx\";\n\n@Component({\n  components: {\n    WebcamModel,\n  },\n})\nexport default class Yolo extends Vue {\n  @Prop(Boolean) hasWebGL!: boolean;\n  imageUrls: Array<{ text: string; value: string }>;\n  modelFilepath: string;\n\n  constructor() {\n    super();\n    this.imageUrls = YOLO_IMAGE_URLS;\n    this.modelFilepath =\n      process.env.NODE_ENV === \"production\"\n        ? MODEL_FILEPATH_PROD\n        : MODEL_FILEPATH_DEV;\n  }\n\n  warmupModel(session: InferenceSession) {\n    return runModelUtils.warmupModel(session, [1, 3, 416, 416]);\n  }\n\n  preprocess(ctx: CanvasRenderingContext2D): Tensor {\n    const imageData = ctx.getImageData(\n      0,\n      0,\n      ctx.canvas.width,\n      ctx.canvas.height\n    );\n    const { data, width, height } = imageData;\n    // data processing\n    const dataTensor = ndarray(new Float32Array(data), [width, height, 4]);\n    const dataProcessedTensor = ndarray(new Float32Array(width * height * 3), [\n      1,\n      3,\n      width,\n      height,\n    ]);\n\n    ops.assign(\n      dataProcessedTensor.pick(0, 0, null, null),\n      dataTensor.pick(null, null, 0)\n    );\n    ops.assign(\n      dataProcessedTensor.pick(0, 1, null, null),\n      dataTensor.pick(null, null, 1)\n    );\n    ops.assign(\n      dataProcessedTensor.pick(0, 2, null, null),\n      dataTensor.pick(null, null, 2)\n    );\n\n    const tensor = new Tensor(\"float32\", new Float32Array(width * height * 3), [\n      1,\n      3,\n      width,\n      height,\n    ]);\n    (tensor.data as Float32Array).set(dataProcessedTensor.data);\n    return tensor;\n  }\n\n  async postprocess(tensor: Tensor, inferenceTime: number) {\n    try {\n      const originalOutput = new Tensor(\n        \"float32\",\n        tensor.data as Float32Array,\n        [1, 125, 13, 13]\n      );\n      const outputTensor = yoloTransforms.transpose(\n        originalOutput,\n        [0, 2, 3, 1]\n      );\n\n      // postprocessing\n      const boxes = await yolo.postprocess(outputTensor, 20);\n      boxes.forEach((box) => {\n        const { top, left, bottom, right, classProb, className } = box;\n\n        this.drawRect(\n          left,\n          top,\n          right - left,\n          bottom - top,\n          `${className} Confidence: ${Math.round(\n            classProb * 100\n          )}% Time: ${inferenceTime.toFixed(1)}ms`\n        );\n      });\n    } catch (e) {\n      alert(\"Model is not valid!\");\n    }\n  }\n\n  drawRect(\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    text = \"\",\n    color = \"red\"\n  ) {\n    const webcamContainerElement = document.getElementById(\"webcam-container\") as HTMLElement;\n    // Depending on the display size, webcamContainerElement might be smaller than 416x416.\n    const [ox, oy] = [(webcamContainerElement.offsetWidth - 416) / 2, (webcamContainerElement.offsetHeight - 416) / 2];\n    const rect = document.createElement(\"div\");\n    rect.style.cssText = `top: ${y+oy}px; left: ${x+ox}px; width: ${w}px; height: ${h}px; border-color: ${color};`;\n    const label = document.createElement(\"div\");\n    label.innerText = text;\n    rect.appendChild(label);\n\n    webcamContainerElement.appendChild(\n      rect\n    );\n  }\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=6d959952&prod&scoped=true&lang=postcss&\"","\nimport { Vue, Component, Prop } from \"vue-property-decorator\";\nconst DEMO_INFO = [\n  {\n    model: \"MobileNet\",\n    title: \"MobileNet, trained on ImageNet\",\n    path: \"mobilenet\",\n  },\n  {\n    model: \"SqueezeNet\",\n    title: \"SqueezeNet, trained on ImageNet\",\n    path: \"squeezenet\",\n  },\n  {\n    model: \"Emotion FerPlus\",\n    title: \"Emotion FerPlus\",\n    path: \"emotion_ferplus\",\n  },\n  { model: \"Yolo\", title: \"Yolo\", path: \"yolo\" },\n  { model: \"MNIST\", title: \"MNIST\", path: \"mnist\" },\n];\n\n@Component\nexport default class MainMenu extends Vue {\n  @Prop({ default: \"home\" }) currentView: string;\n  demoInfo: Array<{ model: string; title: string; path: string }> = DEMO_INFO;\n  constructor() {\n    super();\n    this.demoInfo = DEMO_INFO;\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"","module.exports = __webpack_public_path__ + \"img/neutral.41a4c2f5.jpg\";","module.exports = __webpack_public_path__ + \"img/background.6c9d3202.png\";","module.exports = __webpack_public_path__ + \"img/angry_man.df5cc7c8.jpg\";","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=505391bf&prod&lang=postcss&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Emotion.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Emotion.vue?vue&type=script&lang=ts&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Squeezenet.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Squeezenet.vue?vue&type=script&lang=ts&\"","// Heavily derived from YAD2K (https://github.com/ModelDepot/tfjs-yolo-tiny-demo)\n\nimport {Tensor} from 'onnxruntime-web';\n\nimport classNames from '../data/yolo_classes';\n\nimport * as yolo from './utils-yolo/yoloPostprocess';\n\nexport const YOLO_ANCHORS = new Tensor(\n    'float32', Float32Array.from([\n      1.08,\n      1.19,\n      3.42,\n      4.41,\n      6.63,\n      11.38,\n      9.42,\n      5.11,\n      16.62,\n      10.52,\n    ]),\n    [5, 2]);\nconst DEFAULT_FILTER_BOXES_THRESHOLD = 0.01;\nconst DEFAULT_IOU_THRESHOLD = 0.4;\nconst DEFAULT_CLASS_PROB_THRESHOLD = 0.3;\nconst INPUT_DIM = 416;\n\nexport async function postprocess(outputTensor: Tensor, numClasses: number) {\n  const [boxXy, boxWh, boxConfidence, boxClassProbs] = yolo_head(outputTensor, YOLO_ANCHORS, 20);\n  const allBoxes = yolo_boxes_to_corners(boxXy, boxWh);\n  const [outputBoxes, scores, classes] =\n      await yolo_filter_boxes(allBoxes, boxConfidence, boxClassProbs, DEFAULT_FILTER_BOXES_THRESHOLD);\n  // If all boxes have been filtered out\n  if (outputBoxes == null) {\n    return [];\n  }\n\n  const width = yolo.scalar(INPUT_DIM);\n  const height = yolo.scalar(INPUT_DIM);\n\n  const imageDims = yolo.reshape(yolo.stack([height, width, height, width]), [\n    1,\n    4,\n  ]);\n\n  const boxes: Tensor = yolo.mul(outputBoxes, imageDims);\n\n  const [preKeepBoxesArr, scoresArr] = await Promise.all([\n    boxes.data,\n    scores.data,\n  ]);\n\n  const [keepIndx, boxesArr, keepScores] = non_max_suppression(\n      preKeepBoxesArr as Float32Array | Int32Array | Uint8Array, scoresArr as Float32Array | Int32Array | Uint8Array,\n      DEFAULT_IOU_THRESHOLD);\n\n  const classesIndxArr = (await yolo.gather(classes, new Tensor('int32', keepIndx)).data) as Float32Array;\n\n  const results: any[] = [];\n\n  classesIndxArr.forEach((classIndx, i) => {\n    const classProb = keepScores[i];\n    if (classProb < DEFAULT_CLASS_PROB_THRESHOLD) {\n      return;\n    }\n\n    const className = classNames[classIndx];\n    let [top, left, bottom, right] = boxesArr[i];\n\n    top = Math.max(0, top);\n    left = Math.max(0, left);\n    bottom = Math.min(416, bottom);\n    right = Math.min(416, right);\n\n    const resultObj = {\n      className,\n      classProb,\n      bottom,\n      top,\n      left,\n      right,\n    };\n\n    results.push(resultObj);\n  });\n  return results;\n}\n\nexport async function yolo_filter_boxes(\n    boxes: Tensor, boxConfidence: Tensor, boxClassProbs: Tensor, threshold: number) {\n  const boxScores = yolo.mul(boxConfidence, boxClassProbs);\n  const boxClasses = yolo.argMax(boxScores, -1);\n  const boxClassScores = yolo.max(boxScores, -1);\n  // Many thanks to @jacobgil\n  // Source: https://github.com/ModelDepot/tfjs-yolo-tiny/issues/6#issuecomment-387614801\n  const predictionMask = yolo.as1D(yolo.greaterEqual(boxClassScores, yolo.scalar(threshold)));\n\n  const N = predictionMask.size;\n  // linspace start/stop is inclusive.\n  const allIndices = yolo.cast(yolo.linspace(0, N - 1, N), 'int32');\n  const negIndices = yolo.zeros([N], 'int32');\n  const indices = yolo.where(predictionMask, allIndices, negIndices);\n\n  return [\n    yolo.gather(yolo.reshape(boxes, [N, 4]), indices),\n    yolo.gather(yolo.as1D(boxClassScores), indices),\n    yolo.gather(yolo.as1D(boxClasses), indices),\n  ];\n}\n\n/**\n * Given XY and WH tensor outputs of yolo_head, returns corner coordinates.\n * @param {Tensor} box_xy Bounding box center XY coordinate Tensor\n * @param {Tensor} box_wh Bounding box WH Tensor\n * @returns {Tensor} Bounding box corner Tensor\n */\nexport function yolo_boxes_to_corners(boxXy: Tensor, boxWh: Tensor) {\n  const two = new Tensor('float32', [2.0]);\n  const boxMins = yolo.sub(boxXy, yolo.div(boxWh, two));\n  const boxMaxes = yolo.add(boxXy, yolo.div(boxWh, two));\n\n  const dim0 = boxMins.dims[0];\n  const dim1 = boxMins.dims[1];\n  const dim2 = boxMins.dims[2];\n  const size = [dim0, dim1, dim2, 1];\n\n  return yolo.concat(\n      [\n        yolo.slice(boxMins, [0, 0, 0, 1], size),\n        yolo.slice(boxMins, [0, 0, 0, 0], size),\n        yolo.slice(boxMaxes, [0, 0, 0, 1], size),\n        yolo.slice(boxMaxes, [0, 0, 0, 0], size),\n      ],\n      3);\n}\n\n/**\n * Filters/deduplicates overlapping boxes predicted by YOLO. These\n * operations are done on CPU as AFAIK, there is no tfjs way to do it\n * on GPU yet.\n * @param {TypedArray} boxes Bounding box corner data buffer from Tensor\n * @param {TypedArray} scores Box scores data buffer from Tensor\n * @param {Number} iouThreshold IoU cutoff to filter overlapping boxes\n */\nexport function non_max_suppression(\n    boxes: Float32Array|Int32Array|Uint8Array, scores: Float32Array|Int32Array|Uint8Array, iouThreshold: number) {\n  // Zip together scores, box corners, and index\n  const zipped = [];\n  for (let i = 0; i < scores.length; i++) {\n    zipped.push([\n      scores[i],\n      [boxes[4 * i], boxes[4 * i + 1], boxes[4 * i + 2], boxes[4 * i + 3]],\n      i,\n    ]);\n  }\n  // Sort by descending order of scores (first index of zipped array)\n  const sortedBoxes = zipped.sort((a: number[], b: number[]) => b[0] - a[0]);\n\n  const selectedBoxes: any[] = [];\n\n  // Greedily go through boxes in descending score order and only\n  // return boxes that are below the IoU threshold.\n  sortedBoxes.forEach((box: any[]) => {\n    let add = true;\n    for (let i = 0; i < selectedBoxes.length; i++) {\n      // Compare IoU of zipped[1], since that is the box coordinates arr\n      // TODO: I think there's a bug in this calculation\n      const curIou = box_iou(box[1], selectedBoxes[i][1]);\n      if (curIou > iouThreshold) {\n        add = false;\n        break;\n      }\n    }\n    if (add) {\n      selectedBoxes.push(box);\n    }\n  });\n\n  // Return the kept indices and bounding boxes\n  return [\n    selectedBoxes.map((e) => e[2]),\n    selectedBoxes.map((e) => e[1]),\n    selectedBoxes.map((e) => e[0]),\n  ];\n}\n\n// Convert yolo output to bounding box + prob tensors\nexport function yolo_head(feats: Tensor, anchors: Tensor, numClasses: number) {\n  const numAnchors = anchors.dims[0];\n\n  const anchorsArray = yolo.reshape(anchors, [1, 1, numAnchors, 2]);\n\n  const convDims = feats.dims.slice(1, 3);\n\n  // For later use\n  const convDims0 = convDims[0];\n  const convDims1 = convDims[1];\n\n  let convHeightIndex = yolo.range(0, convDims[0]);\n  let convWidthIndex = yolo.range(0, convDims[1]);\n\n  convHeightIndex = yolo.tile(convHeightIndex, [convDims[1]]);\n\n  convWidthIndex = yolo.tile(yolo.expandDims(convWidthIndex, 0), [\n    convDims[0],\n    1,\n  ]);\n  convWidthIndex = yolo.as1D(yolo.transpose(convWidthIndex));\n\n  let convIndex = yolo.transpose(yolo.stack([convHeightIndex, convWidthIndex]));\n  convIndex = yolo.reshape(convIndex, [convDims[0], convDims[1], 1, 2]);\n  convIndex = yolo.cast(convIndex, feats.type);\n\n  feats = yolo.reshape(feats, [\n    convDims[0],\n    convDims[1],\n    numAnchors,\n    numClasses + 5,\n  ]);\n  const convDimsTensor = yolo.cast(yolo.reshape(new Tensor('int32', convDims), [1, 1, 1, 2]), feats.type);\n\n  let boxXy = yolo.sigmoid(yolo.slice(feats, [0, 0, 0, 0], [convDims0, convDims1, numAnchors, 2]));\n  let boxWh = yolo.exp(yolo.slice(feats, [0, 0, 0, 2], [convDims0, convDims1, numAnchors, 2]));\n  const boxConfidence = yolo.sigmoid(yolo.slice(feats, [0, 0, 0, 4], [convDims0, convDims1, numAnchors, 1]));\n  const boxClassProbs = yolo.softmax(yolo.slice(feats, [0, 0, 0, 5], [convDims0, convDims1, numAnchors, numClasses]));\n\n  boxXy = yolo.div(yolo.add(boxXy, convIndex), convDimsTensor);\n  boxWh = yolo.div(yolo.mul(boxWh, anchorsArray), convDimsTensor);\n  // boxXy = tf.mul(tf.add(boxXy, convIndex), 32);\n  // boxWh = tf.mul(tf.mul(boxWh, anchorsArray), 32);\n  return [boxXy, boxWh, boxConfidence, boxClassProbs];\n}\n\nexport function box_intersection(a: number[], b: number[]) {\n  const w = Math.min(a[3], b[3]) - Math.max(a[1], b[1]);\n  const h = Math.min(a[2], b[2]) - Math.max(a[0], b[0]);\n  if (w < 0 || h < 0) {\n    return 0;\n  }\n  return w * h;\n}\n\nexport function box_union(a: number[], b: number[]) {\n  const i = box_intersection(a, b);\n  return (a[3] - a[1]) * (a[2] - a[0]) + (b[3] - b[1]) * (b[2] - b[0]) - i;\n}\n\nexport function box_iou(a: number[], b: number[]) {\n  return box_intersection(a, b) / box_union(a, b);\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('DrawingModelUI',{attrs:{\"modelFilepath\":_vm.modelFilepath,\"preprocess\":_vm.preprocess,\"postprocess\":_vm.postprocess,\"getPredictedClass\":_vm.getPredictedClass}}),_c('canvas',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"input-canvas-scaled\",\"width\":\"28\",\"height\":\"28\"}}),_c('canvas',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"input-canvas-centercrop\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {Tensor} from 'onnxruntime-web';\n\nimport {binaryOp} from './binary-op';\nimport {concat as concatImpl} from './concat';\nimport {reshape as reshapeImpl} from './reshape';\nimport {softmax as softmaxImpl} from './softmax';\nimport {transpose as transposeImpl} from './transpose';\nimport * as unaryOps from './unary-op';\nimport {ShapeUtil, TypedArrayUtil, TypeUtil} from './yoloPostprocessUtils';\n\n// Types\nexport type Type = Tensor.Type;  //'string'|'int32'|'float32'|'bool';\nexport type NumberType = 'int32'|'float32';\nexport type NumberOrBoolType = 'int32'|'float32'|'bool';\nexport type NumberDataType = Uint8Array|Int32Array|Float32Array;\n\n// Utility Tensor Creators\nexport function as1D(t: Tensor): Tensor {\n  return reshape(t, [t.data.length]);\n}\n\nexport function scalar(value: number, dtype: NumberType = 'float32'): Tensor {\n  if (dtype !== 'float32' && dtype !== 'int32') {\n    throw new Error('Unsupported type for this transformation');\n  }\n  const data = TypedArrayUtil.createTypedArray(dtype, 1);\n  data[0] = value;\n  return new Tensor(dtype, data, [1]);\n}\n\nexport function zeros(dims: ReadonlyArray<number>, dtype: NumberType = 'float32'): Tensor {\n  if (dtype !== 'float32' && dtype !== 'int32' && dtype !== 'bool') {\n    throw new Error('Unsupported type for creating all zero Tensor');\n  }\n  ShapeUtil.validateDims(dims);\n  return new Tensor(dtype, TypedArrayUtil.createTypedArray(dtype, ShapeUtil.size(dims)), dims);\n}\n\nexport function linspace(start: number, stop: number, num: number): Tensor {\n  if (num === 0) {\n    throw new Error('Must request atleast one sample');\n  }\n  const increments = (stop - start) / (num - 1);\n  const data = TypedArrayUtil.createTypedArray('float32', num);\n  data[0] = start;\n  for (let i = 1; i < data.length; i++) {\n    data[i] = data[i - 1] + increments;\n  }\n  return new Tensor('float32', data, [num]);\n}\n\nexport function range(start: number, stop: number, step = 1, dtype: NumberType = 'float32'): Tensor {\n  if (step === 0) {\n    throw new Error('Step size of 0 is not acceptable');\n  }\n  // adjust default values\n  if (stop < step && step === 1) {\n    step = -1;\n  }\n  // the following conditions cannot generate any data\n  if (start === step || (start < stop && step < 0) || (stop < start && step > 0)) {\n    return new Tensor(dtype, TypedArrayUtil.createTypedArray(dtype, 1), [1]);\n  }\n  const size = Math.abs(Math.ceil((stop - start) / step));\n  const data = TypedArrayUtil.createTypedArray(dtype, size);\n  data[0] = start;\n  for (let i = 1; i < data.length; i++) {\n    data[i] = data[i - 1] + step;\n  }\n  return new Tensor(dtype, data, [size]);\n}\n\n// Basic Math Tensor Transforms\nexport function sigmoid(t: Tensor): Tensor {\n  if (t.type !== 'float32' && t.type !== 'int32') {\n    throw new Error('Unsupported type for transform');\n  }\n  return unaryOps.sigmoid(t);\n}\n\nexport function exp(t: Tensor): Tensor {\n  if (t.type !== 'float32' && t.type !== 'int32') {\n    throw new Error('Unsupported type for transform');\n  }\n  return unaryOps.exp(t);\n}\n\n// Arithmetic Tensor Transforms\nexport function add(t1: Tensor, t2: Tensor): Tensor {\n  if ((t1.type !== 'float32' && t1.type !== 'int32') || (t2.type !== 'float32' && t2.type !== 'int32')) {\n    throw new Error('Unsupported type for transform');\n  }\n  if (t1.type !== t2.type) {\n    throw new Error('Types are not homogeneous');\n  }\n  return binaryOp(t1, t2, (e1, e2) => (e1 + e2), t1.type);\n}\n\nexport function sub(t1: Tensor, t2: Tensor): Tensor {\n  if ((t1.type !== 'float32' && t1.type !== 'int32') || (t2.type !== 'float32' && t2.type !== 'int32')) {\n    throw new Error('Unsupported type for transform');\n  }\n  if (t1.type !== t2.type) {\n    throw new Error('Types are not homogeneous');\n  }\n  return binaryOp(t1, t2, (e1, e2) => (e1 - e2), t1.type);\n}\n\nexport function mul(t1: Tensor, t2: Tensor): Tensor {\n  if ((t1.type !== 'float32' && t1.type !== 'int32') || (t2.type !== 'float32' && t2.type !== 'int32')) {\n    throw new Error('Unsupported type for transform');\n  }\n  if (t1.type !== t2.type) {\n    throw new Error('Types are not homogeneous');\n  }\n  return binaryOp(t1, t2, (e1, e2) => (e1 * e2), t1.type);\n}\n\nexport function div(t1: Tensor, t2: Tensor): Tensor {\n  if ((t1.type !== 'float32' && t1.type !== 'int32') || (t2.type !== 'float32' && t2.type !== 'int32')) {\n    throw new Error('Unsupported type for transform');\n  }\n  if (t1.type !== t2.type) {\n    throw new Error('Types are not homogeneous');\n  }\n  // TODO: Handle division by zero if any\n  return binaryOp(t1, t2, (e1, e2) => (e1 / e2), t1.type);\n}\n\n// Normalization Tensor Transforms\nexport function softmax(t: Tensor, dim = -1): Tensor {\n  if (t.type !== 'float32' && t.type !== 'int32') {\n    throw new Error('Unsupported type for transform');\n  }\n  return softmaxImpl(t, dim);\n}\n\n// Slice And Join Tensor Transforms\nexport function concat(tensors: Tensor[], axis = 0, typeCheckRequired = true): Tensor {\n  if (tensors.length < 2) {\n    throw new Error('Must have atleast 2 tensors to concatenate');\n  }\n\n  if (typeCheckRequired) {\n    const types: Type[] = [];\n    tensors.forEach(t => {\n      types.push(t.type);\n    });\n    TypeUtil.validateSameTypes(types);\n  }\n\n  return concatImpl(tensors, axis);\n}\n\nexport function stack(tensors: Tensor[], axis = 0): Tensor {\n  if (tensors.length < 2) {\n    throw new Error('Must have atleast 2 tensors to stack');\n  }\n\n  const types: Type[] = [];\n  const shapes: Array<ReadonlyArray<number>> = [];\n  tensors.forEach(t => {\n    types.push(t.type);\n    shapes.push(t.dims ? t.dims : [t.data.length]);\n  });\n  TypeUtil.validateSameTypes(types);\n  ShapeUtil.validateEqualDims(shapes);\n  const rank = tensors[0].dims ? tensors[0].dims.length : 1;\n  axis = ShapeUtil.getActualAxisFromNegativeValue(axis, rank);\n  const expanded = tensors.map(t => expandDims(t, axis));\n  return concat(expanded, axis, false);\n}\n\nexport function gather(t: Tensor, indices: Tensor, axis = 0): Tensor {\n  if (t.type === 'string') {\n    throw new Error('Unspported type for this transformation');\n  }\n  if (indices.type !== 'int32' || (indices.dims && indices.dims.length > 1)) {\n    throw new Error('Indices tensor not of specified format');\n  }\n  const dims = t.dims ? t.dims.slice() : [t.data.length];\n  const newDims = dims;\n  const indicesData = indices.data;\n  newDims[axis] = indicesData.length;\n  const dimsStrides = ShapeUtil.computeStrides(dims);\n  const newDimsStrides = ShapeUtil.computeStrides(newDims);\n  const Y = TypedArrayUtil.createTypedArray(t.type, ShapeUtil.size(newDims));\n  const X = t.data;\n  for (let i = 0; i < Y.length; ++i) {\n    const newLogicalIndex = ShapeUtil.offsetToIndices(i, newDimsStrides);\n    const oldLogicalIndex = newLogicalIndex.slice();\n    oldLogicalIndex[axis] = indicesData[newLogicalIndex[axis]] as number;\n    const oldOffset = ShapeUtil.indicesToOffset(oldLogicalIndex, dimsStrides);\n    Y[i] = X[oldOffset] as number;\n  }\n  return new Tensor(t.type, Y, newDims);\n}\n\nexport function slice(t: Tensor, begin: number[], size: number[]): Tensor {\n  if (t.type === 'string') {\n    throw new Error('Unspported type for this transformation');\n  }\n  const newDimsStride = ShapeUtil.computeStrides(size);\n  const oldDimsStride = ShapeUtil.computeStrides(t.dims ? t.dims : [t.data.length]);\n  const X = t.data;\n  const Y = TypedArrayUtil.createTypedArray(t.type, ShapeUtil.size(size));\n  for (let i = 0; i < Y.length; ++i) {\n    const newLogicalIndex = ShapeUtil.offsetToIndices(i, newDimsStride);\n    const oldLogicalIndex = newLogicalIndex.map((idx, j) => idx + begin[j]);\n    const oldOffset = ShapeUtil.indicesToOffset(oldLogicalIndex, oldDimsStride);\n    Y[i] = X[oldOffset] as number;\n  }\n  return new Tensor(t.type, Y, size);\n}\n\nexport function tile(t: Tensor, reps: ReadonlyArray<number>): Tensor {\n  if (t.type === 'string') {\n    throw new Error('Unspported type for this transformation');\n  }\n  const dims = t.dims ? t.dims : [t.data.length];\n  const rank = dims.length;\n  const newDims = new Array(rank);\n  if (rank !== reps.length) {\n    throw new Error('Repetitions must be of the same rank as input dims');\n  }\n  for (let i = 0; i < rank; i++) {\n    newDims[i] = dims[i] * reps[i];\n  }\n  const dimsStrides = ShapeUtil.computeStrides(dims);\n  const newDimsStrides = ShapeUtil.computeStrides(newDims);\n  const Y = TypedArrayUtil.createTypedArray(t.type, ShapeUtil.size(newDims));\n  const X = t.data;\n  for (let i = 0; i < Y.length; ++i) {\n    const newLogicalIndex = ShapeUtil.offsetToIndices(i, newDimsStrides);\n    const oldLogicalIndex = new Array(rank);\n    for (let j = 0; j < rank; ++j) {\n      oldLogicalIndex[j] = newLogicalIndex[j] % t.dims[j];\n    }\n    const oldOffset = ShapeUtil.indicesToOffset(oldLogicalIndex, dimsStrides);\n    Y[i] = X[oldOffset] as number;\n  }\n  return new Tensor(t.type, Y, newDims);\n}\n\n// Permutation Tensor Transforms\nexport function transpose(t: Tensor, perm?: number[]): Tensor {\n  return transposeImpl(t, perm);\n}\n\n// Shape Tensor Transforms\nexport function expandDims(t: Tensor, axis = 0): Tensor {\n  axis = ShapeUtil.getActualAxisFromNegativeValue(axis, t.dims ? t.dims.length : 1);\n  const dims = t.dims ? t.dims : [t.data.length];\n  const changedShapeLength = dims.length + 1;\n  const changedShape = new Array<number>(changedShapeLength);\n  let iter = 0;\n  for (let i = 0; i < changedShapeLength; ++i) {\n    if (i === axis) {\n      changedShape[i] = 1;\n    } else {\n      changedShape[i] = dims[iter++];\n    }\n  }\n  return new Tensor(t.type, t.data, changedShape);\n}\n\n// Logical Tensor Transforms\nexport function greaterEqual(t1: Tensor, t2: Tensor): Tensor {\n  if ((t1.type !== 'float32' && t1.type !== 'int32' && t1.type !== 'bool') ||\n      (t2.type !== 'float32' && t2.type !== 'int32' && t2.type !== 'bool')) {\n    throw new Error('Unsupported type for transform');\n  }\n  if (t1.type !== t2.type) {\n    throw new Error('Types are not homogeneous');\n  }\n  return binaryOp(t1, t2, (e1, e2) => (e1 >= e2 ? 1 : 0), 'bool');\n}\n\nexport function where(condition: Tensor, t1: Tensor, t2: Tensor): Tensor {\n  // validate shape and types of input tensors and condition tensor\n  ShapeUtil.areEqual(t1.dims ? t1.dims : [t1.data.length], t2.dims ? t2.dims : [t2.data.length]);\n  TypeUtil.validateSameTypes([t1.type, t2.type]);\n  if (condition.type !== 'bool') {\n    throw new Error('Condition tensor must be bool type');\n  }\n\n  // create output\n  const outputShape = t1.dims ? t1.dims : [t1.data.length];\n  const output =\n      new Tensor(t1.type, TypedArrayUtil.createTypedArray(t1.type, ShapeUtil.size(outputShape)), outputShape);\n  const outputData = output.data;\n\n  // input data\n  const conditionData = condition.data;\n  const X = t1.data;\n  const Y = t2.data;\n\n  // condition is 1D rank\n  if (!condition.dims || condition.dims.length === 1) {\n    // the outermost dimension of the input tensors and condition tensor must be the same\n    const conditionDims = condition.dims ? condition.dims : [condition.data.length];\n    const t1Dims = t1.dims ? t1.dims : [t1.data.length];\n    if (conditionDims[0] !== t1Dims[0]) {\n      throw new Error('Outermost dimensions of input tensors and condition tensor must match');\n    }\n\n    let offset = 1;\n    // Input tensors are not 1-D. Need to compute offset.\n    if (t1.dims && t1.dims.length > 1) {\n      for (let i = 1; i < t1.dims.length; ++i) {\n        offset *= t1.dims[i];\n      }\n    }\n\n    for (let i = 0; i < conditionData.length; ++i) {\n      for (let j = 0; j < offset; ++j) {\n        outputData[i * offset + j] = conditionData[i] > 0 ? X[i * offset + j] : Y[i * offset + j];\n      }\n    }\n  } else {\n    // The shapes of input tensors and condition tensor must be the same\n    ShapeUtil.areEqual(condition.dims, t2.dims ? t2.dims : [t2.data.length]);\n\n    for (let i = 0; i < conditionData.length; ++i) {\n      outputData[i] = conditionData[i] > 0 ? X[i] : Y[i];\n    }\n  }\n  return output;\n}\n\n// Cast Tensor Transforms\nexport function cast(t: Tensor, dtype: Type): Tensor {\n  // TODO: If the requested type and the given type are the same, return same tensor ?\n  // Need to investigate if it breaks some basic assumptions\n  switch (dtype) {\n    case 'int32':\n      return new Tensor('int32', Int32Array.from(t.data as NumberDataType), t.dims ? t.dims : [t.data.length]);\n    case 'float32':\n      return new Tensor('float32', Float32Array.from(t.data as NumberDataType), t.dims ? t.dims : [t.data.length]);\n    case 'bool':\n      return new Tensor('bool', Uint8Array.from(t.data as NumberDataType), t.dims ? t.dims : [t.data.length]);\n    default:\n      throw new Error('Unsupported type for casting');\n  }\n}\n\nexport function reshape(t: Tensor, dims: ReadonlyArray<number>): Tensor {\n  return reshapeImpl(t, dims);\n}\n\n// Reduction Tensor Transforms\nexport function argMax(t: Tensor, axis = 0): Tensor {\n  if (t.type !== 'float32' && t.type !== 'int32') {\n    throw new Error('Unsupported type for transform');\n  }\n  const rank = t.dims ? t.dims.length : 1;\n  axis = ShapeUtil.getActualAxisFromNegativeValue(axis, rank);\n  const [reduceDims, resultDims] = ShapeUtil.splitDimsIntoTwo(t.dims ? t.dims : [t.data.length], axis);\n  const X = t.data;\n  const Y = TypedArrayUtil.createTypedArray('int32', resultDims.length === 0 ? 1 : ShapeUtil.size(resultDims));\n  const blockSize = reduceDims[0];\n  for (let i = 0; i < Y.length; ++i) {\n    const offset = blockSize * i;\n    let max = X[offset];\n    let index = 0;\n    for (let j = 0; j < blockSize; ++j) {\n      const value = X[offset + j];\n      if (value > max) {\n        max = value;\n        index = j;\n      }\n    }\n    Y[i] = index;\n  }\n  return new Tensor('int32', Y, resultDims.length === 0 ? [1] : resultDims);\n}\n\nexport function max(t: Tensor, axis = 0, keepDims = false): Tensor {\n  if (t.type !== 'float32' && t.type !== 'int32') {\n    throw new Error('Unsupported type for transform');\n  }\n  const rank = t.dims ? t.dims.length : 1;\n  axis = ShapeUtil.getActualAxisFromNegativeValue(axis, rank);\n  const [reduceDims, resultDims] = ShapeUtil.splitDimsIntoTwo(t.dims ? t.dims : [t.data.length], axis);\n  const X = t.data as NumberDataType;\n  const Y = TypedArrayUtil.createTypedArray(t.type, resultDims.length === 0 ? 1 : ShapeUtil.size(resultDims));\n  const blockSize = reduceDims[0];\n  for (let i = 0; i < Y.length; ++i) {\n    const offset = blockSize * i;\n    let max = X[offset];\n    for (let j = 0; j < blockSize; ++j) {\n      const value = X[offset + j];\n      if (value > max) {\n        max = value;\n      }\n    }\n    Y[i] = max;\n  }\n\n  let adjustedResultDims: number[] = [];\n  if (keepDims) {\n    const origDims = t.dims ? t.dims : [t.data.length];\n    for (let i = 0; i < origDims.length; ++i) {\n      if (i === axis) {\n        adjustedResultDims.push(1);\n      } else {\n        adjustedResultDims.push(origDims[i]);\n      }\n    }\n  } else {\n    adjustedResultDims = resultDims;\n  }\n  return new Tensor(t.type, Y, adjustedResultDims.length === 0 ? [1] : adjustedResultDims);\n}\n","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=505391bf&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=505391bf&prod&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/squeezenet.8d4b3bf8.png\";","import { render, staticRenderFns } from \"./MNIST.vue?vue&type=template&id=6b5be7f2&\"\nimport script from \"./MNIST.vue?vue&type=script&lang=ts&\"\nexport * from \"./MNIST.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./Emotion.vue?vue&type=template&id=7ab8b530&\"\nimport script from \"./Emotion.vue?vue&type=script&lang=ts&\"\nexport * from \"./Emotion.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('ImageModelUI',{attrs:{\"modelFilepath\":_vm.modelFilepath,\"imageSize\":224,\"imageUrls\":_vm.imageUrls,\"preprocess\":_vm.preprocess,\"getPredictedClass\":_vm.getPredictedClass}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('aside',{staticClass:\"menu\"},[_vm._m(0),_c('p',{staticClass:\"menu-label\"},[_vm._v(\"Demos\")]),_c('ul',{staticClass:\"menu-list\"},_vm._l((_vm.demoInfo),function(info){return _c('li',{key:info.path,class:{ active: _vm.currentView === 'mobilenet' }},[_c('router-link',{attrs:{\"to\":`/${info.path}`}},[_c('span',{staticClass:\"menu-item-heading\"},[_vm._v(_vm._s(info.model))])])],1)}),0),_c('p',{staticClass:\"menu-label\"},[_vm._v(\"Links\")]),_vm._m(1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"logo\"},[_c('a',{attrs:{\"href\":\".\"}},[_vm._v(\"ONNX Runtime Web\")])])\n},function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('ul',{staticClass:\"menu-list github\"},[_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/microsoft/onnxruntime/tree/master/js/web#readme\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_c('span',{staticClass:\"menu-item-heading\"},[_vm._v(\" ONNX Runtime Web GitHub\")])])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/Microsoft/onnxruntime-web-demo\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_c('span',{staticClass:\"menu-item-heading\"},[_vm._v(\" ONNX Runtime Web demo Github\")])])]),_c('li',[_c('a',{attrs:{\"href\":\"https://onnx.ai/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_c('span',{staticClass:\"menu-item-heading\"},[_vm._v(\" ONNX\")])])])])\n}]\n\nexport { render, staticRenderFns }","import {InferenceSession, Tensor, env} from 'onnxruntime-web';\n\nfunction init() {\n  env.wasm.proxy = true;\n  env.wasm.numThreads = 1;\n  env.wasm.simd = true;\n}\n\nexport async function createModelCpu(model: ArrayBuffer): Promise<InferenceSession> {\n  init();\n  // Copy the buffer of model since which was detached in Web Worker proxy\n  return await InferenceSession.create(model.slice(0), {executionProviders: ['wasm']});\n}\nexport async function createModelGpu(model: ArrayBuffer): Promise<InferenceSession> {\n  init();\n  return await InferenceSession.create(model, {executionProviders: ['webgl']});\n}\nexport async function createModelXnnpack(model: ArrayBuffer): Promise<InferenceSession> {\n  init();\n  // Copy the buffer of model since which was detached in Web Worker proxy\n  return await InferenceSession.create(model.slice(0), {executionProviders: ['xnnpack']});\n}\nexport async function createModelWebnn(model: ArrayBuffer, deviceType: number = 0): Promise<InferenceSession> {\n  init();\n  // Build version\n  // env.wasm.wasmPaths = {\n  //   \"ort-wasm.wasm\": location.origin + \"/onnxruntime-web-demo/js/ort-wasm.wasm\",\n  //   \"ort-wasm-simd.wasm\": location.origin + \"/onnxruntime-web-demo/js/ort-wasm-simd.wasm\",\n  //   \"ort-wasm-threaded.wasm\": location.origin + \"/onnxruntime-web-demo/js/ort-wasm-threaded.wasm\",\n  //   \"ort-wasm-simd-threaded.wasm\":\n  //       location.origin + \"/onnxruntime-web-demo/js/ort-wasm-simd-threaded.wasm\",\n  // };\n  // Copy the buffer of model since which was detached in Web Worker proxy\n  return await InferenceSession.create(model.slice(0),\n      { executionProviders: ['wasm', { name: 'webnn', deviceType }], logSeverityLevel: 0 });\n}\n\nexport async function warmupModel(model: InferenceSession, dims: number[]) {\n  // OK. we generate a random input and call Session.run() as a warmup query\n  const size = dims.reduce((a, b) => a * b);\n  const warmupTensor = new Tensor('float32', new Float32Array(size), dims);\n\n  for (let i = 0; i < size; i++) {\n    warmupTensor.data[i] = Math.random() * 2.0 - 1.0;  // random value [-1.0, 1.0)\n  }\n  try {\n    const feeds: Record<string, Tensor> = {};\n    feeds[model.inputNames[0]] = warmupTensor;\n    const start = performance.now();\n    await model.run(feeds);\n    console.log(`warm up time: ${(performance.now() - start).toFixed(2)} ms`);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport async function runModel(model: InferenceSession, preprocessedData: Tensor): Promise<[Tensor, number]> {\n  try {\n    let inferenceTime;\n    let output: any;\n    let inferenceTimeArray = [];\n    const numRuns = getNumRuns();\n    console.log(`Start inference for ${numRuns} times...`);\n    for (let i = 0; i < numRuns; i ++) {\n      // Copy the data of preprocessedData since which was detached in Web Worker proxy\n      const newTensor = new Tensor(preprocessedData.type, preprocessedData.data.slice(0), preprocessedData.dims);\n      const feeds: Record<string, Tensor> = {};\n      feeds[model.inputNames[0]] = newTensor;\n      const start = performance.now();\n      // console.time(\"model inference\");\n      const outputData = await model.run(feeds);\n      // console.timeEnd(\"model inference\");\n      inferenceTime = performance.now() - start;\n      inferenceTimeArray.push(inferenceTime);\n      output = outputData[model.outputNames[0]];\n      console.log(`num ${i+1} inference time: ${inferenceTime.toFixed(2)}`);\n    }\n    inferenceTime = getMedianValue(inferenceTimeArray);\n    console.log(`Done... median inference time is ${inferenceTime.toFixed(2)} ms`);\n    return [output, inferenceTime];\n  } catch (e) {\n    console.error(e);\n    throw new Error();\n  }\n}\n\n// Get median value from an array of Number\nfunction getMedianValue(array: Array<any>) {\n  array = array.sort((a, b) => a - b);\n  return array.length % 2 !== 0 ? array[Math.floor(array.length / 2)] :\n      (array[array.length / 2 - 1] + array[array.length / 2]) / 2;\n}\n\nfunction getNumRuns() {\n  const params = new URLSearchParams(location.hash.split('?')[1]);\n  let numRunsParam = params.get('numRuns');\n  if (numRunsParam && Number.isInteger(parseInt(numRunsParam)) && parseInt(numRunsParam) > 0) {\n    return parseInt(numRunsParam);\n  } else {\n    return 1;\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelStatus.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModelStatus.vue?vue&type=script&lang=ts&\"","module.exports = __webpack_public_path__ + \"img/neutral_girl.3bfb07f9.jpg\";","import { render, staticRenderFns } from \"./ModelStatus.vue?vue&type=template&id=784ce5d0&scoped=true&\"\nimport script from \"./ModelStatus.vue?vue&type=script&lang=ts&\"\nexport * from \"./ModelStatus.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ModelStatus.vue?vue&type=style&index=0&id=784ce5d0&prod&scoped=true&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"784ce5d0\",\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/mobilenet.65ea7334.png\";","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=6d959952&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=ts&\"\nexport * from \"./Home.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=6d959952&prod&scoped=true&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6d959952\",\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/fear.8d1417fa.jpg\";","\nimport { Vue, Component, Prop } from \"vue-property-decorator\";\n\n@Component\nexport default class ModelStatus extends Vue {\n  @Prop({ type: Boolean, required: true }) modelLoading!: boolean;\n  @Prop({ type: Boolean, required: true }) modelInitializing!: boolean;\n\n  value: number;\n  constructor() {\n    super();\n    this.value = 0;\n  }\n\n  get message() {\n    if (this.modelLoading) {\n      return \"Loading model...\";\n    } else if (this.modelInitializing) {\n      return \"Loading model done. Initializing model...\";\n    } else {\n      return \"\";\n    }\n  }\n}\n","import {Tensor} from 'onnxruntime-web';\nimport {NumberDataType} from './yoloPostprocess';\nimport {ShapeUtil, TypedArrayUtil} from './yoloPostprocessUtils';\n\nexport function softmax(x: Tensor, axis: number): Tensor {\n  const inputDimensions = x.dims ? x.dims : [x.data.length];\n  const inputRank = inputDimensions.length;\n\n  const axisCorrected = ShapeUtil.getActualAxisFromNegativeValue(axis, inputRank);\n  const N = ShapeUtil.sizeToDimension(inputDimensions, axisCorrected);\n  const D = ShapeUtil.sizeFromDimension(inputDimensions, axisCorrected);\n\n  const X = x.data as NumberDataType;\n\n  const Y = TypedArrayUtil.createTypedArray(x.type, x.data.length);\n\n  for (let i = 0; i < N; i++) {\n    // find row offset\n    const offset = i * D;\n\n    // find max of each logical row\n    let max = Number.MIN_VALUE;\n    for (let j = 0; j < D; j++) {\n      if (X[offset + j] > max) {\n        max = X[offset + j];\n      }\n    }\n\n    // find normalization scale per row\n    let scale = 0;\n    for (let j = 0; j < D; j++) {\n      const value = X[offset + j] - max;\n      Y[offset + j] = Math.exp(value);\n      scale += Math.exp(value);\n    }\n\n    // perform the softmax normalization\n    for (let j = 0; j < D; j++) {\n      if (scale === 0) {\n        Y[offset + j] = 0;\n      } else {\n        Y[offset + j] /= scale;\n      }\n    }\n  }\n\n  return new Tensor(x.type, Y, inputDimensions);\n}","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-app',[_c('v-navigation-drawer',{attrs:{\"absolute\":\"\",\"fixed\":\"\",\"floating\":\"\",\"app\":\"\"},model:{value:(_vm.showNav),callback:function ($$v) {_vm.showNav=$$v},expression:\"showNav\"}},[_c('main-menu',{attrs:{\"currentView\":_vm.currentView}})],1),_c('v-toolbar',{attrs:{\"app\":\"\",\"dark\":\"\",\"flat\":\"\",\"color\":\"primary\"}},[_c('v-toolbar-side-icon',{on:{\"click\":function($event){$event.stopPropagation();_vm.showNav = !_vm.showNav}}}),_c('v-toolbar-title',[_vm._v(_vm._s(_vm.currentTitle))]),_c('v-spacer')],1),_c('v-content',[_c('v-container',{staticClass:\"content-panel\",attrs:{\"fluid\":\"\",\"fill-height\":\"\"},on:{\"click\":function($event){$event.stopPropagation();_vm.showNav = false}}},[_c('div',{staticClass:\"demo\"},[_c('div',{staticClass:\"ui-container\"},[_c('router-view',{attrs:{\"hasWebGL\":_vm.hasWebGL}}),_c('v-layout',{staticClass:\"footer-label\",attrs:{\"column\":\"\",\"justify-center\":\"\",\"align-center\":\"\",\"fill-height\":\"\"}},[_vm._v(\" \"+_vm._s(_vm.currentDescription)+\" \"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":_vm.currentLink}},[_vm._v(_vm._s(_vm.currentLink))])])],1)])])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import _ from 'lodash';\nimport {imagenetClasses} from '../data/imagenet';\n\n/**\n * Find top k imagenet classes\n */\nexport function imagenetClassesTopK(classProbabilities: any, k = 5) {\n  const probs =\n      _.isTypedArray(classProbabilities) ? Array.prototype.slice.call(classProbabilities) : classProbabilities;\n\n  const sorted = _.reverse(_.sortBy(probs.map((prob: any, index: number) => [prob, index]), probIndex => probIndex[0]));\n\n  const topK = _.take(sorted, k).map(probIndex => {\n    const iClass = imagenetClasses[probIndex[1]];\n    return {\n      id: iClass[0],\n      index: parseInt(probIndex[1], 10),\n      name: iClass[1].replace(/_/g, ' '),\n      probability: probIndex[0]\n    };\n  });\n  return topK;\n}","import {Tensor} from 'onnxruntime-web';\nimport {TypedArrayUtil} from './yoloPostprocessUtils';\n\nexport function sigmoid(input: Tensor): Tensor {\n  const X = input.data;\n  const Y = TypedArrayUtil.createTypedArray(input.type, X.length);\n  for (let i = 0; i < X.length; i++) {\n    Y[i] = (1 / (1 + Math.exp(-X[i] as number)));\n  }\n  return new Tensor(input.type, Y, input.dims ? input.dims : [input.data.length]);\n}\n\nexport function exp(input: Tensor): Tensor {\n  if (input.type === 'string') {\n    throw new Error('Unsupported type for transform');\n  }\n  const X = input.data;\n  const Y = TypedArrayUtil.createTypedArray(input.type, X.length);\n  for (let i = 0; i < X.length; i++) {\n    Y[i] = Math.exp(X[i] as number);\n  }\n  return new Tensor(input.type, Y, input.dims ? input.dims : [input.data.length]);\n}","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Yolo.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Yolo.vue?vue&type=script&lang=ts&\"","\nimport ndarray from \"ndarray\";\nimport ops from \"ndarray-ops\";\nimport ImageModelUI from \"../common/ImageModelUI.vue\";\nimport { Tensor } from \"onnxruntime-web\";\nimport { Vue, Component } from \"vue-property-decorator\";\nimport { SQUEEZENET_IMAGE_URLS } from \"../../data/sample-image-urls\";\nimport { imagenetUtils, mathUtils } from \"../../utils/index\";\n\nconst MODEL_FILEPATH_PROD = `/onnxruntime-web-demo/squeezenet1_1.onnx`;\nconst MODEL_FILEPATH_DEV = \"/squeezenet1_1.onnx\";\n\n@Component({\n  components: {\n    ImageModelUI,\n  },\n})\nexport default class SqueezeNet extends Vue {\n  modelFilepath: string;\n  imageUrls: Array<{ text: string; value: string }>;\n\n  constructor() {\n    super();\n    this.modelFilepath =\n      process.env.NODE_ENV === \"production\"\n        ? MODEL_FILEPATH_PROD\n        : MODEL_FILEPATH_DEV;\n    this.imageUrls = SQUEEZENET_IMAGE_URLS;\n  }\n\n  preprocess(ctx: CanvasRenderingContext2D): Tensor {\n    const imageData = ctx.getImageData(\n      0,\n      0,\n      ctx.canvas.width,\n      ctx.canvas.height\n    );\n    const { data, width, height } = imageData;\n\n    // data processing\n    const dataTensor = ndarray(new Float32Array(data), [width, height, 4]);\n    const dataProcessedTensor = ndarray(new Float32Array(width * height * 3), [\n      1,\n      3,\n      width,\n      height,\n    ]);\n\n    ops.assign(\n      dataProcessedTensor.pick(0, 0, null, null),\n      dataTensor.pick(null, null, 0)\n    );\n    ops.assign(\n      dataProcessedTensor.pick(0, 1, null, null),\n      dataTensor.pick(null, null, 1)\n    );\n    ops.assign(\n      dataProcessedTensor.pick(0, 2, null, null),\n      dataTensor.pick(null, null, 2)\n    );\n\n    ops.divseq(dataProcessedTensor, 255);\n    ops.subseq(dataProcessedTensor.pick(0, 0, null, null), 0.485);\n    ops.subseq(dataProcessedTensor.pick(0, 1, null, null), 0.456);\n    ops.subseq(dataProcessedTensor.pick(0, 2, null, null), 0.406);\n\n    ops.divseq(dataProcessedTensor.pick(0, 0, null, null), 0.229);\n    ops.divseq(dataProcessedTensor.pick(0, 1, null, null), 0.224);\n    ops.divseq(dataProcessedTensor.pick(0, 2, null, null), 0.225);\n\n    const tensor = new Tensor(\"float32\", new Float32Array(width * height * 3), [\n      1,\n      3,\n      width,\n      height,\n    ]);\n    (tensor.data as Float32Array).set(dataProcessedTensor.data);\n    return tensor;\n  }\n\n  getPredictedClass(res: Float32Array): {} {\n    if (!res || res.length === 0) {\n      const empty = [];\n      for (let i = 0; i < 5; i++) {\n        empty.push({ name: \"-\", probability: 0, index: 0 });\n      }\n      return empty;\n    }\n    const output = mathUtils.softmax(Array.prototype.slice.call(res));\n    return imagenetUtils.imagenetClassesTopK(output, 5);\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebcamModelUI.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebcamModelUI.vue?vue&type=script&lang=ts&\"","\nimport {Tensor} from 'onnxruntime-web';\nimport {NumberDataType} from './yoloPostprocess';\nimport {arrayCopyHelper, ShapeUtil, TypedArrayUtil} from './yoloPostprocessUtils';\n\nexport function transpose(x: Tensor, perm?: number[]): Tensor {\n  const inputDims = x.dims ? x.dims : [x.data.length];\n  const rank = inputDims.length;\n\n  // determine permutation to use\n  // if no permutation was specified in the attributes,\n  // the default is [rank-1, ..., 0]\n  let finalPerm = new Array<number>(rank);\n  if (perm && perm.length === rank) {\n    finalPerm = perm;\n  } else {\n    for (let i = 0; i < rank; i++) {\n      finalPerm[i] = rank - i - 1;\n    }\n  }\n\n  const outputDims = new Array<number>(rank);\n  const stride = new Array<number>(rank);\n\n  // determine shape of output, as well as stride to be used\n  // stride[i] indicates the stride for the input-tensor dimension\n  // corresponding to the i-th dimension of the output\n  for (let i = 0; i < rank; i++) {\n    const inpDim = finalPerm[i];\n    outputDims[i] = inputDims[inpDim];\n    if (inpDim + 1 < rank) {\n      stride[i] = ShapeUtil.sizeFromDimension(inputDims, inpDim + 1);\n    } else {\n      stride[i] = 1;\n    }\n  }\n\n  const output = new Tensor(x.type, TypedArrayUtil.createTypedArray(x.type, ShapeUtil.size(outputDims)), outputDims);\n\n  const X = x.data as NumberDataType;\n  const Y = output.data as NumberDataType;\n\n  // partition the permutation into a prefix and the largest suffix such that\n  // every axis i in the suffix is mapped to i.\n  let numAxesInPrefix = 0;  // number of axes in prefix\n  let suffixBlocksize = 1;  // product of dimensions in the suffix\n  let prefixBlocksize = 1;  // product of dimensions in the prefix\n  let isSuffix = true;\n  for (let i = rank - 1; i >= 0; --i) {\n    const inpAxis = finalPerm[i];\n    if (isSuffix && (inpAxis === i)) {\n      suffixBlocksize *= inputDims[inpAxis];\n    } else {\n      isSuffix = false;\n      prefixBlocksize *= inputDims[inpAxis];\n      ++numAxesInPrefix;\n    }\n  }\n\n  if (prefixBlocksize === 1) {\n    doTransposeSingleBlock(suffixBlocksize, Y, X);\n  } else if (suffixBlocksize === 1) {\n    doTransposeEltWise(numAxesInPrefix, outputDims, prefixBlocksize, stride, Y, X);\n  } else {\n    doTranspose(numAxesInPrefix, outputDims, prefixBlocksize, suffixBlocksize, stride, Y, X);\n  }\n\n  return output;\n}\n\n// doTranspose: copies source tensor to target, transposing elements.\n// the stride vector indicates the transposition.\nfunction doTranspose(\n    numAxes: number, targetDims: number[], numBlocks: number, numElementsInBlock: number, stride: number[],\n    target: NumberDataType, source: NumberDataType) {\n  const targetIndex = new Array<number>(numAxes).fill(0);\n\n  const startSourceIndex = 0;\n  let startTargetIndex = 0;\n\n  for (let i = 0; i < numBlocks; ++i) {\n    const sizeOffset = ShapeUtil.computeOffset(targetIndex, stride, numAxes);\n    arrayCopyHelper(target, source, startTargetIndex, startSourceIndex + sizeOffset, numElementsInBlock);\n\n    ShapeUtil.incrementIndex(targetIndex, targetDims, numAxes);\n    startTargetIndex += numElementsInBlock;\n  }\n}\n\n// doTransposeEltWise: specialization of DoTranspose for the\n// num_elts_in_block=1 case. copies source tensor to target, transposing\n// elements. The stride vector indicates the transposition.\nfunction doTransposeEltWise(\n    numAxes: number, targetDims: number[], numBlocks: number, stride: number[], target: NumberDataType,\n    source: NumberDataType) {\n  const targetIndex = new Array<number>(numAxes).fill(0);\n\n  let startTargetIndex = 0;\n\n  for (let i = 0; i < numBlocks; ++i) {\n    const sourceOffset = ShapeUtil.computeOffset(targetIndex, stride, numAxes);\n    target[startTargetIndex++] = source[sourceOffset];\n    ShapeUtil.incrementIndex(targetIndex, targetDims, numAxes);\n  }\n}\n\n// doTransposeSingleBlock: specialization of DoTranspose for the num_blocks=1\n// case. copies source tensor to target, transposing elements. The stride\n// vector indicates the transposition.\nfunction doTransposeSingleBlock(numElementsInBlock: number, target: NumberDataType, source: NumberDataType) {\n  arrayCopyHelper(target, source, 0, 0, numElementsInBlock);\n}","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[(_vm.modelLoading || _vm.modelInitializing)?_c('model-status',{attrs:{\"modelLoading\":_vm.modelLoading,\"modelInitializing\":_vm.modelInitializing}}):_vm._e(),_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-layout',{staticStyle:{\"margin\":\"auto\",\"width\":\"40%\",\"padding\":\"30px\"},attrs:{\"justify-center\":\"\",\"align-center\":\"\"}},[_c('div',{staticClass:\"select-backend\"},[_vm._v(\"Select Backend:\")]),_c('v-select',{attrs:{\"disabled\":_vm.modelLoading || _vm.modelInitializing || _vm.sessionRunning,\"items\":_vm.backendSelectList,\"label\":\"Switch Backend\",\"menu-props\":{ maxHeight: '750' },\"solo\":\"\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.sessionBackend),callback:function ($$v) {_vm.sessionBackend=$$v},expression:\"sessionBackend\"}})],1),_c('v-layout',[(_vm.modelLoadingError)?_c('v-flex',{staticClass:\"error-message\",staticStyle:{\"padding-bottom\":\"30px\"}},[_vm._v(\" Error: Current backend is not supported on your machine. Try Selecting a different backend. \")]):_vm._e()],1),_c('v-layout',{staticClass:\"image-panel elevation-1\",attrs:{\"row\":\"\",\"wrap\":\"\",\"justify-space-around\":\"\"}},[(_vm.imageLoading || _vm.sessionRunning)?_c('div',{staticClass:\"loading-indicator\"},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"color\":\"primary\"}})],1):_vm._e(),_c('v-flex',{attrs:{\"sm6\":\"\",\"md4\":\"\",\"align-center\":\"\",\"justify-start\":\"\",\"column\":\"\",\"fill-height\":\"\"}},[_c('v-layout',{attrs:{\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"sm4\":\"\"}},[_c('v-select',{attrs:{\"disabled\":_vm.modelLoading || _vm.modelInitializing || _vm.modelLoadingError,\"items\":_vm.imageURLSelectList,\"label\":\"Select image\",\"menu-props\":{ maxHeight: '750' },\"solo\":\"\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.imageURLSelect),callback:function ($$v) {_vm.imageURLSelect=$$v},expression:\"imageURLSelect\"}})],1),_c('v-flex',{staticClass:\"text-xs-center\"},[_vm._v(\"or\")]),_c('label',{staticClass:\"inputs\",attrs:{\"disabled\":_vm.modelLoading || _vm.modelInitializing || _vm.modelLoadingError}},[_c('div',[_c('span',[_vm._v(\"UPLOAD IMAGE\")])]),_c('input',{staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"id\":\"input-upload-image\"},on:{\"change\":_vm.handleFileChange}})])],1),(_vm.imageLoadingError)?_c('div',{staticClass:\"error-message\",staticStyle:{\"padding-top\":\"30px\"}},[_vm._v(\" Error loading URL \")]):_vm._e(),_c('v-flex',{staticClass:\"canvas-container\",attrs:{\"align-center\":\"\",\"justify-space-between\":\"\"}},[_c('canvas',{attrs:{\"id\":\"input-canvas\",\"width\":_vm.imageSize,\"height\":_vm.imageSize}})])],1),_c('v-flex',{staticClass:\"output-container\",attrs:{\"sm6\":\"\",\"md4\":\"\",\"column\":\"\",\"fill-height\":\"\"}},[_c('v-flex',{staticClass:\"inference-time-class\"},[_c('span',{staticClass:\"inference-time\"},[_vm._v(\"Inference Time: \")]),(_vm.inferenceTime > 0)?_c('span',{staticClass:\"inference-time-value\"},[_vm._v(_vm._s(_vm.inferenceTime.toFixed(1))+\" ms \")]):_c('span',[_vm._v(\"-\")])]),_vm._l(([0, 1, 2, 3, 4]),function(i){return _c('div',{key:i,staticClass:\"output-class\",class:{\n            predicted: i === 0 && _vm.outputClasses[i].probability.toFixed(2) > 0,\n          }},[_c('div',{staticClass:\"output-label\"},[_vm._v(_vm._s(_vm.outputClasses[i].name))]),_c('div',{staticClass:\"output-bar\",style:({\n              width: `${Math.round(180 * _vm.outputClasses[i].probability)}px`,\n              background: `rgba(42, 106, 150, ${_vm.outputClasses[\n                i\n              ].probability.toFixed(2)})`,\n              transition: `${\n                _vm.outputClasses[i].probability != 0\n                  ? 'width 0.2s ease-out'\n                  : 'null'\n              }`,\n            })}),_c('div',{staticClass:\"output-value\"},[_vm._v(\" \"+_vm._s(Math.round(100 * _vm.outputClasses[i].probability))+\"% \")])])})],2)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import ndarray from 'ndarray';\nimport {Tensor} from 'onnxruntime-web';\n\nimport {NumberDataType, NumberOrBoolType} from './yoloPostprocess';\nimport {BroadcastUtil} from './yoloPostprocessUtils';\n\nexport function binaryOp(\n    x: Tensor, y: Tensor, opLambda: (e1: number, e2: number) => number, resultType?: NumberOrBoolType): Tensor {\n  const result = BroadcastUtil.calc(\n      ndarray(x.data as NumberDataType, x.dims ? x.dims.slice(0) : [x.data.length]),\n      ndarray(y.data as NumberDataType, y.dims ? y.dims.slice(0) : [y.data.length]), opLambda);\n  if (!result) {\n    throw new Error('not broadcastable');\n  }\n  const rType = resultType ? resultType : x.type;\n  const output =\n      new Tensor(rType, rType === 'bool' ? Uint8Array.from(result.data as NumberDataType) : result.data as NumberDataType, result.shape);\n  return output;\n}","module.exports = __webpack_public_path__ + \"img/surprised_boy.ea02e50e.jpg\";","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('v-layout',{staticClass:\"model-status-background\",attrs:{\"justify-start\":\"\",\"align-center\":\"\",\"column\":\"\"}},[_c('div',{staticClass:\"model-status\"},[_vm._v(_vm._s(_vm.message))]),_c('v-flex',[_c('v-progress-circular',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.modelLoading | _vm.modelInitializing),expression:\"modelLoading | modelInitializing\"}],attrs:{\"indeterminate\":\"\",\"color\":\"primary\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const MOBILENET_IMAGE_URLS = [\n  {text: 'cat', value: 'https://i.imgur.com/CzXTtJV.jpg'},\n  {text: 'dog', value: 'https://i.imgur.com/OB0y6MR.jpg'},\n  {text: 'cheetah', value: 'https://farm2.staticflickr.com/1533/26541536141_41abe98db3_z_d.jpg'},\n  {text: 'bird', value: 'https://farm4.staticflickr.com/3075/3168662394_7d7103de7d_z_d.jpg'},\n  {text: 'whale', value: 'https://farm9.staticflickr.com/8505/8441256181_4e98d8bff5_z_d.jpg'},\n  {text: 'bridge', value: 'https://i.imgur.com/OnwEDW3.jpg'},\n  {text: 'lighthouse', value: 'https://farm3.staticflickr.com/2220/1572613671_7311098b76_z_d.jpg'},\n  {text: 'airplane', value: 'https://farm6.staticflickr.com/5590/14821526429_5c6ea60405_z_d.jpg'},\n  {text: 'sailboat', value: 'https://farm7.staticflickr.com/6089/6115759179_86316c08ff_z_d.jpg'},\n  {text: 'cello', value: 'https://farm2.staticflickr.com/1090/4595137268_0e3f2b9aa7_z_d.jpg'},\n  {text: 'piano', value: 'https://farm4.staticflickr.com/3224/3081748027_0ee3d59fea_z_d.jpg'},\n  {text: 'apple', value: 'https://farm8.staticflickr.com/7377/9359257263_81b080a039_z_d.jpg'},\n  {text: 'flower', value: 'https://farm9.staticflickr.com/8295/8007075227_dc958c1fe6_z_d.jpg'},\n  {text: 'mushroom', value: 'https://farm2.staticflickr.com/1449/24800673529_64272a66ec_z_d.jpg'},\n  {text: 'coffee', value: 'https://farm4.staticflickr.com/3752/9684880330_9b4698f7cb_z_d.jpg'},\n  {text: 'wine', value: 'https://farm4.staticflickr.com/3827/11349066413_99c32dee4a_z_d.jpg'},\n];\n\nexport const SQUEEZENET_IMAGE_URLS = [\n  {text: 'cat', value: 'https://i.imgur.com/CzXTtJV.jpg'},\n  {text: 'dog', value: 'https://i.imgur.com/OB0y6MR.jpg'},\n  {text: 'fox', value: 'https://farm4.staticflickr.com/3852/14447103450_2d0ff8802b_z_d.jpg'},\n  {text: 'cheetah', value: 'https://farm2.staticflickr.com/1533/26541536141_41abe98db3_z_d.jpg'},\n  {text: 'bird', value: 'https://farm4.staticflickr.com/3075/3168662394_7d7103de7d_z_d.jpg'},\n  {text: 'bridge', value: 'https://i.imgur.com/OnwEDW3.jpg'},\n  {text: 'lighthouse', value: 'https://farm3.staticflickr.com/2220/1572613671_7311098b76_z_d.jpg'},\n  {text: 'airplane', value: 'https://farm6.staticflickr.com/5590/14821526429_5c6ea60405_z_d.jpg'},\n  {text: 'sailboat', value: 'https://farm7.staticflickr.com/6089/6115759179_86316c08ff_z_d.jpg'},\n  {text: 'piano', value: 'https://farm4.staticflickr.com/3224/3081748027_0ee3d59fea_z_d.jpg'},\n  {text: 'apple', value: 'https://farm8.staticflickr.com/7377/9359257263_81b080a039_z_d.jpg'},\n  {text: 'flower', value: 'https://farm9.staticflickr.com/8295/8007075227_dc958c1fe6_z_d.jpg'},\n  {text: 'mushroom', value: 'https://farm2.staticflickr.com/1449/24800673529_64272a66ec_z_d.jpg'},\n  {text: 'wine', value: 'https://farm4.staticflickr.com/3827/11349066413_99c32dee4a_z_d.jpg'},\n];\n\nexport const EMOTION_IMAGE_URLS = [\n  {text: 'happy girl', value: require('@/assets/EmotionSampleImages/happy.jpg')},\n  {text: 'angry man', value: require('@/assets/EmotionSampleImages/angry_man.jpg')},\n  {text: 'angry baby', value: require('@/assets/EmotionSampleImages/angry_baby.jpg')},\n  {text: 'suprised boy', value: require('@/assets/EmotionSampleImages/surprised_boy.jpg')},\n  {text: 'suprised woman', value: require('@/assets/EmotionSampleImages/surprised_woman.jpg')},\n  {text: 'sad baby', value: require('@/assets/EmotionSampleImages/sad_baby.jpg')},\n  {text: 'sad baby 2', value: require('@/assets/EmotionSampleImages/sad_baby2.jpg')},\n  {text: 'fear', value: require('@/assets/EmotionSampleImages/fear.jpg')},\n  {text: 'neutral girl', value: require('@/assets/EmotionSampleImages/neutral.jpg')},\n  {text: 'neutral girl 2', value: require('@/assets/EmotionSampleImages/neutral_girl.jpg')},\n];\n\nexport const YOLO_IMAGE_URLS = [\n  {text: 'airplane', value: 'https://farm6.staticflickr.com/5590/14821526429_5c6ea60405_z_d.jpg'},\n  {text: 'cat', value: 'https://i.imgur.com/CzXTtJV.jpg'}, {text: 'dog', value: 'https://i.imgur.com/OB0y6MR.jpg'},\n  {text: 'bicycle', value: ' https://farm3.staticflickr.com/2378/2178054924_423324aac8.jpg'},\n  {text: 'bird', value: 'https://farm4.staticflickr.com/3075/3168662394_7d7103de7d_z_d.jpg'},\n  {text: 'boat', value: 'https://farm1.staticflickr.com/49/157534104_95ca4e0ae6.jpg '},\n  {text: 'bus', value: 'https://farm4.staticflickr.com/3319/3211138044_9232086442.jpg'},\n  {text: 'two chairs', value: 'https://farm4.staticflickr.com/3049/2327691528_f060ee2d1f.jpg'},\n  {text: 'cow', value: 'https://farm3.staticflickr.com/2042/2203964933_f1b80a18ba.jpg'}\n];\n","import {Tensor} from 'onnxruntime-web';\nimport {ShapeUtil, TypedArrayUtil} from './yoloPostprocessUtils';\n\nexport function reshape(x: Tensor, shape: ReadonlyArray<number>): Tensor {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(x.dims, shape);\n  const output = new Tensor(x.type, TypedArrayUtil.createTypedArray(x.type, x.data.length), reshapedDims);\n  const X = x.data;\n  const Y = output.data;\n  for (let i = 0; i < x.data.length; ++i) {\n    Y[i] = X[i];\n  }\n  return output;\n}\n","import { render, staticRenderFns } from \"./WebcamModelUI.vue?vue&type=template&id=181d8ac0&scoped=true&\"\nimport script from \"./WebcamModelUI.vue?vue&type=script&lang=ts&\"\nexport * from \"./WebcamModelUI.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./WebcamModelUI.vue?vue&type=style&index=0&id=181d8ac0&prod&lang=postcss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"181d8ac0\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DrawingModelUI.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DrawingModelUI.vue?vue&type=script&lang=ts&\"","\nimport _ from \"lodash\";\nimport { mathUtils, runModelUtils } from \"../../utils\";\nimport { Vue, Component, Prop, Watch } from \"vue-property-decorator\";\nimport { Tensor, InferenceSession } from \"onnxruntime-web\";\nimport ModelStatus from \"../common/ModelStatus.vue\";\n\n@Component({\n  components: {\n    ModelStatus,\n  },\n})\nexport default class DrawingModelUI extends Vue {\n  @Prop({ type: String, required: true }) modelFilepath!: string;\n  @Prop({ type: Function, required: true }) preprocess!: (\n    ctx: CanvasRenderingContext2D\n  ) => Tensor;\n  @Prop({ type: Function, required: true }) postprocess!: (\n    t: Tensor\n  ) => Float32Array;\n  @Prop({ type: Function, required: true }) getPredictedClass!: (\n    output: Float32Array\n  ) => number;\n\n  modelLoading: boolean;\n  modelInitializing: boolean;\n  modelLoadingError: boolean;\n  sessionRunning: boolean;\n  input: Float32Array;\n  output: Float32Array;\n  outputClasses: number[];\n  drawing: boolean;\n  strokes: number[][][];\n  inferenceTime: number;\n  session: InferenceSession;\n  gpuSession: InferenceSession | undefined;\n  cpuSession: InferenceSession | undefined;\n  xnnpackSession: InferenceSession | undefined;\n  webnnGpuSession: InferenceSession | undefined;\n  webnnCpuSession: InferenceSession | undefined;\n  sessionBackend: string;\n  modelFile: ArrayBuffer;\n  backendSelectList: Array<{ text: string; value: string }>;\n\n  constructor() {\n    super();\n    this.input = new Float32Array(784);\n    this.output = new Float32Array(10);\n    this.outputClasses = _.range(10);\n    this.drawing = false;\n    this.strokes = [];\n    this.inferenceTime = 0;\n    this.modelLoading = true;\n    this.modelInitializing = true;\n    this.sessionRunning = false;\n    this.modelLoadingError = false;\n    this.sessionBackend = \"webgl\";\n    this.modelFile = new ArrayBuffer(0);\n    this.backendSelectList = [\n      { text: \"GPU-WebGL\", value: \"webgl\" },\n      { text: \"CPU-WebAssembly\", value: \"wasm\" },\n      { text: \"XNNPACK-WebAssembly\", value: \"xnnpack\" },\n      { text: \"GPU-WebNN\", value: \"webnn_gpu\" },\n      { text: \"CPU-WebNN\", value: \"webnn_cpu\" },\n    ];\n  }\n\n  async created() {\n    // fetch the model file to be used later\n    const response = await fetch(this.modelFilepath);\n    this.modelFile = await response.arrayBuffer();\n    try {\n      await this.initSession();\n    } catch (e) {\n      this.sessionBackend = \"wasm\";\n    }\n  }\n\n  async initSession() {\n    this.sessionRunning = false;\n    this.modelLoadingError = false;\n    if (this.sessionBackend === \"webgl\") {\n      if (this.gpuSession) {\n        this.session = this.gpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"wasm\") {\n      if (this.cpuSession) {\n        this.session = this.cpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"xnnpack\") {\n      if (this.xnnpackSession) {\n        this.session = this.xnnpackSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"webnn_gpu\") {\n      if (this.webnnGpuSession) {\n        this.session = this.webnnGpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"webnn_cpu\") {\n      if (this.webnnCpuSession) {\n        this.session = this.webnnCpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n\n    try {\n      if (this.sessionBackend === \"webgl\") {\n        this.gpuSession = await runModelUtils.createModelGpu(this.modelFile);\n        this.session = this.gpuSession;\n      } else if (this.sessionBackend === \"wasm\") {\n        this.cpuSession = await runModelUtils.createModelCpu(this.modelFile);\n        this.session = this.cpuSession;\n      } else if (this.sessionBackend === \"xnnpack\") {\n        this.xnnpackSession = await runModelUtils.createModelXnnpack(this.modelFile);\n        this.session = this.xnnpackSession;\n      } else if (this.sessionBackend === \"webnn_gpu\") {\n        this.webnnGpuSession = await runModelUtils.createModelWebnn(this.modelFile, 1);\n        this.session = this.webnnGpuSession;\n      } else if (this.sessionBackend === \"webnn_cpu\") {\n        this.webnnCpuSession = await runModelUtils.createModelWebnn(this.modelFile, 2);\n        this.session = this.webnnCpuSession;\n      }\n    } catch (e) {\n      console.log(e);\n      this.modelLoading = false;\n      this.modelInitializing = false;\n      if (this.sessionBackend === \"webgl\") {\n        this.gpuSession = undefined;\n      } else if (this.sessionBackend === \"wasm\") {\n        this.cpuSession = undefined;\n      } else if (this.sessionBackend === \"xnnpack\") {\n        this.xnnpackSession = undefined;\n      } else if (this.sessionBackend === \"webnn_gpu\") {\n        this.webnnGpuSession = undefined;\n      } else if (this.sessionBackend === \"webnn_cpu\") {\n        this.webnnCpuSession = undefined;\n      }\n      throw new Error(\"Error: Backend not supported. \");\n    }\n    this.modelLoading = false;\n    // warm up session with a sample tensor. Use setTimeout(..., 0) to make it an async execution so\n    // that UI update can be done.\n    if (this.sessionBackend === \"webgl\") {\n      setTimeout(() => {\n        runModelUtils.warmupModel(this.session!, [1, 1, 28, 28]);\n        this.modelInitializing = false;\n      }, 0);\n    } else {\n      await runModelUtils.warmupModel(this.session!, [1, 1, 28, 28]);\n      this.modelInitializing = false;\n    }\n  }\n\n  @Watch(\"sessionBackend\")\n  async onSessionBackendChange(newVal: string) {\n    this.sessionBackend = newVal;\n    this.clear();\n    try {\n      await this.initSession();\n    } catch (e) {\n      this.modelLoadingError = true;\n    }\n    return newVal;\n  }\n\n  async run() {\n    if (!this.drawing) {\n      return;\n    }\n    this.drawing = false;\n    this.sessionRunning = true;\n    const ctx = (\n      document.getElementById(\"input-canvas\") as HTMLCanvasElement\n    ).getContext(\"2d\") as CanvasRenderingContext2D;\n    const tensor = this.preprocess(ctx);\n    const [res, time] = await runModelUtils.runModel(this.session, tensor);\n    this.output = this.postprocess(res);\n    this.inferenceTime = time;\n    this.sessionRunning = false;\n  }\n\n  get predictedClass() {\n    return this.getPredictedClass(this.output);\n  }\n\n  clear() {\n    const ctx = (\n      document.getElementById(\"input-canvas\") as HTMLCanvasElement\n    ).getContext(\"2d\") as CanvasRenderingContext2D;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const ctxCenterCrop = (\n      document.getElementById(\"input-canvas-centercrop\") as HTMLCanvasElement\n    ).getContext(\"2d\") as CanvasRenderingContext2D;\n    ctxCenterCrop.clearRect(\n      0,\n      0,\n      ctxCenterCrop.canvas.width,\n      ctxCenterCrop.canvas.height\n    );\n    const ctxScaled = (\n      document.getElementById(\"input-canvas-scaled\") as HTMLCanvasElement\n    ).getContext(\"2d\") as CanvasRenderingContext2D;\n    ctxScaled.clearRect(0, 0, ctxScaled.canvas.width, ctxScaled.canvas.height);\n    this.output = new Float32Array(10);\n    this.drawing = false;\n    this.strokes = [];\n  }\n\n  activateDraw(e: any) {\n    if (this.modelLoading || this.modelInitializing || this.modelLoadingError) {\n      return;\n    }\n    this.drawing = true;\n    this.strokes.push([]);\n    const points = this.strokes[this.strokes.length - 1];\n    points.push(mathUtils.getCoordinates(e));\n    this.draw(e);\n  }\n\n  draw(e: any) {\n    if (!this.drawing) {\n      return;\n    }\n    // disable scrolling behavior when drawing\n    e.preventDefault();\n    const ctx = (\n      document.getElementById(\"input-canvas\") as HTMLCanvasElement\n    ).getContext(\"2d\") as CanvasRenderingContext2D;\n    ctx.lineWidth = 20;\n    ctx.lineJoin = ctx.lineCap = \"round\";\n    ctx.strokeStyle = \"#393E46\";\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    let points = this.strokes[this.strokes.length - 1];\n    points.push(mathUtils.getCoordinates(e));\n    // draw individual strokes\n    for (let s = 0, slen = this.strokes.length; s < slen; s++) {\n      points = this.strokes[s];\n      let p1 = points[0];\n      let p2 = points[1];\n      ctx.beginPath();\n      ctx.moveTo(p1[0], p1[1]);\n      // draw points in stroke\n      // quadratic bezier curve\n      for (let i = 1, len = points.length; i < len; i++) {\n        const midpoint = mathUtils.getMidpoint(p1, p2);\n        ctx.quadraticCurveTo(p1[0], p1[1], midpoint[0], midpoint[1]);\n        p1 = points[i];\n        p2 = points[i + 1];\n      }\n      ctx.lineTo(p1[0], p1[1]);\n      ctx.stroke();\n    }\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Mobilenet.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Mobilenet.vue?vue&type=script&lang=ts&\"","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainMenu.vue?vue&type=script&scoped=true&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainMenu.vue?vue&type=script&scoped=true&lang=ts&\"","import { render, staticRenderFns } from \"./MainMenu.vue?vue&type=template&id=f56a341a&\"\nimport script from \"./MainMenu.vue?vue&type=script&scoped=true&lang=ts&\"\nexport * from \"./MainMenu.vue?vue&type=script&scoped=true&lang=ts&\"\nimport style0 from \"./MainMenu.vue?vue&type=style&index=0&id=f56a341a&prod&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport Router from 'vue-router';\n\nimport Home from '../components/Home.vue';\nimport Emotion from '../components/models/Emotion.vue';\nimport MNIST from '../components/models/MNIST.vue';\nimport MobileNet from '../components/models/Mobilenet.vue';\nimport SqueezeNet from '../components/models/Squeezenet.vue';\nimport Yolo from '../components/models/Yolo.vue';\n\nVue.use(Router);\n\nexport default new Router({\n  mode: 'hash',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '*',\n      name: 'home',\n      component: Home,\n    },\n    {\n      path: '/mobilenet',\n      component: MobileNet,\n    },\n    {\n      path: '/squeezenet',\n      component: SqueezeNet,\n    },\n    {\n      path: '/emotion_ferplus',\n      component: Emotion,\n    },\n    {\n      path: '/yolo',\n      component: Yolo,\n    },\n    {\n      path: '/mnist',\n      component: MNIST,\n    }\n  ],\n});\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[(_vm.modelLoading || _vm.modelInitializing)?_c('model-status',{attrs:{\"modelLoading\":_vm.modelLoading,\"modelInitializing\":_vm.modelInitializing}}):_vm._e(),_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-layout',{staticStyle:{\"margin\":\"auto\",\"width\":\"40%\",\"padding\":\"40px\"},attrs:{\"justify-center\":\"\",\"align-center\":\"\"}},[_c('div',{staticClass:\"select-backend\"},[_vm._v(\"Select Backend:\")]),_c('v-select',{attrs:{\"disabled\":_vm.modelLoading || _vm.modelInitializing || _vm.sessionRunning,\"items\":_vm.backendSelectList,\"label\":\"Switch Backend\",\"menu-props\":{ maxHeight: '750' },\"solo\":\"\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.sessionBackend),callback:function ($$v) {_vm.sessionBackend=$$v},expression:\"sessionBackend\"}})],1),_c('v-layout',[(_vm.modelLoadingError)?_c('v-flex',{staticClass:\"error-message\",staticStyle:{\"padding-bottom\":\"30px\"}},[_vm._v(\" Error: Current backend is not supported on your machine. Try Selecting a different backend. \")]):_vm._e()],1),_c('v-layout',{staticClass:\"webcam-panel elevation-1\",attrs:{\"row\":\"\",\"wrap\":\"\",\"justify-space-around\":\"\"}},[_c('div',{staticClass:\"webcam-container\",attrs:{\"id\":\"webcam-container\",\"display\":\"none\"}},[_c('video',{attrs:{\"playsinline\":\"\",\"muted\":\"\",\"id\":\"webcam\",\"width\":\"416\",\"height\":\"416\"},domProps:{\"muted\":true}}),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.webcamEnabled),expression:\"!webcamEnabled\"}],staticStyle:{\"position\":\"absolute\"},attrs:{\"id\":\"input-canvas\",\"width\":\"416\",\"height\":\"416\"}})]),_c('v-progress-circular',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.sessionRunning),expression:\"sessionRunning\"}],attrs:{\"indeterminate\":\"\",\"color\":\"primary\",\"height\":\"250px\"}}),_c('v-flex',{staticClass:\"text-xs-center\",staticStyle:{\"display\":\"flex\",\"flex-direction\":\"column\"},attrs:{\"justify-center\":\"\",\"align-center\":\"\",\"sm6\":\"\"}},[_c('div',{staticClass:\"text-xs-center\",staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[(_vm.imageLoadingError)?_c('div',{staticClass:\"error-message\"},[_vm._v(\" Error loading URL \")]):_vm._e(),_c('div',{staticStyle:{\"width\":\"70%\"}},[_c('v-select',{attrs:{\"items\":_vm.imageUrls,\"disabled\":_vm.modelLoading ||\n                _vm.modelInitializing ||\n                _vm.modelLoadingError ||\n                _vm.webcamEnabled,\"label\":\"Select image\",\"menu-props\":{ maxHeight: '750' },\"solo\":\"\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.imageURLSelect),callback:function ($$v) {_vm.imageURLSelect=$$v},expression:\"imageURLSelect\"}})],1)]),_c('v-card-text',[_vm._v(\"or\")]),_c('div',{staticStyle:{\"margin\":\"0\",\"width\":\"30%\"},attrs:{\"disabled\":_vm.modelLoading ||\n            _vm.modelInitializing ||\n            _vm.modelLoadingError ||\n            _vm.webcamEnabled}},[_c('label',{staticClass:\"inputs\"},[_vm._v(\" UPLOAD IMAGE \"),_c('input',{staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"id\":\"input-upload-image\"},on:{\"change\":_vm.handleFileChange}})])]),_c('v-card-text',[_vm._v(\"or\")]),_c('v-btn',{staticStyle:{\"margin\":\"0\",\"width\":\"30%\"},attrs:{\"disabled\":_vm.modelLoadingError},on:{\"click\":_vm.webcamController}},[_vm._v(\" \"+_vm._s(_vm.webcamStatus)+\" \")])],1)],1)],1),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],attrs:{\"id\":\"screenshot\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Yolo.vue?vue&type=template&id=5131133c&\"\nimport script from \"./Yolo.vue?vue&type=script&lang=ts&\"\nexport * from \"./Yolo.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export function softmax(arr: number[]): any {\n  const C = Math.max(...arr);\n  const d = arr.map((y) => Math.exp(y - C)).reduce((a, b) => a + b);\n  return arr.map((value, index) => {\n    return Math.exp(value - C) / d;\n  });\n}\n\n/**\n * Find mindpoint of two points\n */\nexport function getMidpoint(p1: number[], p2: number[]): number[] {\n  const [x1, y1] = p1;\n  const [x2, y2] = p2;\n  return [x1 + (x2 - x1) / 2, y1 + (y2 - y1) / 2];\n}\n\n/**\n * Gets the (x, y) coordinates of an UI event relative to its target,\n * e.g., canvas. Accounts for touch events as well as mouse events.\n */\nexport function getCoordinates(e: any) {\n  let {clientX, clientY} = e;\n  // for touch event\n  if (e.touches && e.touches.length) {\n    clientX = e.touches[0].clientX;\n    clientY = e.touches[0].clientY;\n  }\n  const {left, top} = e.target.getBoundingClientRect();\n  const [x, y] = [clientX - left, clientY - top];\n  return [x, y];\n}\n\n/**\n * Centers and crops canvas ImageData based on alpha channel.\n * @param {ImageData} imageData\n * @returns {ImageData}\n */\nexport function centerCrop(imageData: ImageData) {\n  const {data, width, height} = imageData;\n  let [xmin, ymin] = [width, height];\n  let [xmax, ymax] = [-1, -1];\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < height; j++) {\n      const idx = i + j * width;\n      if (data[4 * idx + 3] > 0) {\n        if (i < xmin) {\n          xmin = i;\n        }\n        if (i > xmax) {\n          xmax = i;\n        }\n        if (j < ymin) {\n          ymin = j;\n        }\n        if (j > ymax) {\n          ymax = j;\n        }\n      }\n    }\n  }\n\n  // add a little padding\n  xmin -= 20;\n  xmax += 20;\n  ymin -= 20;\n  ymax += 20;\n\n  // make bounding box square\n  let [widthNew, heightNew] = [xmax - xmin + 1, ymax - ymin + 1];\n  if (widthNew < heightNew) {\n    // new width < new height\n    const halfBefore = Math.floor((heightNew - widthNew) / 2);\n    const halfAfter = heightNew - widthNew - halfBefore;\n    xmax += halfAfter;\n    xmin -= halfBefore;\n  } else if (widthNew > heightNew) {\n    // new width > new height\n    const halfBefore = Math.floor((widthNew - heightNew) / 2);\n    const halfAfter = widthNew - heightNew - halfBefore;\n    ymax += halfAfter;\n    ymin -= halfBefore;\n  }\n\n  widthNew = xmax - xmin + 1;\n  heightNew = ymax - ymin + 1;\n  const dataNew = new Uint8ClampedArray(widthNew * heightNew * 4);\n  for (let i = xmin; i <= xmax; i++) {\n    for (let j = ymin; j <= ymax; j++) {\n      if (i >= 0 && i < width && j >= 0 && j < height) {\n        const idx = i + j * width;\n        const idxNew = i - xmin + (j - ymin) * widthNew;\n        dataNew[4 * idxNew + 3] = data[4 * idx + 3];\n      }\n    }\n  }\n\n  return new ImageData(dataNew, widthNew, heightNew);\n}\n","module.exports = __webpack_public_path__ + \"img/surprised_woman.69f1aab7.jpg\";","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('WebcamModel',{attrs:{\"modelName\":\"Emotion\",\"modelFilepath\":_vm.modelFilepath,\"imageSize\":64,\"imageUrls\":_vm.imageUrls,\"warmupModel\":_vm.warmupModel,\"preprocess\":_vm.preprocess,\"postprocess\":_vm.postprocess}}),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],attrs:{\"id\":\"temp-canvas\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import ndarray from 'ndarray';\n\nimport {NumberDataType, Type} from './yoloPostprocess';\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: ReadonlyArray<number>, bdims: ReadonlyArray<number>, isMatMul = false): number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          BroadcastUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param indices The given indices of the broadcasted tensor.\n   * @param shapeOrigin The origin shape of the tensor before broadcast\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The calculated indices that maps to the original tensor. If the\n   * operation is MatMul, the indices of last 2 dimensions will keep as same as\n   * input indices\n   */\n  static index(indices: number[], shapeOrigin: number[], isMatMul = false): number[] {\n    // we assume the parameter indices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const dimOffset = indices.length - shapeOrigin.length;\n    const indicesOrigin = indices.slice(dimOffset);\n    const dimLen = isMatMul ? indicesOrigin.length - 2 : indicesOrigin.length;\n    for (let i = 0; i < dimLen; i++) {\n      indicesOrigin[i] = indices[dimOffset + i] % shapeOrigin[i];\n    }\n    return indicesOrigin;\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(a: ndarray.NdArray, b: ndarray.NdArray, op: (a: number, b: number) => number): ndarray.NdArray|undefined {\n    const shape = BroadcastUtil.calcShape(a.shape, b.shape);\n    if (shape) {\n      const size = ShapeUtil.size(shape);\n      const c = ndarray(\n          new (\n              a.data.constructor as Int8ArrayConstructor | Int16ArrayConstructor | Int32ArrayConstructor |\n              Uint8ArrayConstructor | Uint16ArrayConstructor | Uint32ArrayConstructor | Float32ArrayConstructor |\n              Float64ArrayConstructor | Uint8ClampedArrayConstructor)(size),\n          shape);\n\n      const indices = new Array<number>(shape.length);\n      for (let i = 0; i < size; i++) {\n        // traversal indices\n        let rest = i;\n        for (let j = shape.length - 1; j >= 0; j--) {\n          indices[j] = rest % shape[j];\n          rest = Math.floor(rest / shape[j]);\n        }\n\n        // map index\n        const indicesA = BroadcastUtil.index(indices, a.shape);\n        const indicesB = BroadcastUtil.index(indices, b.shape);\n\n        // assign value\n        c.set(...indices.concat(op(a.get(...indicesA), b.get(...indicesB))));\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: ReadonlyArray<number>, finalShape: ReadonlyArray<number>): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: NumberDataType, source: NumberDataType, targetIndex: number, sourceIndex: number, blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error(`sourceIndex out of bounds`);\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error(`targetIndex out of bounds`);\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error(`source indices to be copied are outside bounds`);\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error(`target array is too small to hold result`);\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class TypeUtil {\n  static validateSameTypes(typesArray: Type[]) {\n    if (typesArray.length < 2) {\n      throw new Error('must contain atleast 2 types to compare equality');\n    }\n    const baseType = typesArray[0];\n    for (let i = 0; i < typesArray.length; ++i) {\n      if (typesArray[i] !== baseType) {\n        throw new Error('input types are ');\n      }\n    }\n  }\n}\n\nexport class ShapeUtil {\n  static validateEqualDims(dimsArray: Array<ReadonlyArray<number>>) {\n    if (dimsArray.length < 2) {\n      throw new Error('must contain atleast 2 shapes to compare equality');\n    }\n    const baseDims = dimsArray[0];\n    const baseRank = baseDims.length;\n    for (let i = 1; i < dimsArray.length; ++i) {\n      const dims = dimsArray[i];\n      if (dims.length !== baseRank) {\n        throw new Error('rank is not the same for given inpu shapes');\n      }\n      for (let j = 0; j < baseRank; ++j) {\n        if (baseDims[j] !== dims[j]) {\n          throw new Error('input shapes are not the same');\n        }\n      }\n    }\n  }\n\n  static validateDims(dims: ReadonlyArray<number>) {\n    if (dims.length < 0 || dims.length > 6) {\n      throw new TypeError(`Only rank 0 to 6 is supported for tensor shape.`);\n    }\n\n    if (dims.length === 0) {\n      throw new RangeError('Scaler tensor is not implemented yet');\n    }\n\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n <= 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n    }\n  }\n\n  static size(dims: ReadonlyArray<number>): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  static sizeFromDimension(dims: ReadonlyArray<number>, axis: number): number {\n    if (axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  static sizeToDimension(dims: ReadonlyArray<number>, axis: number): number {\n    if (axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: ReadonlyArray<number>, start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // tslint:disable-next-line:max-line-length\n            `cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.`);\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  // Computes the offset up until the start index for the specified axis\n  /**\n   * @param index Given index to compute offset for in the flattened\n   * @param stride The strides of the tensor corresponding to the index\n   * @param axis The 1-indexed axis upto which the offset is to be computed for. If undefined, axis == rank of the\n   * index.\n   */\n\n  static computeOffset(index: number[], stride: number[], axis?: number) {\n    if (axis === undefined) {\n      axis = index.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += (index[i] * stride[i]);\n    }\n    return offset;\n  }\n  static computeStrides(shape: ReadonlyArray<number>): number[] {\n    const rank = shape.length;\n    if (rank < 2) {\n      return [1];\n    }\n\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    return strides;\n  }\n  static transpose(dims: number[]): number[] {\n    return dims.reverse();\n  }\n  static indicesToOffset(indices: number[], strides: number[]): number {\n    const rank = strides.length;\n    if (rank === 0) {\n      return 0;\n    }\n    let index = indices[indices.length - 1];\n    for (let i = 0; i < indices.length - 1; ++i) {\n      index += strides[i] * indices[i];\n    }\n    return index;\n  }\n\n  static offsetToIndices(offset: number, strides: number[]): number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n  static getActualAxisFromNegativeValue(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank - 1) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: number[], axisToIncrementOn?: number) {\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: ReadonlyArray<number>, shapeHints: ReadonlyArray<number>): number[] {\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let size = 1;\n\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        size *= reshapedDims[i];\n      }\n    }\n\n    if (unknownDimension !== -1) {\n      const originalTensorFlattenedSize = ShapeUtil.size(originalDims);\n      if (originalTensorFlattenedSize % size !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = originalTensorFlattenedSize / size;\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: ReadonlyArray<number>, perm?: number[]): number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: ReadonlyArray<number>, pad: number[]): number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: ReadonlyArray<number>, shape2: ReadonlyArray<number>): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Splits a given `dims` into 2 mutually exclusive `dims`\n   * @param dims ReadonlyArray<number>\n   * @param pick number - picks the dim along this axis and composes a new `dims`.\n   * The remnants make up another `dims`\n   */\n  static splitDimsIntoTwo(dims: ReadonlyArray<number>, pick: number): [number[], number[]] {\n    const picked: number[] = [];\n    const remnants: number[] = [];\n\n    for (let i = 0; i < dims.length; ++i) {\n      if (i === pick) {\n        picked.push(dims[i]);\n      } else {\n        remnants.push(dims[i]);\n      }\n    }\n\n    return [picked, remnants];\n  }\n}\n\nexport class TypedArrayUtil {\n  static createTypedArray(type: string, size: number): Uint8Array|Int32Array|Float32Array {\n    switch (type) {\n      case 'bool':\n        return new Uint8Array(size);\n      case 'int32':\n        return new Int32Array(size);\n      case 'float32':\n        return new Float32Array(size);\n      default:\n        throw new Error('Unsupported type');\n    }\n  }\n}","export const imagenetClasses: {[id: number]: string[]} = {\n  '0': ['n01440764', 'tench'],\n  '1': ['n01443537', 'goldfish'],\n  '2': ['n01484850', 'great_white_shark'],\n  '3': ['n01491361', 'tiger_shark'],\n  '4': ['n01494475', 'hammerhead'],\n  '5': ['n01496331', 'electric_ray'],\n  '6': ['n01498041', 'stingray'],\n  '7': ['n01514668', 'cock'],\n  '8': ['n01514859', 'hen'],\n  '9': ['n01518878', 'ostrich'],\n  '10': ['n01530575', 'brambling'],\n  '11': ['n01531178', 'goldfinch'],\n  '12': ['n01532829', 'house_finch'],\n  '13': ['n01534433', 'junco'],\n  '14': ['n01537544', 'indigo_bunting'],\n  '15': ['n01558993', 'robin'],\n  '16': ['n01560419', 'bulbul'],\n  '17': ['n01580077', 'jay'],\n  '18': ['n01582220', 'magpie'],\n  '19': ['n01592084', 'chickadee'],\n  '20': ['n01601694', 'water_ouzel'],\n  '21': ['n01608432', 'kite'],\n  '22': ['n01614925', 'bald_eagle'],\n  '23': ['n01616318', 'vulture'],\n  '24': ['n01622779', 'great_grey_owl'],\n  '25': ['n01629819', 'European_fire_salamander'],\n  '26': ['n01630670', 'common_newt'],\n  '27': ['n01631663', 'eft'],\n  '28': ['n01632458', 'spotted_salamander'],\n  '29': ['n01632777', 'axolotl'],\n  '30': ['n01641577', 'bullfrog'],\n  '31': ['n01644373', 'tree_frog'],\n  '32': ['n01644900', 'tailed_frog'],\n  '33': ['n01664065', 'loggerhead'],\n  '34': ['n01665541', 'leatherback_turtle'],\n  '35': ['n01667114', 'mud_turtle'],\n  '36': ['n01667778', 'terrapin'],\n  '37': ['n01669191', 'box_turtle'],\n  '38': ['n01675722', 'banded_gecko'],\n  '39': ['n01677366', 'common_iguana'],\n  '40': ['n01682714', 'American_chameleon'],\n  '41': ['n01685808', 'whiptail'],\n  '42': ['n01687978', 'agama'],\n  '43': ['n01688243', 'frilled_lizard'],\n  '44': ['n01689811', 'alligator_lizard'],\n  '45': ['n01692333', 'Gila_monster'],\n  '46': ['n01693334', 'green_lizard'],\n  '47': ['n01694178', 'African_chameleon'],\n  '48': ['n01695060', 'Komodo_dragon'],\n  '49': ['n01697457', 'African_crocodile'],\n  '50': ['n01698640', 'American_alligator'],\n  '51': ['n01704323', 'triceratops'],\n  '52': ['n01728572', 'thunder_snake'],\n  '53': ['n01728920', 'ringneck_snake'],\n  '54': ['n01729322', 'hognose_snake'],\n  '55': ['n01729977', 'green_snake'],\n  '56': ['n01734418', 'king_snake'],\n  '57': ['n01735189', 'garter_snake'],\n  '58': ['n01737021', 'water_snake'],\n  '59': ['n01739381', 'vine_snake'],\n  '60': ['n01740131', 'night_snake'],\n  '61': ['n01742172', 'boa_constrictor'],\n  '62': ['n01744401', 'rock_python'],\n  '63': ['n01748264', 'Indian_cobra'],\n  '64': ['n01749939', 'green_mamba'],\n  '65': ['n01751748', 'sea_snake'],\n  '66': ['n01753488', 'horned_viper'],\n  '67': ['n01755581', 'diamondback'],\n  '68': ['n01756291', 'sidewinder'],\n  '69': ['n01768244', 'trilobite'],\n  '70': ['n01770081', 'harvestman'],\n  '71': ['n01770393', 'scorpion'],\n  '72': ['n01773157', 'black_and_gold_garden_spider'],\n  '73': ['n01773549', 'barn_spider'],\n  '74': ['n01773797', 'garden_spider'],\n  '75': ['n01774384', 'black_widow'],\n  '76': ['n01774750', 'tarantula'],\n  '77': ['n01775062', 'wolf_spider'],\n  '78': ['n01776313', 'tick'],\n  '79': ['n01784675', 'centipede'],\n  '80': ['n01795545', 'black_grouse'],\n  '81': ['n01796340', 'ptarmigan'],\n  '82': ['n01797886', 'ruffed_grouse'],\n  '83': ['n01798484', 'prairie_chicken'],\n  '84': ['n01806143', 'peacock'],\n  '85': ['n01806567', 'quail'],\n  '86': ['n01807496', 'partridge'],\n  '87': ['n01817953', 'African_grey'],\n  '88': ['n01818515', 'macaw'],\n  '89': ['n01819313', 'sulphur-crested_cockatoo'],\n  '90': ['n01820546', 'lorikeet'],\n  '91': ['n01824575', 'coucal'],\n  '92': ['n01828970', 'bee_eater'],\n  '93': ['n01829413', 'hornbill'],\n  '94': ['n01833805', 'hummingbird'],\n  '95': ['n01843065', 'jacamar'],\n  '96': ['n01843383', 'toucan'],\n  '97': ['n01847000', 'drake'],\n  '98': ['n01855032', 'red-breasted_merganser'],\n  '99': ['n01855672', 'goose'],\n  '100': ['n01860187', 'black_swan'],\n  '101': ['n01871265', 'tusker'],\n  '102': ['n01872401', 'echidna'],\n  '103': ['n01873310', 'platypus'],\n  '104': ['n01877812', 'wallaby'],\n  '105': ['n01882714', 'koala'],\n  '106': ['n01883070', 'wombat'],\n  '107': ['n01910747', 'jellyfish'],\n  '108': ['n01914609', 'sea_anemone'],\n  '109': ['n01917289', 'brain_coral'],\n  '110': ['n01924916', 'flatworm'],\n  '111': ['n01930112', 'nematode'],\n  '112': ['n01943899', 'conch'],\n  '113': ['n01944390', 'snail'],\n  '114': ['n01945685', 'slug'],\n  '115': ['n01950731', 'sea_slug'],\n  '116': ['n01955084', 'chiton'],\n  '117': ['n01968897', 'chambered_nautilus'],\n  '118': ['n01978287', 'Dungeness_crab'],\n  '119': ['n01978455', 'rock_crab'],\n  '120': ['n01980166', 'fiddler_crab'],\n  '121': ['n01981276', 'king_crab'],\n  '122': ['n01983481', 'American_lobster'],\n  '123': ['n01984695', 'spiny_lobster'],\n  '124': ['n01985128', 'crayfish'],\n  '125': ['n01986214', 'hermit_crab'],\n  '126': ['n01990800', 'isopod'],\n  '127': ['n02002556', 'white_stork'],\n  '128': ['n02002724', 'black_stork'],\n  '129': ['n02006656', 'spoonbill'],\n  '130': ['n02007558', 'flamingo'],\n  '131': ['n02009229', 'little_blue_heron'],\n  '132': ['n02009912', 'American_egret'],\n  '133': ['n02011460', 'bittern'],\n  '134': ['n02012849', 'crane'],\n  '135': ['n02013706', 'limpkin'],\n  '136': ['n02017213', 'European_gallinule'],\n  '137': ['n02018207', 'American_coot'],\n  '138': ['n02018795', 'bustard'],\n  '139': ['n02025239', 'ruddy_turnstone'],\n  '140': ['n02027492', 'red-backed_sandpiper'],\n  '141': ['n02028035', 'redshank'],\n  '142': ['n02033041', 'dowitcher'],\n  '143': ['n02037110', 'oystercatcher'],\n  '144': ['n02051845', 'pelican'],\n  '145': ['n02056570', 'king_penguin'],\n  '146': ['n02058221', 'albatross'],\n  '147': ['n02066245', 'grey_whale'],\n  '148': ['n02071294', 'killer_whale'],\n  '149': ['n02074367', 'dugong'],\n  '150': ['n02077923', 'sea_lion'],\n  '151': ['n02085620', 'Chihuahua'],\n  '152': ['n02085782', 'Japanese_spaniel'],\n  '153': ['n02085936', 'Maltese_dog'],\n  '154': ['n02086079', 'Pekinese'],\n  '155': ['n02086240', 'Shih-Tzu'],\n  '156': ['n02086646', 'Blenheim_spaniel'],\n  '157': ['n02086910', 'papillon'],\n  '158': ['n02087046', 'toy_terrier'],\n  '159': ['n02087394', 'Rhodesian_ridgeback'],\n  '160': ['n02088094', 'Afghan_hound'],\n  '161': ['n02088238', 'basset'],\n  '162': ['n02088364', 'beagle'],\n  '163': ['n02088466', 'bloodhound'],\n  '164': ['n02088632', 'bluetick'],\n  '165': ['n02089078', 'black-and-tan_coonhound'],\n  '166': ['n02089867', 'Walker_hound'],\n  '167': ['n02089973', 'English_foxhound'],\n  '168': ['n02090379', 'redbone'],\n  '169': ['n02090622', 'borzoi'],\n  '170': ['n02090721', 'Irish_wolfhound'],\n  '171': ['n02091032', 'Italian_greyhound'],\n  '172': ['n02091134', 'whippet'],\n  '173': ['n02091244', 'Ibizan_hound'],\n  '174': ['n02091467', 'Norwegian_elkhound'],\n  '175': ['n02091635', 'otterhound'],\n  '176': ['n02091831', 'Saluki'],\n  '177': ['n02092002', 'Scottish_deerhound'],\n  '178': ['n02092339', 'Weimaraner'],\n  '179': ['n02093256', 'Staffordshire_bullterrier'],\n  '180': ['n02093428', 'American_Staffordshire_terrier'],\n  '181': ['n02093647', 'Bedlington_terrier'],\n  '182': ['n02093754', 'Border_terrier'],\n  '183': ['n02093859', 'Kerry_blue_terrier'],\n  '184': ['n02093991', 'Irish_terrier'],\n  '185': ['n02094114', 'Norfolk_terrier'],\n  '186': ['n02094258', 'Norwich_terrier'],\n  '187': ['n02094433', 'Yorkshire_terrier'],\n  '188': ['n02095314', 'wire-haired_fox_terrier'],\n  '189': ['n02095570', 'Lakeland_terrier'],\n  '190': ['n02095889', 'Sealyham_terrier'],\n  '191': ['n02096051', 'Airedale'],\n  '192': ['n02096177', 'cairn'],\n  '193': ['n02096294', 'Australian_terrier'],\n  '194': ['n02096437', 'Dandie_Dinmont'],\n  '195': ['n02096585', 'Boston_bull'],\n  '196': ['n02097047', 'miniature_schnauzer'],\n  '197': ['n02097130', 'giant_schnauzer'],\n  '198': ['n02097209', 'standard_schnauzer'],\n  '199': ['n02097298', 'Scotch_terrier'],\n  '200': ['n02097474', 'Tibetan_terrier'],\n  '201': ['n02097658', 'silky_terrier'],\n  '202': ['n02098105', 'soft-coated_wheaten_terrier'],\n  '203': ['n02098286', 'West_Highland_white_terrier'],\n  '204': ['n02098413', 'Lhasa'],\n  '205': ['n02099267', 'flat-coated_retriever'],\n  '206': ['n02099429', 'curly-coated_retriever'],\n  '207': ['n02099601', 'golden_retriever'],\n  '208': ['n02099712', 'Labrador_retriever'],\n  '209': ['n02099849', 'Chesapeake_Bay_retriever'],\n  '210': ['n02100236', 'German_short-haired_pointer'],\n  '211': ['n02100583', 'vizsla'],\n  '212': ['n02100735', 'English_setter'],\n  '213': ['n02100877', 'Irish_setter'],\n  '214': ['n02101006', 'Gordon_setter'],\n  '215': ['n02101388', 'Brittany_spaniel'],\n  '216': ['n02101556', 'clumber'],\n  '217': ['n02102040', 'English_springer'],\n  '218': ['n02102177', 'Welsh_springer_spaniel'],\n  '219': ['n02102318', 'cocker_spaniel'],\n  '220': ['n02102480', 'Sussex_spaniel'],\n  '221': ['n02102973', 'Irish_water_spaniel'],\n  '222': ['n02104029', 'kuvasz'],\n  '223': ['n02104365', 'schipperke'],\n  '224': ['n02105056', 'groenendael'],\n  '225': ['n02105162', 'malinois'],\n  '226': ['n02105251', 'briard'],\n  '227': ['n02105412', 'kelpie'],\n  '228': ['n02105505', 'komondor'],\n  '229': ['n02105641', 'Old_English_sheepdog'],\n  '230': ['n02105855', 'Shetland_sheepdog'],\n  '231': ['n02106030', 'collie'],\n  '232': ['n02106166', 'Border_collie'],\n  '233': ['n02106382', 'Bouvier_des_Flandres'],\n  '234': ['n02106550', 'Rottweiler'],\n  '235': ['n02106662', 'German_shepherd'],\n  '236': ['n02107142', 'Doberman'],\n  '237': ['n02107312', 'miniature_pinscher'],\n  '238': ['n02107574', 'Greater_Swiss_Mountain_dog'],\n  '239': ['n02107683', 'Bernese_mountain_dog'],\n  '240': ['n02107908', 'Appenzeller'],\n  '241': ['n02108000', 'EntleBucher'],\n  '242': ['n02108089', 'boxer'],\n  '243': ['n02108422', 'bull_mastiff'],\n  '244': ['n02108551', 'Tibetan_mastiff'],\n  '245': ['n02108915', 'French_bulldog'],\n  '246': ['n02109047', 'Great_Dane'],\n  '247': ['n02109525', 'Saint_Bernard'],\n  '248': ['n02109961', 'Eskimo_dog'],\n  '249': ['n02110063', 'malamute'],\n  '250': ['n02110185', 'Siberian_husky'],\n  '251': ['n02110341', 'dalmatian'],\n  '252': ['n02110627', 'affenpinscher'],\n  '253': ['n02110806', 'basenji'],\n  '254': ['n02110958', 'pug'],\n  '255': ['n02111129', 'Leonberg'],\n  '256': ['n02111277', 'Newfoundland'],\n  '257': ['n02111500', 'Great_Pyrenees'],\n  '258': ['n02111889', 'Samoyed'],\n  '259': ['n02112018', 'Pomeranian'],\n  '260': ['n02112137', 'chow'],\n  '261': ['n02112350', 'keeshond'],\n  '262': ['n02112706', 'Brabancon_griffon'],\n  '263': ['n02113023', 'Pembroke'],\n  '264': ['n02113186', 'Cardigan'],\n  '265': ['n02113624', 'toy_poodle'],\n  '266': ['n02113712', 'miniature_poodle'],\n  '267': ['n02113799', 'standard_poodle'],\n  '268': ['n02113978', 'Mexican_hairless'],\n  '269': ['n02114367', 'timber_wolf'],\n  '270': ['n02114548', 'white_wolf'],\n  '271': ['n02114712', 'red_wolf'],\n  '272': ['n02114855', 'coyote'],\n  '273': ['n02115641', 'dingo'],\n  '274': ['n02115913', 'dhole'],\n  '275': ['n02116738', 'African_hunting_dog'],\n  '276': ['n02117135', 'hyena'],\n  '277': ['n02119022', 'red_fox'],\n  '278': ['n02119789', 'kit_fox'],\n  '279': ['n02120079', 'Arctic_fox'],\n  '280': ['n02120505', 'grey_fox'],\n  '281': ['n02123045', 'tabby'],\n  '282': ['n02123159', 'tiger_cat'],\n  '283': ['n02123394', 'Persian_cat'],\n  '284': ['n02123597', 'Siamese_cat'],\n  '285': ['n02124075', 'Egyptian_cat'],\n  '286': ['n02125311', 'cougar'],\n  '287': ['n02127052', 'lynx'],\n  '288': ['n02128385', 'leopard'],\n  '289': ['n02128757', 'snow_leopard'],\n  '290': ['n02128925', 'jaguar'],\n  '291': ['n02129165', 'lion'],\n  '292': ['n02129604', 'tiger'],\n  '293': ['n02130308', 'cheetah'],\n  '294': ['n02132136', 'brown_bear'],\n  '295': ['n02133161', 'American_black_bear'],\n  '296': ['n02134084', 'ice_bear'],\n  '297': ['n02134418', 'sloth_bear'],\n  '298': ['n02137549', 'mongoose'],\n  '299': ['n02138441', 'meerkat'],\n  '300': ['n02165105', 'tiger_beetle'],\n  '301': ['n02165456', 'ladybug'],\n  '302': ['n02167151', 'ground_beetle'],\n  '303': ['n02168699', 'long-horned_beetle'],\n  '304': ['n02169497', 'leaf_beetle'],\n  '305': ['n02172182', 'dung_beetle'],\n  '306': ['n02174001', 'rhinoceros_beetle'],\n  '307': ['n02177972', 'weevil'],\n  '308': ['n02190166', 'fly'],\n  '309': ['n02206856', 'bee'],\n  '310': ['n02219486', 'ant'],\n  '311': ['n02226429', 'grasshopper'],\n  '312': ['n02229544', 'cricket'],\n  '313': ['n02231487', 'walking_stick'],\n  '314': ['n02233338', 'cockroach'],\n  '315': ['n02236044', 'mantis'],\n  '316': ['n02256656', 'cicada'],\n  '317': ['n02259212', 'leafhopper'],\n  '318': ['n02264363', 'lacewing'],\n  '319': ['n02268443', 'dragonfly'],\n  '320': ['n02268853', 'damselfly'],\n  '321': ['n02276258', 'admiral'],\n  '322': ['n02277742', 'ringlet'],\n  '323': ['n02279972', 'monarch'],\n  '324': ['n02280649', 'cabbage_butterfly'],\n  '325': ['n02281406', 'sulphur_butterfly'],\n  '326': ['n02281787', 'lycaenid'],\n  '327': ['n02317335', 'starfish'],\n  '328': ['n02319095', 'sea_urchin'],\n  '329': ['n02321529', 'sea_cucumber'],\n  '330': ['n02325366', 'wood_rabbit'],\n  '331': ['n02326432', 'hare'],\n  '332': ['n02328150', 'Angora'],\n  '333': ['n02342885', 'hamster'],\n  '334': ['n02346627', 'porcupine'],\n  '335': ['n02356798', 'fox_squirrel'],\n  '336': ['n02361337', 'marmot'],\n  '337': ['n02363005', 'beaver'],\n  '338': ['n02364673', 'guinea_pig'],\n  '339': ['n02389026', 'sorrel'],\n  '340': ['n02391049', 'zebra'],\n  '341': ['n02395406', 'hog'],\n  '342': ['n02396427', 'wild_boar'],\n  '343': ['n02397096', 'warthog'],\n  '344': ['n02398521', 'hippopotamus'],\n  '345': ['n02403003', 'ox'],\n  '346': ['n02408429', 'water_buffalo'],\n  '347': ['n02410509', 'bison'],\n  '348': ['n02412080', 'ram'],\n  '349': ['n02415577', 'bighorn'],\n  '350': ['n02417914', 'ibex'],\n  '351': ['n02422106', 'hartebeest'],\n  '352': ['n02422699', 'impala'],\n  '353': ['n02423022', 'gazelle'],\n  '354': ['n02437312', 'Arabian_camel'],\n  '355': ['n02437616', 'llama'],\n  '356': ['n02441942', 'weasel'],\n  '357': ['n02442845', 'mink'],\n  '358': ['n02443114', 'polecat'],\n  '359': ['n02443484', 'black-footed_ferret'],\n  '360': ['n02444819', 'otter'],\n  '361': ['n02445715', 'skunk'],\n  '362': ['n02447366', 'badger'],\n  '363': ['n02454379', 'armadillo'],\n  '364': ['n02457408', 'three-toed_sloth'],\n  '365': ['n02480495', 'orangutan'],\n  '366': ['n02480855', 'gorilla'],\n  '367': ['n02481823', 'chimpanzee'],\n  '368': ['n02483362', 'gibbon'],\n  '369': ['n02483708', 'siamang'],\n  '370': ['n02484975', 'guenon'],\n  '371': ['n02486261', 'patas'],\n  '372': ['n02486410', 'baboon'],\n  '373': ['n02487347', 'macaque'],\n  '374': ['n02488291', 'langur'],\n  '375': ['n02488702', 'colobus'],\n  '376': ['n02489166', 'proboscis_monkey'],\n  '377': ['n02490219', 'marmoset'],\n  '378': ['n02492035', 'capuchin'],\n  '379': ['n02492660', 'howler_monkey'],\n  '380': ['n02493509', 'titi'],\n  '381': ['n02493793', 'spider_monkey'],\n  '382': ['n02494079', 'squirrel_monkey'],\n  '383': ['n02497673', 'Madagascar_cat'],\n  '384': ['n02500267', 'indri'],\n  '385': ['n02504013', 'Indian_elephant'],\n  '386': ['n02504458', 'African_elephant'],\n  '387': ['n02509815', 'lesser_panda'],\n  '388': ['n02510455', 'giant_panda'],\n  '389': ['n02514041', 'barracouta'],\n  '390': ['n02526121', 'eel'],\n  '391': ['n02536864', 'coho'],\n  '392': ['n02606052', 'rock_beauty'],\n  '393': ['n02607072', 'anemone_fish'],\n  '394': ['n02640242', 'sturgeon'],\n  '395': ['n02641379', 'gar'],\n  '396': ['n02643566', 'lionfish'],\n  '397': ['n02655020', 'puffer'],\n  '398': ['n02666196', 'abacus'],\n  '399': ['n02667093', 'abaya'],\n  '400': ['n02669723', 'academic_gown'],\n  '401': ['n02672831', 'accordion'],\n  '402': ['n02676566', 'acoustic_guitar'],\n  '403': ['n02687172', 'aircraft_carrier'],\n  '404': ['n02690373', 'airliner'],\n  '405': ['n02692877', 'airship'],\n  '406': ['n02699494', 'altar'],\n  '407': ['n02701002', 'ambulance'],\n  '408': ['n02704792', 'amphibian'],\n  '409': ['n02708093', 'analog_clock'],\n  '410': ['n02727426', 'apiary'],\n  '411': ['n02730930', 'apron'],\n  '412': ['n02747177', 'ashcan'],\n  '413': ['n02749479', 'assault_rifle'],\n  '414': ['n02769748', 'backpack'],\n  '415': ['n02776631', 'bakery'],\n  '416': ['n02777292', 'balance_beam'],\n  '417': ['n02782093', 'balloon'],\n  '418': ['n02783161', 'ballpoint'],\n  '419': ['n02786058', 'Band_Aid'],\n  '420': ['n02787622', 'banjo'],\n  '421': ['n02788148', 'bannister'],\n  '422': ['n02790996', 'barbell'],\n  '423': ['n02791124', 'barber_chair'],\n  '424': ['n02791270', 'barbershop'],\n  '425': ['n02793495', 'barn'],\n  '426': ['n02794156', 'barometer'],\n  '427': ['n02795169', 'barrel'],\n  '428': ['n02797295', 'barrow'],\n  '429': ['n02799071', 'baseball'],\n  '430': ['n02802426', 'basketball'],\n  '431': ['n02804414', 'bassinet'],\n  '432': ['n02804610', 'bassoon'],\n  '433': ['n02807133', 'bathing_cap'],\n  '434': ['n02808304', 'bath_towel'],\n  '435': ['n02808440', 'bathtub'],\n  '436': ['n02814533', 'beach_wagon'],\n  '437': ['n02814860', 'beacon'],\n  '438': ['n02815834', 'beaker'],\n  '439': ['n02817516', 'bearskin'],\n  '440': ['n02823428', 'beer_bottle'],\n  '441': ['n02823750', 'beer_glass'],\n  '442': ['n02825657', 'bell_cote'],\n  '443': ['n02834397', 'bib'],\n  '444': ['n02835271', 'bicycle-built-for-two'],\n  '445': ['n02837789', 'bikini'],\n  '446': ['n02840245', 'binder'],\n  '447': ['n02841315', 'binoculars'],\n  '448': ['n02843684', 'birdhouse'],\n  '449': ['n02859443', 'boathouse'],\n  '450': ['n02860847', 'bobsled'],\n  '451': ['n02865351', 'bolo_tie'],\n  '452': ['n02869837', 'bonnet'],\n  '453': ['n02870880', 'bookcase'],\n  '454': ['n02871525', 'bookshop'],\n  '455': ['n02877765', 'bottlecap'],\n  '456': ['n02879718', 'bow'],\n  '457': ['n02883205', 'bow_tie'],\n  '458': ['n02892201', 'brass'],\n  '459': ['n02892767', 'brassiere'],\n  '460': ['n02894605', 'breakwater'],\n  '461': ['n02895154', 'breastplate'],\n  '462': ['n02906734', 'broom'],\n  '463': ['n02909870', 'bucket'],\n  '464': ['n02910353', 'buckle'],\n  '465': ['n02916936', 'bulletproof_vest'],\n  '466': ['n02917067', 'bullet_train'],\n  '467': ['n02927161', 'butcher_shop'],\n  '468': ['n02930766', 'cab'],\n  '469': ['n02939185', 'caldron'],\n  '470': ['n02948072', 'candle'],\n  '471': ['n02950826', 'cannon'],\n  '472': ['n02951358', 'canoe'],\n  '473': ['n02951585', 'can_opener'],\n  '474': ['n02963159', 'cardigan'],\n  '475': ['n02965783', 'car_mirror'],\n  '476': ['n02966193', 'carousel'],\n  '477': ['n02966687', 'carpenter\\'s_kit'],\n  '478': ['n02971356', 'carton'],\n  '479': ['n02974003', 'car_wheel'],\n  '480': ['n02977058', 'cash_machine'],\n  '481': ['n02978881', 'cassette'],\n  '482': ['n02979186', 'cassette_player'],\n  '483': ['n02980441', 'castle'],\n  '484': ['n02981792', 'catamaran'],\n  '485': ['n02988304', 'CD_player'],\n  '486': ['n02992211', 'cello'],\n  '487': ['n02992529', 'cellular_telephone'],\n  '488': ['n02999410', 'chain'],\n  '489': ['n03000134', 'chainlink_fence'],\n  '490': ['n03000247', 'chain_mail'],\n  '491': ['n03000684', 'chain_saw'],\n  '492': ['n03014705', 'chest'],\n  '493': ['n03016953', 'chiffonier'],\n  '494': ['n03017168', 'chime'],\n  '495': ['n03018349', 'china_cabinet'],\n  '496': ['n03026506', 'Christmas_stocking'],\n  '497': ['n03028079', 'church'],\n  '498': ['n03032252', 'cinema'],\n  '499': ['n03041632', 'cleaver'],\n  '500': ['n03042490', 'cliff_dwelling'],\n  '501': ['n03045698', 'cloak'],\n  '502': ['n03047690', 'clog'],\n  '503': ['n03062245', 'cocktail_shaker'],\n  '504': ['n03063599', 'coffee_mug'],\n  '505': ['n03063689', 'coffeepot'],\n  '506': ['n03065424', 'coil'],\n  '507': ['n03075370', 'combination_lock'],\n  '508': ['n03085013', 'computer_keyboard'],\n  '509': ['n03089624', 'confectionery'],\n  '510': ['n03095699', 'container_ship'],\n  '511': ['n03100240', 'convertible'],\n  '512': ['n03109150', 'corkscrew'],\n  '513': ['n03110669', 'cornet'],\n  '514': ['n03124043', 'cowboy_boot'],\n  '515': ['n03124170', 'cowboy_hat'],\n  '516': ['n03125729', 'cradle'],\n  '517': ['n03126707', 'crane'],\n  '518': ['n03127747', 'crash_helmet'],\n  '519': ['n03127925', 'crate'],\n  '520': ['n03131574', 'crib'],\n  '521': ['n03133878', 'Crock_Pot'],\n  '522': ['n03134739', 'croquet_ball'],\n  '523': ['n03141823', 'crutch'],\n  '524': ['n03146219', 'cuirass'],\n  '525': ['n03160309', 'dam'],\n  '526': ['n03179701', 'desk'],\n  '527': ['n03180011', 'desktop_computer'],\n  '528': ['n03187595', 'dial_telephone'],\n  '529': ['n03188531', 'diaper'],\n  '530': ['n03196217', 'digital_clock'],\n  '531': ['n03197337', 'digital_watch'],\n  '532': ['n03201208', 'dining_table'],\n  '533': ['n03207743', 'dishrag'],\n  '534': ['n03207941', 'dishwasher'],\n  '535': ['n03208938', 'disk_brake'],\n  '536': ['n03216828', 'dock'],\n  '537': ['n03218198', 'dogsled'],\n  '538': ['n03220513', 'dome'],\n  '539': ['n03223299', 'doormat'],\n  '540': ['n03240683', 'drilling_platform'],\n  '541': ['n03249569', 'drum'],\n  '542': ['n03250847', 'drumstick'],\n  '543': ['n03255030', 'dumbbell'],\n  '544': ['n03259280', 'Dutch_oven'],\n  '545': ['n03271574', 'electric_fan'],\n  '546': ['n03272010', 'electric_guitar'],\n  '547': ['n03272562', 'electric_locomotive'],\n  '548': ['n03290653', 'entertainment_center'],\n  '549': ['n03291819', 'envelope'],\n  '550': ['n03297495', 'espresso_maker'],\n  '551': ['n03314780', 'face_powder'],\n  '552': ['n03325584', 'feather_boa'],\n  '553': ['n03337140', 'file'],\n  '554': ['n03344393', 'fireboat'],\n  '555': ['n03345487', 'fire_engine'],\n  '556': ['n03347037', 'fire_screen'],\n  '557': ['n03355925', 'flagpole'],\n  '558': ['n03372029', 'flute'],\n  '559': ['n03376595', 'folding_chair'],\n  '560': ['n03379051', 'football_helmet'],\n  '561': ['n03384352', 'forklift'],\n  '562': ['n03388043', 'fountain'],\n  '563': ['n03388183', 'fountain_pen'],\n  '564': ['n03388549', 'four-poster'],\n  '565': ['n03393912', 'freight_car'],\n  '566': ['n03394916', 'French_horn'],\n  '567': ['n03400231', 'frying_pan'],\n  '568': ['n03404251', 'fur_coat'],\n  '569': ['n03417042', 'garbage_truck'],\n  '570': ['n03424325', 'gasmask'],\n  '571': ['n03425413', 'gas_pump'],\n  '572': ['n03443371', 'goblet'],\n  '573': ['n03444034', 'go-kart'],\n  '574': ['n03445777', 'golf_ball'],\n  '575': ['n03445924', 'golfcart'],\n  '576': ['n03447447', 'gondola'],\n  '577': ['n03447721', 'gong'],\n  '578': ['n03450230', 'gown'],\n  '579': ['n03452741', 'grand_piano'],\n  '580': ['n03457902', 'greenhouse'],\n  '581': ['n03459775', 'grille'],\n  '582': ['n03461385', 'grocery_store'],\n  '583': ['n03467068', 'guillotine'],\n  '584': ['n03476684', 'hair_slide'],\n  '585': ['n03476991', 'hair_spray'],\n  '586': ['n03478589', 'half_track'],\n  '587': ['n03481172', 'hammer'],\n  '588': ['n03482405', 'hamper'],\n  '589': ['n03483316', 'hand_blower'],\n  '590': ['n03485407', 'hand-held_computer'],\n  '591': ['n03485794', 'handkerchief'],\n  '592': ['n03492542', 'hard_disc'],\n  '593': ['n03494278', 'harmonica'],\n  '594': ['n03495258', 'harp'],\n  '595': ['n03496892', 'harvester'],\n  '596': ['n03498962', 'hatchet'],\n  '597': ['n03527444', 'holster'],\n  '598': ['n03529860', 'home_theater'],\n  '599': ['n03530642', 'honeycomb'],\n  '600': ['n03532672', 'hook'],\n  '601': ['n03534580', 'hoopskirt'],\n  '602': ['n03535780', 'horizontal_bar'],\n  '603': ['n03538406', 'horse_cart'],\n  '604': ['n03544143', 'hourglass'],\n  '605': ['n03584254', 'iPod'],\n  '606': ['n03584829', 'iron'],\n  '607': ['n03590841', 'jack-o\\'-lantern'],\n  '608': ['n03594734', 'jean'],\n  '609': ['n03594945', 'jeep'],\n  '610': ['n03595614', 'jersey'],\n  '611': ['n03598930', 'jigsaw_puzzle'],\n  '612': ['n03599486', 'jinrikisha'],\n  '613': ['n03602883', 'joystick'],\n  '614': ['n03617480', 'kimono'],\n  '615': ['n03623198', 'knee_pad'],\n  '616': ['n03627232', 'knot'],\n  '617': ['n03630383', 'lab_coat'],\n  '618': ['n03633091', 'ladle'],\n  '619': ['n03637318', 'lampshade'],\n  '620': ['n03642806', 'laptop'],\n  '621': ['n03649909', 'lawn_mower'],\n  '622': ['n03657121', 'lens_cap'],\n  '623': ['n03658185', 'letter_opener'],\n  '624': ['n03661043', 'library'],\n  '625': ['n03662601', 'lifeboat'],\n  '626': ['n03666591', 'lighter'],\n  '627': ['n03670208', 'limousine'],\n  '628': ['n03673027', 'liner'],\n  '629': ['n03676483', 'lipstick'],\n  '630': ['n03680355', 'Loafer'],\n  '631': ['n03690938', 'lotion'],\n  '632': ['n03691459', 'loudspeaker'],\n  '633': ['n03692522', 'loupe'],\n  '634': ['n03697007', 'lumbermill'],\n  '635': ['n03706229', 'magnetic_compass'],\n  '636': ['n03709823', 'mailbag'],\n  '637': ['n03710193', 'mailbox'],\n  '638': ['n03710637', 'maillot'],\n  '639': ['n03710721', 'maillot'],\n  '640': ['n03717622', 'manhole_cover'],\n  '641': ['n03720891', 'maraca'],\n  '642': ['n03721384', 'marimba'],\n  '643': ['n03724870', 'mask'],\n  '644': ['n03729826', 'matchstick'],\n  '645': ['n03733131', 'maypole'],\n  '646': ['n03733281', 'maze'],\n  '647': ['n03733805', 'measuring_cup'],\n  '648': ['n03742115', 'medicine_chest'],\n  '649': ['n03743016', 'megalith'],\n  '650': ['n03759954', 'microphone'],\n  '651': ['n03761084', 'microwave'],\n  '652': ['n03763968', 'military_uniform'],\n  '653': ['n03764736', 'milk_can'],\n  '654': ['n03769881', 'minibus'],\n  '655': ['n03770439', 'miniskirt'],\n  '656': ['n03770679', 'minivan'],\n  '657': ['n03773504', 'missile'],\n  '658': ['n03775071', 'mitten'],\n  '659': ['n03775546', 'mixing_bowl'],\n  '660': ['n03776460', 'mobile_home'],\n  '661': ['n03777568', 'Model_T'],\n  '662': ['n03777754', 'modem'],\n  '663': ['n03781244', 'monastery'],\n  '664': ['n03782006', 'monitor'],\n  '665': ['n03785016', 'moped'],\n  '666': ['n03786901', 'mortar'],\n  '667': ['n03787032', 'mortarboard'],\n  '668': ['n03788195', 'mosque'],\n  '669': ['n03788365', 'mosquito_net'],\n  '670': ['n03791053', 'motor_scooter'],\n  '671': ['n03792782', 'mountain_bike'],\n  '672': ['n03792972', 'mountain_tent'],\n  '673': ['n03793489', 'mouse'],\n  '674': ['n03794056', 'mousetrap'],\n  '675': ['n03796401', 'moving_van'],\n  '676': ['n03803284', 'muzzle'],\n  '677': ['n03804744', 'nail'],\n  '678': ['n03814639', 'neck_brace'],\n  '679': ['n03814906', 'necklace'],\n  '680': ['n03825788', 'nipple'],\n  '681': ['n03832673', 'notebook'],\n  '682': ['n03837869', 'obelisk'],\n  '683': ['n03838899', 'oboe'],\n  '684': ['n03840681', 'ocarina'],\n  '685': ['n03841143', 'odometer'],\n  '686': ['n03843555', 'oil_filter'],\n  '687': ['n03854065', 'organ'],\n  '688': ['n03857828', 'oscilloscope'],\n  '689': ['n03866082', 'overskirt'],\n  '690': ['n03868242', 'oxcart'],\n  '691': ['n03868863', 'oxygen_mask'],\n  '692': ['n03871628', 'packet'],\n  '693': ['n03873416', 'paddle'],\n  '694': ['n03874293', 'paddlewheel'],\n  '695': ['n03874599', 'padlock'],\n  '696': ['n03876231', 'paintbrush'],\n  '697': ['n03877472', 'pajama'],\n  '698': ['n03877845', 'palace'],\n  '699': ['n03884397', 'panpipe'],\n  '700': ['n03887697', 'paper_towel'],\n  '701': ['n03888257', 'parachute'],\n  '702': ['n03888605', 'parallel_bars'],\n  '703': ['n03891251', 'park_bench'],\n  '704': ['n03891332', 'parking_meter'],\n  '705': ['n03895866', 'passenger_car'],\n  '706': ['n03899768', 'patio'],\n  '707': ['n03902125', 'pay-phone'],\n  '708': ['n03903868', 'pedestal'],\n  '709': ['n03908618', 'pencil_box'],\n  '710': ['n03908714', 'pencil_sharpener'],\n  '711': ['n03916031', 'perfume'],\n  '712': ['n03920288', 'Petri_dish'],\n  '713': ['n03924679', 'photocopier'],\n  '714': ['n03929660', 'pick'],\n  '715': ['n03929855', 'pickelhaube'],\n  '716': ['n03930313', 'picket_fence'],\n  '717': ['n03930630', 'pickup'],\n  '718': ['n03933933', 'pier'],\n  '719': ['n03935335', 'piggy_bank'],\n  '720': ['n03937543', 'pill_bottle'],\n  '721': ['n03938244', 'pillow'],\n  '722': ['n03942813', 'ping-pong_ball'],\n  '723': ['n03944341', 'pinwheel'],\n  '724': ['n03947888', 'pirate'],\n  '725': ['n03950228', 'pitcher'],\n  '726': ['n03954731', 'plane'],\n  '727': ['n03956157', 'planetarium'],\n  '728': ['n03958227', 'plastic_bag'],\n  '729': ['n03961711', 'plate_rack'],\n  '730': ['n03967562', 'plow'],\n  '731': ['n03970156', 'plunger'],\n  '732': ['n03976467', 'Polaroid_camera'],\n  '733': ['n03976657', 'pole'],\n  '734': ['n03977966', 'police_van'],\n  '735': ['n03980874', 'poncho'],\n  '736': ['n03982430', 'pool_table'],\n  '737': ['n03983396', 'pop_bottle'],\n  '738': ['n03991062', 'pot'],\n  '739': ['n03992509', 'potter\\'s_wheel'],\n  '740': ['n03995372', 'power_drill'],\n  '741': ['n03998194', 'prayer_rug'],\n  '742': ['n04004767', 'printer'],\n  '743': ['n04005630', 'prison'],\n  '744': ['n04008634', 'projectile'],\n  '745': ['n04009552', 'projector'],\n  '746': ['n04019541', 'puck'],\n  '747': ['n04023962', 'punching_bag'],\n  '748': ['n04026417', 'purse'],\n  '749': ['n04033901', 'quill'],\n  '750': ['n04033995', 'quilt'],\n  '751': ['n04037443', 'racer'],\n  '752': ['n04039381', 'racket'],\n  '753': ['n04040759', 'radiator'],\n  '754': ['n04041544', 'radio'],\n  '755': ['n04044716', 'radio_telescope'],\n  '756': ['n04049303', 'rain_barrel'],\n  '757': ['n04065272', 'recreational_vehicle'],\n  '758': ['n04067472', 'reel'],\n  '759': ['n04069434', 'reflex_camera'],\n  '760': ['n04070727', 'refrigerator'],\n  '761': ['n04074963', 'remote_control'],\n  '762': ['n04081281', 'restaurant'],\n  '763': ['n04086273', 'revolver'],\n  '764': ['n04090263', 'rifle'],\n  '765': ['n04099969', 'rocking_chair'],\n  '766': ['n04111531', 'rotisserie'],\n  '767': ['n04116512', 'rubber_eraser'],\n  '768': ['n04118538', 'rugby_ball'],\n  '769': ['n04118776', 'rule'],\n  '770': ['n04120489', 'running_shoe'],\n  '771': ['n04125021', 'safe'],\n  '772': ['n04127249', 'safety_pin'],\n  '773': ['n04131690', 'saltshaker'],\n  '774': ['n04133789', 'sandal'],\n  '775': ['n04136333', 'sarong'],\n  '776': ['n04141076', 'sax'],\n  '777': ['n04141327', 'scabbard'],\n  '778': ['n04141975', 'scale'],\n  '779': ['n04146614', 'school_bus'],\n  '780': ['n04147183', 'schooner'],\n  '781': ['n04149813', 'scoreboard'],\n  '782': ['n04152593', 'screen'],\n  '783': ['n04153751', 'screw'],\n  '784': ['n04154565', 'screwdriver'],\n  '785': ['n04162706', 'seat_belt'],\n  '786': ['n04179913', 'sewing_machine'],\n  '787': ['n04192698', 'shield'],\n  '788': ['n04200800', 'shoe_shop'],\n  '789': ['n04201297', 'shoji'],\n  '790': ['n04204238', 'shopping_basket'],\n  '791': ['n04204347', 'shopping_cart'],\n  '792': ['n04208210', 'shovel'],\n  '793': ['n04209133', 'shower_cap'],\n  '794': ['n04209239', 'shower_curtain'],\n  '795': ['n04228054', 'ski'],\n  '796': ['n04229816', 'ski_mask'],\n  '797': ['n04235860', 'sleeping_bag'],\n  '798': ['n04238763', 'slide_rule'],\n  '799': ['n04239074', 'sliding_door'],\n  '800': ['n04243546', 'slot'],\n  '801': ['n04251144', 'snorkel'],\n  '802': ['n04252077', 'snowmobile'],\n  '803': ['n04252225', 'snowplow'],\n  '804': ['n04254120', 'soap_dispenser'],\n  '805': ['n04254680', 'soccer_ball'],\n  '806': ['n04254777', 'sock'],\n  '807': ['n04258138', 'solar_dish'],\n  '808': ['n04259630', 'sombrero'],\n  '809': ['n04263257', 'soup_bowl'],\n  '810': ['n04264628', 'space_bar'],\n  '811': ['n04265275', 'space_heater'],\n  '812': ['n04266014', 'space_shuttle'],\n  '813': ['n04270147', 'spatula'],\n  '814': ['n04273569', 'speedboat'],\n  '815': ['n04275548', 'spider_web'],\n  '816': ['n04277352', 'spindle'],\n  '817': ['n04285008', 'sports_car'],\n  '818': ['n04286575', 'spotlight'],\n  '819': ['n04296562', 'stage'],\n  '820': ['n04310018', 'steam_locomotive'],\n  '821': ['n04311004', 'steel_arch_bridge'],\n  '822': ['n04311174', 'steel_drum'],\n  '823': ['n04317175', 'stethoscope'],\n  '824': ['n04325704', 'stole'],\n  '825': ['n04326547', 'stone_wall'],\n  '826': ['n04328186', 'stopwatch'],\n  '827': ['n04330267', 'stove'],\n  '828': ['n04332243', 'strainer'],\n  '829': ['n04335435', 'streetcar'],\n  '830': ['n04336792', 'stretcher'],\n  '831': ['n04344873', 'studio_couch'],\n  '832': ['n04346328', 'stupa'],\n  '833': ['n04347754', 'submarine'],\n  '834': ['n04350905', 'suit'],\n  '835': ['n04355338', 'sundial'],\n  '836': ['n04355933', 'sunglass'],\n  '837': ['n04356056', 'sunglasses'],\n  '838': ['n04357314', 'sunscreen'],\n  '839': ['n04366367', 'suspension_bridge'],\n  '840': ['n04367480', 'swab'],\n  '841': ['n04370456', 'sweatshirt'],\n  '842': ['n04371430', 'swimming_trunks'],\n  '843': ['n04371774', 'swing'],\n  '844': ['n04372370', 'switch'],\n  '845': ['n04376876', 'syringe'],\n  '846': ['n04380533', 'table_lamp'],\n  '847': ['n04389033', 'tank'],\n  '848': ['n04392985', 'tape_player'],\n  '849': ['n04398044', 'teapot'],\n  '850': ['n04399382', 'teddy'],\n  '851': ['n04404412', 'television'],\n  '852': ['n04409515', 'tennis_ball'],\n  '853': ['n04417672', 'thatch'],\n  '854': ['n04418357', 'theater_curtain'],\n  '855': ['n04423845', 'thimble'],\n  '856': ['n04428191', 'thresher'],\n  '857': ['n04429376', 'throne'],\n  '858': ['n04435653', 'tile_roof'],\n  '859': ['n04442312', 'toaster'],\n  '860': ['n04443257', 'tobacco_shop'],\n  '861': ['n04447861', 'toilet_seat'],\n  '862': ['n04456115', 'torch'],\n  '863': ['n04458633', 'totem_pole'],\n  '864': ['n04461696', 'tow_truck'],\n  '865': ['n04462240', 'toyshop'],\n  '866': ['n04465501', 'tractor'],\n  '867': ['n04467665', 'trailer_truck'],\n  '868': ['n04476259', 'tray'],\n  '869': ['n04479046', 'trench_coat'],\n  '870': ['n04482393', 'tricycle'],\n  '871': ['n04483307', 'trimaran'],\n  '872': ['n04485082', 'tripod'],\n  '873': ['n04486054', 'triumphal_arch'],\n  '874': ['n04487081', 'trolleybus'],\n  '875': ['n04487394', 'trombone'],\n  '876': ['n04493381', 'tub'],\n  '877': ['n04501370', 'turnstile'],\n  '878': ['n04505470', 'typewriter_keyboard'],\n  '879': ['n04507155', 'umbrella'],\n  '880': ['n04509417', 'unicycle'],\n  '881': ['n04515003', 'upright'],\n  '882': ['n04517823', 'vacuum'],\n  '883': ['n04522168', 'vase'],\n  '884': ['n04523525', 'vault'],\n  '885': ['n04525038', 'velvet'],\n  '886': ['n04525305', 'vending_machine'],\n  '887': ['n04532106', 'vestment'],\n  '888': ['n04532670', 'viaduct'],\n  '889': ['n04536866', 'violin'],\n  '890': ['n04540053', 'volleyball'],\n  '891': ['n04542943', 'waffle_iron'],\n  '892': ['n04548280', 'wall_clock'],\n  '893': ['n04548362', 'wallet'],\n  '894': ['n04550184', 'wardrobe'],\n  '895': ['n04552348', 'warplane'],\n  '896': ['n04553703', 'washbasin'],\n  '897': ['n04554684', 'washer'],\n  '898': ['n04557648', 'water_bottle'],\n  '899': ['n04560804', 'water_jug'],\n  '900': ['n04562935', 'water_tower'],\n  '901': ['n04579145', 'whiskey_jug'],\n  '902': ['n04579432', 'whistle'],\n  '903': ['n04584207', 'wig'],\n  '904': ['n04589890', 'window_screen'],\n  '905': ['n04590129', 'window_shade'],\n  '906': ['n04591157', 'Windsor_tie'],\n  '907': ['n04591713', 'wine_bottle'],\n  '908': ['n04592741', 'wing'],\n  '909': ['n04596742', 'wok'],\n  '910': ['n04597913', 'wooden_spoon'],\n  '911': ['n04599235', 'wool'],\n  '912': ['n04604644', 'worm_fence'],\n  '913': ['n04606251', 'wreck'],\n  '914': ['n04612504', 'yawl'],\n  '915': ['n04613696', 'yurt'],\n  '916': ['n06359193', 'web_site'],\n  '917': ['n06596364', 'comic_book'],\n  '918': ['n06785654', 'crossword_puzzle'],\n  '919': ['n06794110', 'street_sign'],\n  '920': ['n06874185', 'traffic_light'],\n  '921': ['n07248320', 'book_jacket'],\n  '922': ['n07565083', 'menu'],\n  '923': ['n07579787', 'plate'],\n  '924': ['n07583066', 'guacamole'],\n  '925': ['n07584110', 'consomme'],\n  '926': ['n07590611', 'hot_pot'],\n  '927': ['n07613480', 'trifle'],\n  '928': ['n07614500', 'ice_cream'],\n  '929': ['n07615774', 'ice_lolly'],\n  '930': ['n07684084', 'French_loaf'],\n  '931': ['n07693725', 'bagel'],\n  '932': ['n07695742', 'pretzel'],\n  '933': ['n07697313', 'cheeseburger'],\n  '934': ['n07697537', 'hotdog'],\n  '935': ['n07711569', 'mashed_potato'],\n  '936': ['n07714571', 'head_cabbage'],\n  '937': ['n07714990', 'broccoli'],\n  '938': ['n07715103', 'cauliflower'],\n  '939': ['n07716358', 'zucchini'],\n  '940': ['n07716906', 'spaghetti_squash'],\n  '941': ['n07717410', 'acorn_squash'],\n  '942': ['n07717556', 'butternut_squash'],\n  '943': ['n07718472', 'cucumber'],\n  '944': ['n07718747', 'artichoke'],\n  '945': ['n07720875', 'bell_pepper'],\n  '946': ['n07730033', 'cardoon'],\n  '947': ['n07734744', 'mushroom'],\n  '948': ['n07742313', 'Granny_Smith'],\n  '949': ['n07745940', 'strawberry'],\n  '950': ['n07747607', 'orange'],\n  '951': ['n07749582', 'lemon'],\n  '952': ['n07753113', 'fig'],\n  '953': ['n07753275', 'pineapple'],\n  '954': ['n07753592', 'banana'],\n  '955': ['n07754684', 'jackfruit'],\n  '956': ['n07760859', 'custard_apple'],\n  '957': ['n07768694', 'pomegranate'],\n  '958': ['n07802026', 'hay'],\n  '959': ['n07831146', 'carbonara'],\n  '960': ['n07836838', 'chocolate_sauce'],\n  '961': ['n07860988', 'dough'],\n  '962': ['n07871810', 'meat_loaf'],\n  '963': ['n07873807', 'pizza'],\n  '964': ['n07875152', 'potpie'],\n  '965': ['n07880968', 'burrito'],\n  '966': ['n07892512', 'red_wine'],\n  '967': ['n07920052', 'espresso'],\n  '968': ['n07930864', 'cup'],\n  '969': ['n07932039', 'eggnog'],\n  '970': ['n09193705', 'alp'],\n  '971': ['n09229709', 'bubble'],\n  '972': ['n09246464', 'cliff'],\n  '973': ['n09256479', 'coral_reef'],\n  '974': ['n09288635', 'geyser'],\n  '975': ['n09332890', 'lakeside'],\n  '976': ['n09399592', 'promontory'],\n  '977': ['n09421951', 'sandbar'],\n  '978': ['n09428293', 'seashore'],\n  '979': ['n09468604', 'valley'],\n  '980': ['n09472597', 'volcano'],\n  '981': ['n09835506', 'ballplayer'],\n  '982': ['n10148035', 'groom'],\n  '983': ['n10565667', 'scuba_diver'],\n  '984': ['n11879895', 'rapeseed'],\n  '985': ['n11939491', 'daisy'],\n  '986': ['n12057211', 'yellow_lady\\'s_slipper'],\n  '987': ['n12144580', 'corn'],\n  '988': ['n12267677', 'acorn'],\n  '989': ['n12620546', 'hip'],\n  '990': ['n12768682', 'buckeye'],\n  '991': ['n12985857', 'coral_fungus'],\n  '992': ['n12998815', 'agaric'],\n  '993': ['n13037406', 'gyromitra'],\n  '994': ['n13040303', 'stinkhorn'],\n  '995': ['n13044778', 'earthstar'],\n  '996': ['n13052670', 'hen-of-the-woods'],\n  '997': ['n13054560', 'bolete'],\n  '998': ['n13133613', 'ear'],\n  '999': ['n15075141', 'toilet_tissue']\n};\n",null,null,null,null,null,null,null,"import { render, staticRenderFns } from \"./ImageModelUI.vue?vue&type=template&id=e56ace00&scoped=true&\"\nimport script from \"./ImageModelUI.vue?vue&type=script&lang=ts&\"\nexport * from \"./ImageModelUI.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ImageModelUI.vue?vue&type=style&index=0&id=e56ace00&prod&lang=postcss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e56ace00\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DrawingModelUI.vue?vue&type=style&index=0&id=ee1ecc3a&prod&scoped=true&lang=postcss&\"","module.exports = __webpack_public_path__ + \"img/sad_baby.80e63152.jpg\";","import '@babel/polyfill';\nimport 'whatwg-fetch';\nimport 'vuetify/dist/vuetify.min.css';\n\nimport Vue from 'vue';\nimport Vuetify from 'vuetify';\n\nimport App from './App.vue';\nimport router from './router';\n\nVue.config.productionTip = false;\nVue.use(Vuetify, {theme: {primary: '#2a6a96', secondary: '#69707a', accent: '#f5d76e', error: '#d24d57'}});\n\nnew Vue({\n  router,\n  render: (h) => h(App),\n}).$mount('#app');\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"onnxruntime-common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"onnxruntime-common\")) : factory(root[\"ort\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__1670__) => {\nreturn ","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function r(){return F.buffer!=U&&K(F.buffer),j}function t(){return F.buffer!=U&&K(F.buffer),Y}function n(){return F.buffer!=U&&K(F.buffer),H}function a(){return F.buffer!=U&&K(F.buffer),z}function o(){return F.buffer!=U&&K(F.buffer),q}function u(){return F.buffer!=U&&K(F.buffer),N}function s(){return F.buffer!=U&&K(F.buffer),G}var f,c,l=void 0!==(e=e||{})?e:{};l.ready=new Promise((function(e,r){f=e,c=r}));var p,d,m,h,g,y,_=Object.assign({},l),v=[],w=\"./this.program\",b=(e,r)=>{throw r},T=\"object\"==typeof window,A=\"function\"==typeof importScripts,O=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,k=l.ENVIRONMENT_IS_PTHREAD||!1,S=\"\";function C(e){return l.locateFile?l.locateFile(e,S):S+e}if(O){let e;S=A?require(\"path\").dirname(S)+\"/\":__dirname+\"/\",y=()=>{g||(h=require(\"fs\"),g=require(\"path\"))},p=function(e,r){return y(),e=g.normalize(e),h.readFileSync(e,r?void 0:\"utf8\")},m=e=>{var r=p(e,!0);return r.buffer||(r=new Uint8Array(r)),r},d=(e,r,t)=>{y(),e=g.normalize(e),h.readFile(e,(function(e,n){e?t(e):r(n.buffer)}))},process.argv.length>1&&(w=process.argv[1].replace(/\\\\/g,\"/\")),v=process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof ye))throw e})),process.on(\"unhandledRejection\",(function(e){throw e})),b=(e,r)=>{if(ie())throw process.exitCode=e,r;var t;(t=r)instanceof ye||x(\"exiting due to exception: \"+t),process.exit(e)},l.inspect=function(){return\"[Emscripten Module object]\"};try{e=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(T||A)&&(A?S=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(S=document.currentScript.src),_scriptDir&&(S=_scriptDir),S=0!==S.indexOf(\"blob:\")?S.substr(0,S.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",O||(p=e=>{var r=new XMLHttpRequest;return r.open(\"GET\",e,!1),r.send(null),r.responseText},A&&(m=e=>{var r=new XMLHttpRequest;return r.open(\"GET\",e,!1),r.responseType=\"arraybuffer\",r.send(null),new Uint8Array(r.response)}),d=(e,r,t)=>{var n=new XMLHttpRequest;n.open(\"GET\",e,!0),n.responseType=\"arraybuffer\",n.onload=()=>{200==n.status||0==n.status&&n.response?r(n.response):t()},n.onerror=t,n.send(null)}));O&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var M=console.log.bind(console),W=console.warn.bind(console);O&&(y(),M=e=>h.writeSync(1,e+\"\\n\"),W=e=>h.writeSync(2,e+\"\\n\"));var E,P=l.print||M,x=l.printErr||W;Object.assign(l,_),_=null,l.arguments&&(v=l.arguments),l.thisProgram&&(w=l.thisProgram),l.quit&&(b=l.quit),Atomics.load,Atomics.store,Atomics.compareExchange,l.wasmBinary&&(E=l.wasmBinary);var F,R,D=l.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&pe(\"no native wasm support detected\");var I,U,j,Y,H,z,q,N,B,G,V=!1,L=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function X(e,r,t){for(var n=(r>>>=0)+t,a=r;e[a]&&!(a>=n);)++a;if(a-r>16&&e.buffer&&L)return L.decode(e.buffer instanceof SharedArrayBuffer?e.slice(r,a):e.subarray(r,a));for(var o=\"\";r<a;){var i=e[r++];if(128&i){var u=63&e[r++];if(192!=(224&i)){var s=63&e[r++];if((i=224==(240&i)?(15&i)<<12|u<<6|s:(7&i)<<18|u<<12|s<<6|63&e[r++])<65536)o+=String.fromCharCode(i);else{var f=i-65536;o+=String.fromCharCode(55296|f>>10,56320|1023&f)}}else o+=String.fromCharCode((31&i)<<6|u)}else o+=String.fromCharCode(i)}return o}function Q(e,r){return(e>>>=0)?X(t(),e,r):\"\"}function $(e,r,t,n){if(!(n>0))return 0;for(var a=t>>>=0,o=t+n-1,i=0;i<e.length;++i){var u=e.charCodeAt(i);if(u>=55296&&u<=57343&&(u=65536+((1023&u)<<10)|1023&e.charCodeAt(++i)),u<=127){if(t>=o)break;r[t++>>>0]=u}else if(u<=2047){if(t+1>=o)break;r[t++>>>0]=192|u>>6,r[t++>>>0]=128|63&u}else if(u<=65535){if(t+2>=o)break;r[t++>>>0]=224|u>>12,r[t++>>>0]=128|u>>6&63,r[t++>>>0]=128|63&u}else{if(t+3>=o)break;r[t++>>>0]=240|u>>18,r[t++>>>0]=128|u>>12&63,r[t++>>>0]=128|u>>6&63,r[t++>>>0]=128|63&u}}return r[t>>>0]=0,t-a}function J(e,r,n){return $(e,t(),r,n)}function Z(e){for(var r=0,t=0;t<e.length;++t){var n=e.charCodeAt(t);n<=127?r++:n<=2047?r+=2:n>=55296&&n<=57343?(r+=4,++t):r+=3}return r}function K(e){U=e,l.HEAP8=j=new Int8Array(e),l.HEAP16=H=new Int16Array(e),l.HEAP32=q=new Int32Array(e),l.HEAPU8=Y=new Uint8Array(e),l.HEAPU16=z=new Uint16Array(e),l.HEAPU32=N=new Uint32Array(e),l.HEAPF32=B=new Float32Array(e),l.HEAPF64=G=new Float64Array(e)}k&&(U=l.buffer);var ee,re=l.INITIAL_MEMORY||16777216;if(k)F=l.wasmMemory,U=l.buffer;else if(l.wasmMemory)F=l.wasmMemory;else if(!((F=new WebAssembly.Memory({initial:re/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),O&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");F&&(U=F.buffer),re=U.byteLength,K(U);var te=[],ne=[],ae=[],oe=[];function ie(){return D||!1}function ue(){k||Oe(ne)}var se,fe=0,ce=null,le=null;function pe(e){k?postMessage({cmd:\"onAbort\",arg:e}):l.onAbort&&l.onAbort(e),x(e=\"Aborted(\"+e+\")\"),V=!0,I=1,e+=\". Build with -sASSERTIONS for more info.\";var r=new WebAssembly.RuntimeError(e);throw c(r),r}function de(e){return e.startsWith(\"data:application/octet-stream;base64,\")}function me(e){return e.startsWith(\"file://\")}function he(e){try{if(e==se&&E)return new Uint8Array(E);if(m)return m(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){pe(e)}}de(se=\"ort-wasm-threaded.wasm\")||(se=C(se));var ge={};function ye(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function _e(e){var r=Ae.pthreads[e];r||pe(undefined),Ae.returnWorkerToPool(r)}function ve(e){var r=Ae.getNewWorker();if(!r)return 6;Ae.runningWorkers.push(r),Ae.pthreads[e.pthread_ptr]=r,r.pthread_ptr=e.pthread_ptr;var t={cmd:\"run\",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return r.runPthread=()=>{t.time=performance.now(),r.postMessage(t,e.transferList)},r.loaded&&(r.runPthread(),delete r.runPthread),0}var we={varargs:void 0,get:function(){return we.varargs+=4,o()[we.varargs-4>>>2]},getStr:function(e){return Q(e)}};function be(e){if(k)return Fr(1,1,e);I=e,ie()||(Ae.terminateAllThreads(),l.onExit&&l.onExit(e),V=!0),b(e,new ye(e))}var Te=function(e,r){if(I=e,!r&&k)throw Se(e),\"unwind\";ie()||k||(at(),Oe(ae),tt(0),Nr[1].length&&Br(1,10),Nr[2].length&&Br(2,10),Ae.terminateAllThreads()),be(e)},Ae={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){k?Ae.initWorker():Ae.initMainThread()},initMainThread:function(){},initWorker:function(){D=!1},setExitStatus:function(e){I=e},terminateAllThreads:function(){for(var e of Object.values(Ae.pthreads))Ae.returnWorkerToPool(e);for(var e of Ae.unusedWorkers)e.terminate();Ae.unusedWorkers=[]},returnWorkerToPool:function(e){var r=e.pthread_ptr;delete Ae.pthreads[r],Ae.unusedWorkers.push(e),Ae.runningWorkers.splice(Ae.runningWorkers.indexOf(e),1),e.pthread_ptr=0,st(r)},receiveObjectTransfer:function(e){},threadInitTLS:function(){Ae.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(e,r){e.onmessage=t=>{var n,a=t.data,o=a.cmd;if(e.pthread_ptr&&(Ae.currentProxiedOperationCallerThread=e.pthread_ptr),a.targetThread&&a.targetThread!=Kr()){var i=Ae.pthreads[a.targetThread];return i?i.postMessage(a,a.transferList):x('Internal error! Worker sent a message \"'+o+'\" to target pthread '+a.targetThread+\", but that thread no longer exists!\"),void(Ae.currentProxiedOperationCallerThread=void 0)}\"processProxyingQueue\"===o?_r(a.queue):\"spawnThread\"===o?ve(a):\"cleanupThread\"===o?_e(a.thread):\"killThread\"===o?function(e){var r=Ae.pthreads[e];delete Ae.pthreads[e],r.terminate(),st(e),Ae.runningWorkers.splice(Ae.runningWorkers.indexOf(r),1),r.pthread_ptr=0}(a.thread):\"cancelThread\"===o?(n=a.thread,Ae.pthreads[n].postMessage({cmd:\"cancel\"})):\"loaded\"===o?(e.loaded=!0,r&&r(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):\"print\"===o?P(\"Thread \"+a.threadId+\": \"+a.text):\"printErr\"===o?x(\"Thread \"+a.threadId+\": \"+a.text):\"alert\"===o?alert(\"Thread \"+a.threadId+\": \"+a.text):\"setimmediate\"===a.target?e.postMessage(a):\"onAbort\"===o?l.onAbort&&l.onAbort(a.arg):o&&x(\"worker sent an unknown command \"+o),Ae.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw x(\"worker sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message),e},O&&(e.on(\"message\",(function(r){e.onmessage({data:r})})),e.on(\"error\",(function(r){e.onerror(r)})),e.on(\"detachedExit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:l.mainScriptUrlOrBlob||_scriptDir,wasmMemory:F,wasmModule:R})},allocateUnusedWorker:function(){var e=C(\"ort-wasm-threaded.worker.js\");Ae.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ae.unusedWorkers.length&&(Ae.allocateUnusedWorker(),Ae.loadWasmModuleToWorker(Ae.unusedWorkers[0])),Ae.unusedWorkers.pop()}};function Oe(e){for(;e.length>0;)e.shift()(l)}function ke(e){var r=lt(),t=e();return pt(r),t}function Se(e){if(k)return Fr(2,0,e);try{Te(e)}catch(e){!function(e){if(e instanceof ye||\"unwind\"==e)return I;b(1,e)}(e)}}l.PThread=Ae,l.establishStackSpace=function(){var e=Kr(),r=o()[e+44>>>2],t=o()[e+48>>>2];ct(r,r-t),pt(r)};var Ce=[];function Me(e){this.excPtr=e,this.ptr=e-24,this.set_type=function(e){u()[this.ptr+4>>>2]=e},this.get_type=function(){return u()[this.ptr+4>>>2]},this.set_destructor=function(e){u()[this.ptr+8>>>2]=e},this.get_destructor=function(){return u()[this.ptr+8>>>2]},this.set_refcount=function(e){o()[this.ptr>>>2]=e},this.set_caught=function(e){e=e?1:0,r()[this.ptr+12>>>0]=e},this.get_caught=function(){return 0!=r()[this.ptr+12>>>0]},this.set_rethrown=function(e){e=e?1:0,r()[this.ptr+13>>>0]=e},this.get_rethrown=function(){return 0!=r()[this.ptr+13>>>0]},this.init=function(e,r){this.set_adjusted_ptr(0),this.set_type(e),this.set_destructor(r),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){Atomics.add(o(),this.ptr+0>>2,1)},this.release_ref=function(){return 1===Atomics.sub(o(),this.ptr+0>>2,1)},this.set_adjusted_ptr=function(e){u()[this.ptr+16>>>2]=e},this.get_adjusted_ptr=function(){return u()[this.ptr+16>>>2]},this.get_exception_ptr=function(){if(mt(this.get_type()))return u()[this.excPtr>>>2];var e=this.get_adjusted_ptr();return 0!==e?e:this.excPtr}}function We(e,r,t,n){return k?Fr(3,1,e,r,t,n):Ee(e,r,t,n)}function Ee(e,r,t,n){if(\"undefined\"==typeof SharedArrayBuffer)return x(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var a=[];if(k&&0===a.length)return We(e,r,t,n);var o={startRoutine:t,pthread_ptr:e,arg:n,transferList:a};return k?(o.cmd=\"spawnThread\",postMessage(o,a),0):ve(o)}function Pe(e,r,t){return k?Fr(4,1,e,r,t):(we.varargs=t,0)}function xe(e,r){if(k)return Fr(5,1,e,r)}function Fe(e,r){if(k)return Fr(6,1,e,r)}function Re(e,r,t){if(k)return Fr(7,1,e,r,t)}function De(e,r,t){return k?Fr(8,1,e,r,t):(we.varargs=t,0)}function Ie(e,r){if(k)return Fr(9,1,e,r)}function Ue(e,r,t){if(k)return Fr(10,1,e,r,t)}function je(e,r,t,n){if(k)return Fr(11,1,e,r,t,n)}function Ye(e,r,t,n){if(k)return Fr(12,1,e,r,t,n);we.varargs=n}function He(e,r,t,n){if(k)return Fr(13,1,e,r,t,n)}function ze(e){if(k)return Fr(14,1,e)}function qe(e,r){if(k)return Fr(15,1,e,r)}function Ne(e,r,t){if(k)return Fr(16,1,e,r,t)}l.invokeEntryPoint=function(e,r){var t,n,a=((n=Ce[t=e])||(t>=Ce.length&&(Ce.length=t+1),Ce[t]=n=ee.get(t)),n)(r);ie()?Ae.setExitStatus(a):ft(a)};var Be=\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\";function Ge(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+e)}}var Ve=void 0;function Le(e){for(var r=\"\",n=e;t()[n>>>0];)r+=Ve[t()[n++>>>0]];return r}var Xe={},Qe={},$e={};function Je(e){if(void 0===e)return\"_unknown\";var r=(e=e.replace(/[^a-zA-Z0-9_]/g,\"$\")).charCodeAt(0);return r>=48&&r<=57?\"_\"+e:e}function Ze(e,r){return e=Je(e),new Function(\"body\",\"return function \"+e+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(r)}function Ke(e,r){var t=Ze(r,(function(e){this.name=r,this.message=e;var t=new Error(e).stack;void 0!==t&&(this.stack=this.toString()+\"\\n\"+t.replace(/^Error(:[^\\n]*)?\\n/,\"\"))}));return t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message},t}var er=void 0;function rr(e){throw new er(e)}function tr(e,r,t={}){if(!(\"argPackAdvance\"in r))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var n=r.name;if(e||rr('type \"'+n+'\" must have a positive integer typeid pointer'),Qe.hasOwnProperty(e)){if(t.ignoreDuplicateRegistrations)return;rr(\"Cannot register type '\"+n+\"' twice\")}if(Qe[e]=r,delete $e[e],Xe.hasOwnProperty(e)){var a=Xe[e];delete Xe[e],a.forEach((e=>e()))}}var nr=[],ar=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function or(e){e>4&&0==--ar[e].refcount&&(ar[e]=void 0,nr.push(e))}var ir=e=>(e||rr(\"Cannot use deleted val. handle = \"+e),ar[e].value),ur=e=>{switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var r=nr.length?nr.pop():ar.length;return ar[r]={refcount:1,value:e},r}};function sr(e){return this.fromWireType(o()[e>>>2])}function fr(e,r){switch(r){case 2:return function(e){return this.fromWireType((F.buffer!=U&&K(F.buffer),B)[e>>>2])};case 3:return function(e){return this.fromWireType(s()[e>>>3])};default:throw new TypeError(\"Unknown float type: \"+e)}}function cr(e,i,s){switch(i){case 0:return s?function(e){return r()[e>>>0]}:function(e){return t()[e>>>0]};case 1:return s?function(e){return n()[e>>>1]}:function(e){return a()[e>>>1]};case 2:return s?function(e){return o()[e>>>2]}:function(e){return u()[e>>>2]};default:throw new TypeError(\"Unknown integer type: \"+e)}}var lr=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function pr(e,r){for(var o=e,i=o>>1,u=i+r/2;!(i>=u)&&a()[i>>>0];)++i;if((o=i<<1)-e>32&&lr)return lr.decode(t().slice(e,o));for(var s=\"\",f=0;!(f>=r/2);++f){var c=n()[e+2*f>>>1];if(0==c)break;s+=String.fromCharCode(c)}return s}function dr(e,r,t){if(void 0===t&&(t=2147483647),t<2)return 0;for(var a=r,o=(t-=2)<2*e.length?t/2:e.length,i=0;i<o;++i){var u=e.charCodeAt(i);n()[r>>>1]=u,r+=2}return n()[r>>>1]=0,r-a}function mr(e){return 2*e.length}function hr(e,r){for(var t=0,n=\"\";!(t>=r/4);){var a=o()[e+4*t>>>2];if(0==a)break;if(++t,a>=65536){var i=a-65536;n+=String.fromCharCode(55296|i>>10,56320|1023&i)}else n+=String.fromCharCode(a)}return n}function gr(e,r,t){if(void 0===t&&(t=2147483647),t<4)return 0;for(var n=r>>>=0,a=n+t-4,i=0;i<e.length;++i){var u=e.charCodeAt(i);if(u>=55296&&u<=57343&&(u=65536+((1023&u)<<10)|1023&e.charCodeAt(++i)),o()[r>>>2]=u,(r+=4)+4>a)break}return o()[r>>>2]=0,r-n}function yr(e){for(var r=0,t=0;t<e.length;++t){var n=e.charCodeAt(t);n>=55296&&n<=57343&&++t,r+=4}return r}function _r(e){Atomics.store(o(),e>>2,1),Kr()&&ut(e),Atomics.compareExchange(o(),e>>2,1,0)}function vr(e,r){var t,n,a=Qe[e];return void 0===a&&rr(r+\" has unknown type \"+(n=Le(t=nt(e)),rt(t),n)),a}l.executeNotifiedProxyingQueue=_r;var wr={};function br(e){var r=wr[e];return void 0===r?Le(e):r}var Tr=[];function Ar(){return\"object\"==typeof globalThis?globalThis:Function(\"return this\")()}var Or,kr=[],Sr={};function Cr(e){return u()[e>>>2]+4294967296*o()[e+4>>>2]}function Mr(e,r,t,n,a,o){return k?Fr(17,1,e,r,t,n,a,o):-52}function Wr(e,r,t,n,a,o){if(k)return Fr(18,1,e,r,t,n,a,o);e>>>=0}function Er(e){var t=Z(e)+1,n=et(t);return n&&$(e,r(),n,t),n}function Pr(e,r,t){if(k)return Fr(19,1,e,r,t);var n=(new Date).getFullYear(),a=new Date(n,0,1),i=new Date(n,6,1),s=a.getTimezoneOffset(),f=i.getTimezoneOffset(),c=Math.max(s,f);function l(e){var r=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return r?r[1]:\"GMT\"}o()[e>>>2]=60*c,o()[r>>>2]=Number(s!=f);var p=l(a),d=l(i),m=Er(p),h=Er(d);f<s?(u()[t>>>2]=m,u()[t+4>>>2]=h):(u()[t>>>2]=h,u()[t+4>>>2]=m)}function xr(e){xr.shown||(xr.shown={}),xr.shown[e]||(xr.shown[e]=1,O&&(e=\"warning: \"+e),x(e))}function Fr(e,r){var t=arguments.length-2,n=arguments;return ke((()=>{for(var a=t,o=dt(8*a),i=o>>3,u=0;u<t;u++){var f=n[2+u];s()[i+u>>>0]=f}return it(e,a,o,r)}))}Or=O?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:k?()=>performance.now()-l.__performance_now_clock_drift:()=>performance.now();var Rr=[];function Dr(e){try{return F.grow(e-U.byteLength+65535>>>16),K(F.buffer),1}catch(e){}}var Ir={};function Ur(){if(!Ur.strings){var e={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:w||\"./this.program\"};for(var r in Ir)void 0===Ir[r]?delete e[r]:e[r]=Ir[r];var t=[];for(var r in e)t.push(r+\"=\"+e[r]);Ur.strings=t}return Ur.strings}function jr(e,t){if(k)return Fr(20,1,e,t);var n=0;return Ur().forEach((function(a,o){var i=t+n;u()[e+4*o>>>2]=i,function(e,t,n){for(var a=0;a<e.length;++a)r()[t++>>>0]=e.charCodeAt(a);r()[t>>>0]=0}(a,i),n+=a.length+1})),0}function Yr(e,r){if(k)return Fr(21,1,e,r);var t=Ur();u()[e>>>2]=t.length;var n=0;return t.forEach((function(e){n+=e.length+1})),u()[r>>>2]=n,0}function Hr(e){return k?Fr(22,1,e):52}function zr(e,r,t,n){return k?Fr(23,1,e,r,t,n):52}function qr(e,r,t,n,a){return k?Fr(24,1,e,r,t,n,a):70}var Nr=[null,[],[]];function Br(e,r){var t=Nr[e];0===r||10===r?((1===e?P:x)(X(t,0)),t.length=0):t.push(r)}function Gr(e,r,n,a){if(k)return Fr(25,1,e,r,n,a);for(var o=0,i=0;i<n;i++){var s=u()[r>>>2],f=u()[r+4>>>2];r+=8;for(var c=0;c<f;c++)Br(e,t()[s+c>>>0]);o+=f}return u()[a>>>2]=o,0}function Vr(e){return e%4==0&&(e%100!=0||e%400==0)}var Lr=[31,29,31,30,31,30,31,31,30,31,30,31],Xr=[31,28,31,30,31,30,31,31,30,31,30,31];function Qr(e,t,n,a){var i=o()[a+40>>>2],u={tm_sec:o()[a>>>2],tm_min:o()[a+4>>>2],tm_hour:o()[a+8>>>2],tm_mday:o()[a+12>>>2],tm_mon:o()[a+16>>>2],tm_year:o()[a+20>>>2],tm_wday:o()[a+24>>>2],tm_yday:o()[a+28>>>2],tm_isdst:o()[a+32>>>2],tm_gmtoff:o()[a+36>>>2],tm_zone:i?Q(i):\"\"},s=Q(n),f={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var c in f)s=s.replace(new RegExp(c,\"g\"),f[c]);var l=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],p=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function d(e,r,t){for(var n=\"number\"==typeof e?e.toString():e||\"\";n.length<r;)n=t[0]+n;return n}function m(e,r){return d(e,r,\"0\")}function h(e,r){function t(e){return e<0?-1:e>0?1:0}var n;return 0===(n=t(e.getFullYear()-r.getFullYear()))&&0===(n=t(e.getMonth()-r.getMonth()))&&(n=t(e.getDate()-r.getDate())),n}function g(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function y(e){var r=function(e,r){for(var t=new Date(e.getTime());r>0;){var n=Vr(t.getFullYear()),a=t.getMonth(),o=(n?Lr:Xr)[a];if(!(r>o-t.getDate()))return t.setDate(t.getDate()+r),t;r-=o-t.getDate()+1,t.setDate(1),a<11?t.setMonth(a+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return t}(new Date(e.tm_year+1900,0,1),e.tm_yday),t=new Date(r.getFullYear(),0,4),n=new Date(r.getFullYear()+1,0,4),a=g(t),o=g(n);return h(a,r)<=0?h(o,r)<=0?r.getFullYear()+1:r.getFullYear():r.getFullYear()-1}var _={\"%a\":function(e){return l[e.tm_wday].substring(0,3)},\"%A\":function(e){return l[e.tm_wday]},\"%b\":function(e){return p[e.tm_mon].substring(0,3)},\"%B\":function(e){return p[e.tm_mon]},\"%C\":function(e){return m((e.tm_year+1900)/100|0,2)},\"%d\":function(e){return m(e.tm_mday,2)},\"%e\":function(e){return d(e.tm_mday,2,\" \")},\"%g\":function(e){return y(e).toString().substring(2)},\"%G\":function(e){return y(e)},\"%H\":function(e){return m(e.tm_hour,2)},\"%I\":function(e){var r=e.tm_hour;return 0==r?r=12:r>12&&(r-=12),m(r,2)},\"%j\":function(e){return m(e.tm_mday+function(e,r){for(var t=0,n=0;n<=r;t+=e[n++]);return t}(Vr(e.tm_year+1900)?Lr:Xr,e.tm_mon-1),3)},\"%m\":function(e){return m(e.tm_mon+1,2)},\"%M\":function(e){return m(e.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return e.tm_hour>=0&&e.tm_hour<12?\"AM\":\"PM\"},\"%S\":function(e){return m(e.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.tm_wday||7},\"%U\":function(e){var r=e.tm_yday+7-e.tm_wday;return m(Math.floor(r/7),2)},\"%V\":function(e){var r=Math.floor((e.tm_yday+7-(e.tm_wday+6)%7)/7);if((e.tm_wday+371-e.tm_yday-2)%7<=2&&r++,r){if(53==r){var t=(e.tm_wday+371-e.tm_yday)%7;4==t||3==t&&Vr(e.tm_year)||(r=1)}}else{r=52;var n=(e.tm_wday+7-e.tm_yday-1)%7;(4==n||5==n&&Vr(e.tm_year%400-1))&&r++}return m(r,2)},\"%w\":function(e){return e.tm_wday},\"%W\":function(e){var r=e.tm_yday+7-(e.tm_wday+6)%7;return m(Math.floor(r/7),2)},\"%y\":function(e){return(e.tm_year+1900).toString().substring(2)},\"%Y\":function(e){return e.tm_year+1900},\"%z\":function(e){var r=e.tm_gmtoff,t=r>=0;return r=(r=Math.abs(r)/60)/60*100+r%60,(t?\"+\":\"-\")+String(\"0000\"+r).slice(-4)},\"%Z\":function(e){return e.tm_zone},\"%%\":function(){return\"%\"}};for(var c in s=s.replace(/%%/g,\"\\0\\0\"),_)s.includes(c)&&(s=s.replace(new RegExp(c,\"g\"),_[c](u)));var v,w,b,T=(!1,w=Z(v=s=s.replace(/\\0\\0/g,\"%\"))+1,$(v,b=new Array(w),0,b.length),b);return T.length>t?0:(function(e,t){r().set(e,t>>>0)}(T,e),T.length-1)}Ae.init(),function(){for(var e=new Array(256),r=0;r<256;++r)e[r]=String.fromCharCode(r);Ve=e}(),er=l.BindingError=Ke(Error,\"BindingError\"),l.InternalError=Ke(Error,\"InternalError\"),l.count_emval_handles=function(){for(var e=0,r=5;r<ar.length;++r)void 0!==ar[r]&&++e;return e},l.get_first_emval=function(){for(var e=5;e<ar.length;++e)if(void 0!==ar[e])return ar[e];return null};var $r,Jr=[null,be,Se,We,Pe,xe,Fe,Re,De,Ie,Ue,je,Ye,He,ze,qe,Ne,Mr,Wr,Pr,jr,Yr,Hr,zr,qr,Gr],Zr={b:function(e){return et(e+24)+24},c:function(e,r,t){throw new Me(e).init(r,t),e},ba:function(e){ot(e,!A,1,!T),Ae.threadInitTLS()},A:function(e){k?postMessage({cmd:\"cleanupThread\",thread:e}):_e(e)},V:Ee,v:Pe,ia:xe,R:Fe,T:Re,M:De,ga:Ie,_:Ue,fa:je,C:Ye,S:He,P:ze,ha:qe,Q:Ne,qa:function(e){},E:function(e,r){pe(Be)},ra:function(e,r){pe(Be)},L:function(e,r,t,n,a){},ta:function(e,t,a,i,u){var s=Ge(a);tr(e,{name:t=Le(t),fromWireType:function(e){return!!e},toWireType:function(e,r){return r?i:u},argPackAdvance:8,readValueFromPointer:function(e){var i;if(1===a)i=r();else if(2===a)i=n();else{if(4!==a)throw new TypeError(\"Unknown boolean type size: \"+t);i=o()}return this.fromWireType(i[e>>>s])},destructorFunction:null})},sa:function(e,r){tr(e,{name:r=Le(r),fromWireType:function(e){var r=ir(e);return or(e),r},toWireType:function(e,r){return ur(r)},argPackAdvance:8,readValueFromPointer:sr,destructorFunction:null})},F:function(e,r,t){var n=Ge(t);tr(e,{name:r=Le(r),fromWireType:function(e){return e},toWireType:function(e,r){return r},argPackAdvance:8,readValueFromPointer:fr(r,n),destructorFunction:null})},r:function(e,r,t,n,a){r=Le(r),-1===a&&(a=4294967295);var o=Ge(t),i=e=>e;if(0===n){var u=32-8*t;i=e=>e<<u>>>u}var s=r.includes(\"unsigned\");tr(e,{name:r,fromWireType:i,toWireType:s?function(e,r){return this.name,r>>>0}:function(e,r){return this.name,r},argPackAdvance:8,readValueFromPointer:cr(r,o,0!==n),destructorFunction:null})},n:function(e,r,t){var n=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][r];function a(e){e>>=2;var r=u(),t=r[e>>>0],a=r[e+1>>>0];return new n(U,a,t)}tr(e,{name:t=Le(t),fromWireType:a,argPackAdvance:8,readValueFromPointer:a},{ignoreDuplicateRegistrations:!0})},G:function(e,r){var n=\"std::string\"===(r=Le(r));tr(e,{name:r,fromWireType:function(e){var r,a=u()[e>>>2],o=e+4;if(n)for(var i=o,s=0;s<=a;++s){var f=o+s;if(s==a||0==t()[f>>>0]){var c=Q(i,f-i);void 0===r?r=c:(r+=String.fromCharCode(0),r+=c),i=f+1}}else{var l=new Array(a);for(s=0;s<a;++s)l[s]=String.fromCharCode(t()[o+s>>>0]);r=l.join(\"\")}return rt(e),r},toWireType:function(e,r){var a;r instanceof ArrayBuffer&&(r=new Uint8Array(r));var o=\"string\"==typeof r;o||r instanceof Uint8Array||r instanceof Uint8ClampedArray||r instanceof Int8Array||rr(\"Cannot pass non-string to std::string\"),a=n&&o?Z(r):r.length;var i=et(4+a+1),s=i+4;if(s>>>=0,u()[i>>>2]=a,n&&o)J(r,s,a+1);else if(o)for(var f=0;f<a;++f){var c=r.charCodeAt(f);c>255&&(rt(s),rr(\"String has UTF-16 code units that do not fit in 8 bits\")),t()[s+f>>>0]=c}else for(f=0;f<a;++f)t()[s+f>>>0]=r[f];return null!==e&&e.push(rt,i),i},argPackAdvance:8,readValueFromPointer:sr,destructorFunction:function(e){rt(e)}})},x:function(e,r,t){var n,o,i,s,f;t=Le(t),2===r?(n=pr,o=dr,s=mr,i=()=>a(),f=1):4===r&&(n=hr,o=gr,s=yr,i=()=>u(),f=2),tr(e,{name:t,fromWireType:function(e){for(var t,a=u()[e>>>2],o=i(),s=e+4,c=0;c<=a;++c){var l=e+4+c*r;if(c==a||0==o[l>>>f]){var p=n(s,l-s);void 0===t?t=p:(t+=String.fromCharCode(0),t+=p),s=l+r}}return rt(e),t},toWireType:function(e,n){\"string\"!=typeof n&&rr(\"Cannot pass non-string to C++ string type \"+t);var a=s(n),i=et(4+a+r);return i>>>=0,u()[i>>>2]=a>>f,o(n,i+4,a+r),null!==e&&e.push(rt,i),i},argPackAdvance:8,readValueFromPointer:sr,destructorFunction:function(e){rt(e)}})},ua:function(e,r){tr(e,{isVoid:!0,name:r=Le(r),argPackAdvance:0,fromWireType:function(){},toWireType:function(e,r){}})},D:function(){return Date.now()},W:function(){return 2097152},ka:function(){return!0},X:function(e,r,t,n){if(e==r)setTimeout((()=>_r(n)));else if(k)postMessage({targetThread:e,cmd:\"processProxyingQueue\",queue:n});else{var a=Ae.pthreads[e];if(!a)return;a.postMessage({cmd:\"processProxyingQueue\",queue:n})}return 1},aa:function(e,r,t){return-1},t:function(e,r,t){e=ir(e),r=vr(r,\"emval::as\");var n=[],a=ur(n);return u()[t>>>2]=a,r.toWireType(n,e)},k:function(e,r,t,n,a){return(e=Tr[e])(r=ir(r),t=br(t),function(e){var r=[];return u()[e>>>2]=ur(r),r}(n),a)},wa:function(e,r,t,n){(e=Tr[e])(r=ir(r),t=br(t),null,n)},d:or,J:function(e,r){return(e=ir(e))==ir(r)},H:function(e){return 0===e?ur(Ar()):(e=br(e),ur(Ar()[e]))},j:function(e,r){var t=function(e,r){for(var t=new Array(e),n=0;n<e;++n)t[n]=vr(u()[r+4*n>>>2],\"parameter \"+n);return t}(e,r),n=t[0],a=n.name+\"_$\"+t.slice(1).map((function(e){return e.name})).join(\"_\")+\"$\",o=kr[a];if(void 0!==o)return o;for(var i=[\"retType\"],s=[n],f=\"\",c=0;c<e-1;++c)f+=(0!==c?\", \":\"\")+\"arg\"+c,i.push(\"argType\"+c),s.push(t[1+c]);var l,p,d=\"return function \"+Je(\"methodCaller_\"+a)+\"(handle, name, destructors, args) {\\n\",m=0;for(c=0;c<e-1;++c)d+=\"    var arg\"+c+\" = argType\"+c+\".readValueFromPointer(args\"+(m?\"+\"+m:\"\")+\");\\n\",m+=t[c+1].argPackAdvance;for(d+=\"    var rv = handle[name](\"+f+\");\\n\",c=0;c<e-1;++c)t[c+1].deleteObject&&(d+=\"    argType\"+c+\".deleteObject(arg\"+c+\");\\n\");return n.isVoid||(d+=\"    return retType.toWireType(destructors, rv);\\n\"),d+=\"};\\n\",i.push(d),l=function(e,r){if(!(e instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof e+\" which is not a function\");var t=Ze(e.name||\"unknownFunctionName\",(function(){}));t.prototype=e.prototype;var n=new t,a=e.apply(n,r);return a instanceof Object?a:n}(Function,i).apply(null,s),p=Tr.length,Tr.push(l),o=p,kr[a]=o,o},s:function(e,r){return e=ir(e),r=ir(r),ur(e[r])},e:function(e){e>4&&(ar[e].refcount+=1)},va:function(e,r,t,n){e=ir(e);var a=Sr[r];return a||(a=function(e){for(var r=\"\",t=0;t<e;++t)r+=(0!==t?\", \":\"\")+\"arg\"+t;var n=\"return function emval_allocator_\"+e+\"(constructor, argTypes, args) {\\n  var HEAPU32 = getMemory();\\n\";for(t=0;t<e;++t)n+=\"var argType\"+t+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+t+\"');\\nvar arg\"+t+\" = argType\"+t+\".readValueFromPointer(args);\\nargs += argType\"+t+\"['argPackAdvance'];\\nargTypes += 4;\\n\";return n+=\"var obj = new constructor(\"+r+\");\\nreturn valueToHandle(obj);\\n}\\n\",new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",n)(vr,l,ur,(()=>u()))}(r),Sr[r]=a),a(e,t,n)},I:function(){return ur([])},o:function(e){e=ir(e);var r=new Array(e.length);for(i=0;i<e.length;i++)r[i]=e[i];return ur(r)},f:function(e){return ur(br(e))},l:function(){return ur({})},i:function(e){!function(e){for(;e.length;){var r=e.pop();e.pop()(r)}}(ir(e)),or(e)},g:function(e,r,t){e=ir(e),r=ir(r),t=ir(t),e[r]=t},h:function(e,r){var t=(e=vr(e,\"_emval_take_value\")).readValueFromPointer(r);return ur(t)},ma:function(e,r){var t=new Date(1e3*Cr(e));o()[r>>>2]=t.getUTCSeconds(),o()[r+4>>>2]=t.getUTCMinutes(),o()[r+8>>>2]=t.getUTCHours(),o()[r+12>>>2]=t.getUTCDate(),o()[r+16>>>2]=t.getUTCMonth(),o()[r+20>>>2]=t.getUTCFullYear()-1900,o()[r+24>>>2]=t.getUTCDay();var n=Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0),a=(t.getTime()-n)/864e5|0;o()[r+28>>>2]=a},na:function(e,r){var t=new Date(1e3*Cr(e));o()[r>>>2]=t.getSeconds(),o()[r+4>>>2]=t.getMinutes(),o()[r+8>>>2]=t.getHours(),o()[r+12>>>2]=t.getDate(),o()[r+16>>>2]=t.getMonth(),o()[r+20>>>2]=t.getFullYear()-1900,o()[r+24>>>2]=t.getDay();var n=new Date(t.getFullYear(),0,1),a=(t.getTime()-n.getTime())/864e5|0;o()[r+28>>>2]=a,o()[r+36>>>2]=-60*t.getTimezoneOffset();var i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=n.getTimezoneOffset(),s=0|(i!=u&&t.getTimezoneOffset()==Math.min(u,i));o()[r+32>>>2]=s},oa:function(e){var r=new Date(o()[e+20>>>2]+1900,o()[e+16>>>2],o()[e+12>>>2],o()[e+8>>>2],o()[e+4>>>2],o()[e>>>2],0),t=o()[e+32>>>2],n=r.getTimezoneOffset(),a=new Date(r.getFullYear(),0,1),i=new Date(r.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),s=Math.min(u,i);if(t<0)o()[e+32>>>2]=Number(i!=u&&s==n);else if(t>0!=(s==n)){var f=Math.max(u,i),c=t>0?s:f;r.setTime(r.getTime()+6e4*(c-n))}o()[e+24>>>2]=r.getDay();var l=(r.getTime()-a.getTime())/864e5|0;return o()[e+28>>>2]=l,o()[e>>>2]=r.getSeconds(),o()[e+4>>>2]=r.getMinutes(),o()[e+8>>>2]=r.getHours(),o()[e+12>>>2]=r.getDate(),o()[e+16>>>2]=r.getMonth(),r.getTime()/1e3|0},Y:Mr,Z:Wr,pa:function e(r,t,n){e.called||(e.called=!0,Pr(r,t,n))},m:function(){pe(\"\")},B:function(){O||A||xr(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")},O:function(){return 4294901760},q:Or,ea:function(e,r,n){t().copyWithin(e>>>0,r>>>0,r+n>>>0)},u:function(){return O?require(\"os\").cpus().length:navigator.hardwareConcurrency},$:function(e,r,t){Rr.length=r;for(var n=t>>3,a=0;a<r;a++)Rr[a]=s()[n+a>>>0];return(e<0?ge[-e-1]:Jr[e]).apply(null,Rr)},N:function(e){var r=t().length;if((e>>>=0)<=r)return!1;var n,a=4294901760;if(e>a)return!1;for(var o=1;o<=4;o*=2){var i=r*(1+.2/o);if(i=Math.min(i,e+100663296),Dr(Math.min(a,(n=Math.max(e,i))+(65536-n%65536)%65536)))return!0}return!1},ja:function(){throw\"unwind\"},ca:jr,da:Yr,U:Te,w:Hr,z:zr,K:qr,y:Gr,a:F||l.wasmMemory,la:Qr,p:function(e,r,t,n){return Qr(e,r,t,n)}},Kr=(function(){var e={a:Zr};function r(e,r){var t,n,a=e.exports;l.asm=a,t=l.asm.Wa,Ae.tlsInitFunctions.push(t),ee=l.asm._a,n=l.asm.xa,ne.unshift(n),R=r,k||function(e){if(fe--,l.monitorRunDependencies&&l.monitorRunDependencies(fe),0==fe&&(null!==ce&&(clearInterval(ce),ce=null),le)){var r=le;le=null,r()}}()}function t(e){r(e.instance,e.module)}function n(r){return function(){if(!E&&(T||A)){if(\"function\"==typeof fetch&&!me(se))return fetch(se,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+se+\"'\";return e.arrayBuffer()})).catch((function(){return he(se)}));if(d)return new Promise((function(e,r){d(se,(function(r){e(new Uint8Array(r))}),r)}))}return Promise.resolve().then((function(){return he(se)}))}().then((function(r){return WebAssembly.instantiate(r,e)})).then((function(e){return e})).then(r,(function(e){x(\"failed to asynchronously prepare wasm: \"+e),pe(e)}))}if(k||(fe++,l.monitorRunDependencies&&l.monitorRunDependencies(fe)),l.instantiateWasm)try{return l.instantiateWasm(e,r)}catch(e){return x(\"Module.instantiateWasm callback failed with error: \"+e),!1}(E||\"function\"!=typeof WebAssembly.instantiateStreaming||de(se)||me(se)||O||\"function\"!=typeof fetch?n(t):fetch(se,{credentials:\"same-origin\"}).then((function(r){return WebAssembly.instantiateStreaming(r,e).then(t,(function(e){return x(\"wasm streaming compile failed: \"+e),x(\"falling back to ArrayBuffer instantiation\"),n(t)}))}))).catch(c)}(),l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.xa).apply(null,arguments)},l._OrtInit=function(){return(l._OrtInit=l.asm.ya).apply(null,arguments)},l._OrtCreateSessionOptions=function(){return(l._OrtCreateSessionOptions=l.asm.za).apply(null,arguments)},l._OrtAppendExecutionProvider=function(){return(l._OrtAppendExecutionProvider=l.asm.Aa).apply(null,arguments)},l._OrtAddSessionConfigEntry=function(){return(l._OrtAddSessionConfigEntry=l.asm.Ba).apply(null,arguments)},l._OrtReleaseSessionOptions=function(){return(l._OrtReleaseSessionOptions=l.asm.Ca).apply(null,arguments)},l._OrtCreateSession=function(){return(l._OrtCreateSession=l.asm.Da).apply(null,arguments)},l._OrtReleaseSession=function(){return(l._OrtReleaseSession=l.asm.Ea).apply(null,arguments)},l._OrtGetInputCount=function(){return(l._OrtGetInputCount=l.asm.Fa).apply(null,arguments)},l._OrtGetOutputCount=function(){return(l._OrtGetOutputCount=l.asm.Ga).apply(null,arguments)},l._OrtGetInputName=function(){return(l._OrtGetInputName=l.asm.Ha).apply(null,arguments)},l._OrtGetOutputName=function(){return(l._OrtGetOutputName=l.asm.Ia).apply(null,arguments)},l._OrtFree=function(){return(l._OrtFree=l.asm.Ja).apply(null,arguments)},l._OrtCreateTensor=function(){return(l._OrtCreateTensor=l.asm.Ka).apply(null,arguments)},l._OrtGetTensorData=function(){return(l._OrtGetTensorData=l.asm.La).apply(null,arguments)},l._OrtReleaseTensor=function(){return(l._OrtReleaseTensor=l.asm.Ma).apply(null,arguments)},l._OrtCreateRunOptions=function(){return(l._OrtCreateRunOptions=l.asm.Na).apply(null,arguments)},l._OrtAddRunConfigEntry=function(){return(l._OrtAddRunConfigEntry=l.asm.Oa).apply(null,arguments)},l._OrtReleaseRunOptions=function(){return(l._OrtReleaseRunOptions=l.asm.Pa).apply(null,arguments)},l._OrtRun=function(){return(l._OrtRun=l.asm.Qa).apply(null,arguments)},l._OrtEndProfiling=function(){return(l._OrtEndProfiling=l.asm.Ra).apply(null,arguments)},l._pthread_self=function(){return(Kr=l._pthread_self=l.asm.Sa).apply(null,arguments)}),et=l._malloc=function(){return(et=l._malloc=l.asm.Ta).apply(null,arguments)},rt=l._free=function(){return(rt=l._free=l.asm.Ua).apply(null,arguments)},tt=l._fflush=function(){return(tt=l._fflush=l.asm.Va).apply(null,arguments)},nt=(l.__emscripten_tls_init=function(){return(l.__emscripten_tls_init=l.asm.Wa).apply(null,arguments)},l.___getTypeName=function(){return(nt=l.___getTypeName=l.asm.Xa).apply(null,arguments)}),at=(l.__embind_initialize_bindings=function(){return(l.__embind_initialize_bindings=l.asm.Ya).apply(null,arguments)},l.___funcs_on_exit=function(){return(at=l.___funcs_on_exit=l.asm.Za).apply(null,arguments)}),ot=l.__emscripten_thread_init=function(){return(ot=l.__emscripten_thread_init=l.asm.$a).apply(null,arguments)},it=(l.__emscripten_thread_crashed=function(){return(l.__emscripten_thread_crashed=l.asm.ab).apply(null,arguments)},l._emscripten_run_in_main_runtime_thread_js=function(){return(it=l._emscripten_run_in_main_runtime_thread_js=l.asm.bb).apply(null,arguments)}),ut=l.__emscripten_proxy_execute_task_queue=function(){return(ut=l.__emscripten_proxy_execute_task_queue=l.asm.cb).apply(null,arguments)},st=l.__emscripten_thread_free_data=function(){return(st=l.__emscripten_thread_free_data=l.asm.db).apply(null,arguments)},ft=l.__emscripten_thread_exit=function(){return(ft=l.__emscripten_thread_exit=l.asm.eb).apply(null,arguments)},ct=l._emscripten_stack_set_limits=function(){return(ct=l._emscripten_stack_set_limits=l.asm.fb).apply(null,arguments)},lt=l.stackSave=function(){return(lt=l.stackSave=l.asm.gb).apply(null,arguments)},pt=l.stackRestore=function(){return(pt=l.stackRestore=l.asm.hb).apply(null,arguments)},dt=l.stackAlloc=function(){return(dt=l.stackAlloc=l.asm.ib).apply(null,arguments)},mt=l.___cxa_is_pointer_type=function(){return(mt=l.___cxa_is_pointer_type=l.asm.jb).apply(null,arguments)};function ht(e){if(e=e||v,!(fe>0)){if(k)return f(l),ue(),void postMessage({cmd:\"loaded\"});!function(){if(l.preRun)for(\"function\"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)e=l.preRun.shift(),te.unshift(e);var e;Oe(te)}(),fe>0||(l.setStatus?(l.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){l.setStatus(\"\")}),1),r()}),1)):r())}function r(){$r||($r=!0,l.calledRun=!0,V||(ue(),f(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),function(){if(!k){if(l.postRun)for(\"function\"==typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;)e=l.postRun.shift(),oe.unshift(e);var e;Oe(oe)}}()))}}if(l.UTF8ToString=Q,l.stringToUTF8=J,l.lengthBytesUTF8=Z,l.keepRuntimeAlive=ie,l.wasmMemory=F,l.stackSave=lt,l.stackRestore=pt,l.stackAlloc=dt,l.ExitStatus=ye,l.PThread=Ae,le=function e(){$r||ht(),$r||(le=e)},l.preInit)for(\"function\"==typeof l.preInit&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();return ht(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\nvar Module=typeof ortWasm!=\"undefined\"?ortWasm:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}};read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||false;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"ort-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"la\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"Ma\"];addOnInit(Module[\"asm\"][\"ma\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer>>>0)}function ___cxa_allocate_exception(size){return _malloc(size+24)+24}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>>2];HEAP32[this.ptr>>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>>2];HEAP32[this.ptr>>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_fstat64(fd,buf){}function ___syscall_getcwd(buf,size){}function ___syscall_getdents64(fd,dirp,count){}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;return 0}function ___syscall_lstat64(path,buf){}function ___syscall_mkdirat(dirfd,path,mode){}function ___syscall_newfstatat(dirfd,path,buf,flags){}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs}function ___syscall_readlinkat(dirfd,path,buf,bufsize){}function ___syscall_rmdir(path){}function ___syscall_stat64(path,buf){}function ___syscall_unlinkat(dirfd,path,flags){}function __dlinit(main_dso_handle){}var dlopenMissingError=\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\";function __dlopen_js(filename,flag){abort(dlopenMissingError)}function __dlsym_js(handle,symbol){abort(dlopenMissingError)}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c>>>0]){ret+=embind_charCodes[HEAPU8[c++>>>0]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>>shift])},destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>>2])}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer>>>0]}:function readU8FromPointer(pointer){return HEAPU8[pointer>>>0]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle>>>0];var data=heap[handle+1>>>0];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr>>>0]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i>>>0])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;ptr>>>=0;HEAPU32[base>>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i>>>0]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i>>>0]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx>>>0])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr>>>0,endPtr>>>0))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){outPtr>>>=0;if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);ptr>>>=0;HEAPU32[ptr>>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emscripten_date_now(){return Date.now()}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_as(handle,returnType,destructorsRef){handle=Emval.toValue(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=Emval.toHandle(destructors);HEAPU32[destructorsRef>>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}function emval_allocateDestructors(destructorsRef){var destructors=[];HEAPU32[destructorsRef>>>2]=Emval.toHandle(destructors);return destructors}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}var emval_methodCallers=[];function __emval_call_method(caller,handle,methodName,destructorsRef,args){caller=emval_methodCallers[caller];handle=Emval.toValue(handle);methodName=getStringOrSymbol(methodName);return caller(handle,methodName,emval_allocateDestructors(destructorsRef),args)}function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=Emval.toValue(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args)}function __emval_equals(first,second){first=Emval.toValue(first);second=Emval.toValue(second);return first==second}function emval_get_global(){if(typeof globalThis==\"object\"){return globalThis}return function(){return Function}()(\"return this\")()}function __emval_get_global(name){if(name===0){return Emval.toHandle(emval_get_global())}else{name=getStringOrSymbol(name);return Emval.toHandle(emval_get_global()[name])}}function emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id}function emval_lookupTypes(argCount,argTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAPU32[argTypes+i*POINTER_SIZE>>>2],\"parameter \"+i)}return a}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}var emval_registeredMethods=[];function __emval_get_method_caller(argCount,argTypes){var types=emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map(function(t){return t.name}).join(\"_\")+\"$\";var returnId=emval_registeredMethods[signatureName];if(returnId!==undefined){return returnId}var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i])}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"]}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\"}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);returnId=emval_addMethodCaller(invokerFunction);emval_registeredMethods[signatureName]=returnId;return returnId}function __emval_get_property(handle,key){handle=Emval.toValue(handle);key=Emval.toValue(key);return Emval.toHandle(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function craftEmvalAllocator(argCount){var argsList=\"\";for(var i=0;i<argCount;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i}var getMemory=()=>HEAPU32;var functionBody=\"return function emval_allocator_\"+argCount+\"(constructor, argTypes, args) {\\n\"+\"  var HEAPU32 = getMemory();\\n\";for(var i=0;i<argCount;++i){functionBody+=\"var argType\"+i+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+i+\"');\\n\"+\"var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args);\\n\"+\"args += argType\"+i+\"['argPackAdvance'];\\n\"+\"argTypes += 4;\\n\"}functionBody+=\"var obj = new constructor(\"+argsList+\");\\n\"+\"return valueToHandle(obj);\\n\"+\"}\\n\";return new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",functionBody)(requireRegisteredType,Module,Emval.toHandle,getMemory)}var emval_newers={};function __emval_new(handle,argCount,argTypes,args){handle=Emval.toValue(handle);var newer=emval_newers[argCount];if(!newer){newer=craftEmvalAllocator(argCount);emval_newers[argCount]=newer}return newer(handle,argTypes,args)}function __emval_new_array(){return Emval.toHandle([])}function __emval_new_array_from_memory_view(view){view=Emval.toValue(view);var a=new Array(view.length);for(i=0;i<view.length;i++)a[i]=view[i];return Emval.toHandle(a)}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v))}function __emval_new_object(){return Emval.toHandle({})}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __emval_run_destructors(handle){var destructors=Emval.toValue(handle);runDestructors(destructors);__emval_decref(handle)}function __emval_set_property(handle,key,value){handle=Emval.toValue(handle);key=Emval.toValue(key);value=Emval.toValue(value);handle[key]=value}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function readI53FromI64(ptr){return HEAPU32[ptr>>>2]+HEAP32[ptr+4>>>2]*4294967296}function __gmtime_js(time,tmPtr){var date=new Date(readI53FromI64(time)*1e3);HEAP32[tmPtr>>>2]=date.getUTCSeconds();HEAP32[tmPtr+4>>>2]=date.getUTCMinutes();HEAP32[tmPtr+8>>>2]=date.getUTCHours();HEAP32[tmPtr+12>>>2]=date.getUTCDate();HEAP32[tmPtr+16>>>2]=date.getUTCMonth();HEAP32[tmPtr+20>>>2]=date.getUTCFullYear()-1900;HEAP32[tmPtr+24>>>2]=date.getUTCDay();var start=Date.UTC(date.getUTCFullYear(),0,1,0,0,0,0);var yday=(date.getTime()-start)/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>>2]=yday}function __localtime_js(time,tmPtr){var date=new Date(readI53FromI64(time)*1e3);HEAP32[tmPtr>>>2]=date.getSeconds();HEAP32[tmPtr+4>>>2]=date.getMinutes();HEAP32[tmPtr+8>>>2]=date.getHours();HEAP32[tmPtr+12>>>2]=date.getDate();HEAP32[tmPtr+16>>>2]=date.getMonth();HEAP32[tmPtr+20>>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>>2]=date.getDay();var start=new Date(date.getFullYear(),0,1);var yday=(date.getTime()-start.getTime())/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>>2]=yday;HEAP32[tmPtr+36>>>2]=-(date.getTimezoneOffset()*60);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>>2]=dst}function __mktime_js(tmPtr){var date=new Date(HEAP32[tmPtr+20>>>2]+1900,HEAP32[tmPtr+16>>>2],HEAP32[tmPtr+12>>>2],HEAP32[tmPtr+8>>>2],HEAP32[tmPtr+4>>>2],HEAP32[tmPtr>>>2],0);var dst=HEAP32[tmPtr+32>>>2];var guessedOffset=date.getTimezoneOffset();var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dstOffset=Math.min(winterOffset,summerOffset);if(dst<0){HEAP32[tmPtr+32>>>2]=Number(summerOffset!=winterOffset&&dstOffset==guessedOffset)}else if(dst>0!=(dstOffset==guessedOffset)){var nonDstOffset=Math.max(winterOffset,summerOffset);var trueOffset=dst>0?dstOffset:nonDstOffset;date.setTime(date.getTime()+(trueOffset-guessedOffset)*6e4)}HEAP32[tmPtr+24>>>2]=date.getDay();var yday=(date.getTime()-start.getTime())/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>>2]=yday;HEAP32[tmPtr>>>2]=date.getSeconds();HEAP32[tmPtr+4>>>2]=date.getMinutes();HEAP32[tmPtr+8>>>2]=date.getHours();HEAP32[tmPtr+12>>>2]=date.getDate();HEAP32[tmPtr+16>>>2]=date.getMonth();return date.getTime()/1e3|0}function __mmap_js(len,prot,flags,fd,off,allocated){return-52}function __munmap_js(addr,len,prot,flags,fd,offset){addr>>>=0}function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function _tzset_impl(timezone,daylight,tzname){var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();var stdTimezoneOffset=Math.max(winterOffset,summerOffset);HEAP32[timezone>>>2]=stdTimezoneOffset*60;HEAP32[daylight>>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return match?match[1]:\"GMT\"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=allocateUTF8(winterName);var summerNamePtr=allocateUTF8(summerName);if(summerOffset<winterOffset){HEAPU32[tzname>>>2]=winterNamePtr;HEAPU32[tzname+4>>>2]=summerNamePtr}else{HEAPU32[tzname>>>2]=summerNamePtr;HEAPU32[tzname+4>>>2]=winterNamePtr}}function __tzset_js(timezone,daylight,tzname){if(__tzset_js.called)return;__tzset_js.called=true;_tzset_impl(timezone,daylight,tzname)}function _abort(){abort(\"\")}function getHeapMax(){return 4294901760}function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=()=>{var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6}}else _emscripten_get_now=()=>performance.now();function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>>0]=0}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>>2]=bufSize;return 0}function _fd_close(fd){return 52}function _fd_read(fd,iov,iovcnt,pnum){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2];var len=HEAPU32[iov+4>>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j>>>0])}num+=len}HEAPU32[pnum>>>2]=num;return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>>2];var date={tm_sec:HEAP32[tm>>>2],tm_min:HEAP32[tm+4>>>2],tm_hour:HEAP32[tm+8>>>2],tm_mday:HEAP32[tm+12>>>2],tm_mon:HEAP32[tm+16>>>2],tm_year:HEAP32[tm+20>>>2],tm_wday:HEAP32[tm+24>>>2],tm_yday:HEAP32[tm+28>>>2],tm_isdst:HEAP32[tm+32>>>2],tm_gmtoff:HEAP32[tm+36>>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":function(date){var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&__isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!__isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_emval();var asmLibraryArg={\"a\":___cxa_allocate_exception,\"b\":___cxa_throw,\"t\":___syscall_fcntl64,\"Y\":___syscall_fstat64,\"M\":___syscall_getcwd,\"O\":___syscall_getdents64,\"I\":___syscall_ioctl,\"W\":___syscall_lstat64,\"R\":___syscall_mkdirat,\"V\":___syscall_newfstatat,\"z\":___syscall_openat,\"N\":___syscall_readlinkat,\"K\":___syscall_rmdir,\"X\":___syscall_stat64,\"L\":___syscall_unlinkat,\"ca\":__dlinit,\"ea\":__dlopen_js,\"da\":__dlsym_js,\"H\":__embind_register_bigint,\"ha\":__embind_register_bool,\"ga\":__embind_register_emval,\"B\":__embind_register_float,\"o\":__embind_register_integer,\"l\":__embind_register_memory_view,\"C\":__embind_register_std_string,\"w\":__embind_register_std_wstring,\"ia\":__embind_register_void,\"A\":__emscripten_date_now,\"Z\":__emscripten_get_now_is_monotonic,\"q\":__emval_as,\"j\":__emval_call_method,\"ka\":__emval_call_void_method,\"c\":__emval_decref,\"F\":__emval_equals,\"D\":__emval_get_global,\"i\":__emval_get_method_caller,\"p\":__emval_get_property,\"d\":__emval_incref,\"ja\":__emval_new,\"E\":__emval_new_array,\"m\":__emval_new_array_from_memory_view,\"e\":__emval_new_cstring,\"k\":__emval_new_object,\"h\":__emval_run_destructors,\"f\":__emval_set_property,\"g\":__emval_take_value,\"_\":__gmtime_js,\"$\":__localtime_js,\"aa\":__mktime_js,\"P\":__mmap_js,\"Q\":__munmap_js,\"ba\":__tzset_js,\"r\":_abort,\"J\":_emscripten_get_heap_max,\"u\":_emscripten_get_now,\"U\":_emscripten_memcpy_big,\"s\":_emscripten_resize_heap,\"S\":_environ_get,\"T\":_environ_sizes_get,\"v\":_fd_close,\"y\":_fd_read,\"G\":_fd_seek,\"x\":_fd_write,\"fa\":_strftime,\"n\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _OrtInit=Module[\"_OrtInit\"]=function(){return(_OrtInit=Module[\"_OrtInit\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _OrtCreateSessionOptions=Module[\"_OrtCreateSessionOptions\"]=function(){return(_OrtCreateSessionOptions=Module[\"_OrtCreateSessionOptions\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _OrtAppendExecutionProvider=Module[\"_OrtAppendExecutionProvider\"]=function(){return(_OrtAppendExecutionProvider=Module[\"_OrtAppendExecutionProvider\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _OrtAddSessionConfigEntry=Module[\"_OrtAddSessionConfigEntry\"]=function(){return(_OrtAddSessionConfigEntry=Module[\"_OrtAddSessionConfigEntry\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _OrtReleaseSessionOptions=Module[\"_OrtReleaseSessionOptions\"]=function(){return(_OrtReleaseSessionOptions=Module[\"_OrtReleaseSessionOptions\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _OrtCreateSession=Module[\"_OrtCreateSession\"]=function(){return(_OrtCreateSession=Module[\"_OrtCreateSession\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _OrtReleaseSession=Module[\"_OrtReleaseSession\"]=function(){return(_OrtReleaseSession=Module[\"_OrtReleaseSession\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _OrtGetInputCount=Module[\"_OrtGetInputCount\"]=function(){return(_OrtGetInputCount=Module[\"_OrtGetInputCount\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _OrtGetOutputCount=Module[\"_OrtGetOutputCount\"]=function(){return(_OrtGetOutputCount=Module[\"_OrtGetOutputCount\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _OrtGetInputName=Module[\"_OrtGetInputName\"]=function(){return(_OrtGetInputName=Module[\"_OrtGetInputName\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _OrtGetOutputName=Module[\"_OrtGetOutputName\"]=function(){return(_OrtGetOutputName=Module[\"_OrtGetOutputName\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _OrtFree=Module[\"_OrtFree\"]=function(){return(_OrtFree=Module[\"_OrtFree\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _OrtCreateTensor=Module[\"_OrtCreateTensor\"]=function(){return(_OrtCreateTensor=Module[\"_OrtCreateTensor\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _OrtGetTensorData=Module[\"_OrtGetTensorData\"]=function(){return(_OrtGetTensorData=Module[\"_OrtGetTensorData\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _OrtReleaseTensor=Module[\"_OrtReleaseTensor\"]=function(){return(_OrtReleaseTensor=Module[\"_OrtReleaseTensor\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _OrtCreateRunOptions=Module[\"_OrtCreateRunOptions\"]=function(){return(_OrtCreateRunOptions=Module[\"_OrtCreateRunOptions\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _OrtAddRunConfigEntry=Module[\"_OrtAddRunConfigEntry\"]=function(){return(_OrtAddRunConfigEntry=Module[\"_OrtAddRunConfigEntry\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _OrtReleaseRunOptions=Module[\"_OrtReleaseRunOptions\"]=function(){return(_OrtReleaseRunOptions=Module[\"_OrtReleaseRunOptions\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _OrtRun=Module[\"_OrtRun\"]=function(){return(_OrtRun=Module[\"_OrtRun\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _OrtEndProfiling=Module[\"_OrtEndProfiling\"]=function(){return(_OrtEndProfiling=Module[\"_OrtEndProfiling\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _fflush=Module[\"_fflush\"]=function(){return(_fflush=Module[\"_fflush\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=function(){return(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};Module[\"UTF8ToString\"]=UTF8ToString;Module[\"stringToUTF8\"]=stringToUTF8;Module[\"lengthBytesUTF8\"]=lengthBytesUTF8;Module[\"stackSave\"]=stackSave;Module[\"stackRestore\"]=stackRestore;Module[\"stackAlloc\"]=stackAlloc;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\n\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n  registerBackend('webnn', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {decodeUtf8String, LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return decodeUtf8String(utf8String);\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(decodeUtf8String);\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\n\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  cast(input: Tensor, type: Tensor.DataType): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureData = this.createTextureDataFromTexture(inputTD as TextureLayout, type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ? this.session.getTextureData(tensorId, isPacked) :\n        isPacked                                ? this.packedTextureDataCache.get(tensorId) :\n                                                  this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {cast, parseCastAttributes} from './ops/cast';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {convTranspose, parseConvTransposeAttributes} from './ops/conv-transpose';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {padV11, padV2, parsePadAttributesV11, parsePadAttributesV2} from './ops/pad';\nimport {averagePool, globalAveragePool, globalMaxPool, maxPool, parseAveragePoolAttributes, parseGlobalAveragePoolAttributes, parseMaxPoolAttributes} from './ops/pool';\nimport {parseReduceAttributes, reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, parseSoftmaxAttributesV13, softmax, softmaxV13} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze, squeezeV13} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze, unsqueezeV13} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7+', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Cast', '', '6+', cast, parseCastAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Clip', '', '11+', unaryOps.clipV11],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['ConvTranspose', '', '1+', convTranspose, parseConvTransposeAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['FusedConv', 'com.microsoft', '1+', conv, parseConvAttributes],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1+', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', padV2, parsePadAttributesV2],\n  ['Pad', '', '11+', padV11, parsePadAttributesV11],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1-12', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  // The \"semantic\" meaning of axis has changed in opset-13.\n  ['Softmax', '', '1-12', softmax, parseSoftmaxAttributes],\n  ['Softmax', '', '13+', softmaxV13, parseSoftmaxAttributesV13],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2-12', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1-12', squeeze, parseSqueezeAttributes],\n  ['Squeeze', '', '13+', squeezeV13],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1-12', unsqueeze, parseUnsqueezeAttributes],\n  ['Unsqueeze', '', '13+', unsqueezeV13],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ProtoUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const cast: OperatorImplementation<Tensor.DataType> =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], to: Tensor.DataType): Tensor[] => {\n      validateInputs(inputs);\n      return [handler.cast(inputs[0], to)];\n    };\n\nexport const parseCastAttributes: OperatorInitialization<Tensor.DataType> = (node: Graph.Node): Tensor.DataType =>\n    ProtoUtil.tensorDataTypeFromProto(node.attributes.getInt('to'));\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Cast requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {ConcatAttributes} from './concat';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActivationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {getActivationSnippet, parseInternalActivationAttributes} from './fuse-utils';\n\nconst computeTotalPad =\n    (inDim: number, stride: number, adj: number, kernel: number, dilation: number, outSize: number) =>\n        (inDim - 1) * stride + adj + (kernel - 1) * dilation + 1 - outSize;\n\nconst distributePadding = (totalPad: number, autoPad: string, pads: number[], head: number, tail: number) => {\n  const smallPad = Math.floor(totalPad / 2);\n  if (autoPad === 'SAME_UPPER') {\n    pads[head] = smallPad;\n    pads[tail] = totalPad - smallPad;\n  } else if (autoPad === 'SAME_LOWER') {\n    pads[head] = totalPad - smallPad;\n    pads[tail] = smallPad;\n  }\n};\n\nconst calculateOutputShapeAndPads =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[], autoPad: string,\n     pads: number[], strides: readonly number[], outputPadding: readonly number[], outputShape: number[]) => {\n      const spatialRank = inputShape.length - 2;\n      const updateShape = outputShape.length === 0;\n      for (let i = 0; i < spatialRank; ++i) {\n        const outSize = updateShape ? inputShape[i + 2] * strides[i] : outputShape[i];\n        const totalPad = computeTotalPad(inputShape[i + 2], strides[i], pads[i], kernelShape[i], dilations[i], outSize);\n        distributePadding(totalPad, autoPad, pads, i, i + spatialRank);\n        if (updateShape) {\n          outputShape.push(\n              strides[i] * (inputShape[i + 2] - 1) + outputPadding[i] + (kernelShape[i] - 1) * dilations[i] + 1 -\n              pads[i] - pads[i + spatialRank]);\n        }\n      }\n    };\n\nexport interface ConvTransposeAttributes extends ConvAttributes {\n  readonly outputPadding: readonly number[];\n  readonly outputShape: readonly number[];\n}\n\nexport const convTranspose: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not convTranspose2D\n      return convTranspose2d(inferenceHandler, inputs, attributes);\n    };\n\nconst convTranspose2d: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvTransposeAttributes(attributes, inputs);\n      return [convTranspose2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n    };\n\nconst createConvTransposeProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'ConvTranspose',\n  inputNames: hasBias ? ['X', 'W', 'B'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedConvTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvTransposeAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const valueInit = hasBias ? 'getB(output_channel)' : '0.0';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[1];\n      const inputChannelsPerGroup = wShape[0] / attributes.group;\n      const outputShape = [inputs[0].dims[0], inputs[1].dims[1] * attributes.group, ...attributes.outputShape];\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${outputChannelsPerGroup};\n    int wOutChannel = output_channel - group_id * ${outputChannelsPerGroup};\n\n    float value = ${valueInit};\n    for (int inChannelOffset = 0; inChannelOffset < ${inputChannelsPerGroup}; inChannelOffset++) {\n      int input_channel = group_id * ${inputChannelsPerGroup} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${wShape[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${wShape[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${attributes.dilations[0]}, wHOff * ${attributes.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${xShape[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${xShape[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nconst createUnpackedConvTransposeProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        ProgramInfoLoader => {\n          const metadata = createConvTransposeProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedConvTransposeProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n\n\nconst convTranspose2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        Tensor => {\n          const result = inferenceHandler.run(\n              createUnpackedConvTransposeProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n          return result;\n        };\n\nconst getAdjustedConvTransposeAttributes = <T extends ConvTransposeAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n\n  const pads = attributes.pads.slice();\n  const outputShape = attributes.outputShape.slice();\n  const inputShape = inputs[0].dims;\n  // If outputShape is not specified in the attributes of this op, infer it from the parameters\n  // Similarly, automatically infer pads if not specified\n  calculateOutputShapeAndPads(\n      inputShape, kernelShape, attributes.dilations, attributes.autoPad, pads, attributes.strides,\n      attributes.outputPadding, outputShape);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, outputShape, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvTransposeAttributes: OperatorInitialization<ConvTransposeAttributes> =\n    (node: Graph.Node): ConvTransposeAttributes => {\n      const attributes = node.attributes;\n      const activationAttributes = parseInternalActivationAttributes(attributes);\n      // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n      const autoPad = attributes.getString('auto_pad', 'NOTSET');\n      const dilations = attributes.getInts('dilations', [1, 1]);\n      const group = attributes.getInt('group', 1);\n      const kernelShape = attributes.getInts('kernel_shape', []);\n      const outputPadding = attributes.getInts('output_padding', [0, 0]);\n      const outputShape = attributes.getInts('output_shape', []);\n      const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n      const strides = attributes.getInts('strides', [1, 1]);\n\n      return createAttributeWithCacheKey(\n          {autoPad, dilations, group, kernelShape, outputPadding, outputShape, pads, strides, ...activationAttributes});\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvTransposeAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[0];\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  const featureMaps = inputs[1].dims[1] * attributes.group;\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[2].dims[0] !== featureMaps)) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // Wrong output padding dimension\n  if (attributes.outputPadding.length !== spatialRank) {\n    throw new Error(`output_padding should be ${spatialRank}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // as with kernelShape, must have same number of spatial dims as input\n  if (attributes.outputShape.length !== 0 && attributes.outputShape.length !== inputs[0].dims.length - 2) {\n    throw new Error('invalid output shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('ConvTranspose input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('ConvTranspose input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {GlslValueFunction} from '../glsl-definitions';\n\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActivationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('activation', '');\n\n  if (activation === 'Clip') {\n    const [clipMin, clipMax] = attributes.getFloats('activation_params', [MIN_CLIP, MAX_CLIP]);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} -\n                ${attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} -\n                  ${attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const padV2: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputsV2(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributesV2: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nexport const padV11: OperatorImplementation<string> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): Tensor[] => {\n      validateInputsV11(inputs);\n      const attrubutes = generatePadAttributesFromInputs(inferenceHandler, inputs, mode);\n      return padV2(inferenceHandler, [inputs[0]], attrubutes);\n    };\n\nexport const parsePadAttributesV11: OperatorInitialization<string> = (node: Graph.Node): string =>\n    node.attributes.getString('mode', 'constant');\n\nconst generatePadAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): PadAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          (inputs.length >= 3 && !inferenceHandler.session.isInitializer(inputs[2].dataId))) {\n        throw new Error('dynamic pad attributes are not allowed');\n      }\n\n      const pads = Array.from(inputs[1].integerData);\n      const value = (inputs.length >= 3) ? inputs[2].floatData[0] : 0.0;\n\n      return createAttributeWithCacheKey({mode, pads, value});\n    };\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(input.dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, input, attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputsV2 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst validateInputsV11 = (inputs: Tensor[]): void => {\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Pad requires 2 or 3 inputs');\n  }\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 3 && inputs[2].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (adjustedAttributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n      const dilations = node.attributes.getInts('dilations', []);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder, dilations});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst getAdjustedPoolAttributesAndOutputShape =\n    (inputs: Tensor[], attributes: AveragePoolAttributes|MaxPoolAttributes, isGlobalOperator: boolean):\n        [AveragePoolAttributes|MaxPoolAttributes, number[]] => {\n          const inputShape = inputs[0].dims.slice();\n          const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n          const kernelShape = attributes.kernelShape.slice();\n          const strides = attributes.strides.slice();\n          const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n          const pads = attributes.pads.slice();\n          PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShape, kernelShape, strides, dilations, pads);\n\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n          const newAttributes = Object.assign({}, attributes);\n          if (hasDilations) {\n            Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n          } else {\n            Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n          }\n          return [newAttributes, outputShape];\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'pytorch_half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${outputWidth}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${outputWidth}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(float(${scalesHeight}), float(${scalesWidth}), float(${scalesHeight}), float(${\n          scalesWidth}));\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const logicalRowCount = ShapeUtil.sizeToDimension(inputShape, axis);\n      const featureCount = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const output = computeSoftmax(inferenceHandler, inputs, attributes, logicalRowCount, featureCount);\n      return output;\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\nexport const parseSoftmaxAttributesV13: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', -1)});\n\n// The \"semantic\" meaning of axis has changed in opset-13.\n// Please compare: https://github.com/onnx/onnx/blob/main/docs/Operators.md#Softmax\n// with https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Softmax-11 for detailed explanations\n// To account for the opset-13 behavior, our plan will be to transpose the \"axis\" dim to the innermost dim\n// and perform softmax and then reverse the transpose. We can skip the transposing aspect if the axis is already\n// the innermost dim\nexport const softmaxV13: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const rank = inputShape.length;\n\n      const isTransposeRequired = (axis !== rank - 1) ? true : false;\n      const transposedInputShape: number[] = [];\n      let perm: number[] = [];\n      let transposedInputs: Tensor[] = [];\n      let transposeAttribute: TransposeAttributes;\n\n      if (isTransposeRequired) {\n        perm = Array.from({length: rank}).map((_, i) => i);\n\n        // swap the innermost dim with the dim corresponding to axis\n        perm[axis] = rank - 1;\n        perm[rank - 1] = axis;\n\n        perm.map(p => transposedInputShape.push(inputShape[p]));\n\n        transposeAttribute = createAttributeWithCacheKey({perm});\n        transposedInputs = transpose(inferenceHandler, inputs, transposeAttribute);\n      }\n\n      const logicalRowCount = isTransposeRequired ? ShapeUtil.sizeToDimension(transposedInputShape, rank - 1) :\n                                                    ShapeUtil.sizeToDimension(inputShape, rank - 1);\n      const featureCount = isTransposeRequired ? ShapeUtil.sizeFromDimension(transposedInputShape, rank - 1) :\n                                                 ShapeUtil.sizeFromDimension(inputShape, rank - 1);\n\n      const output = computeSoftmax(\n          inferenceHandler, isTransposeRequired ? transposedInputs : inputs, attributes, logicalRowCount, featureCount);\n\n      if (isTransposeRequired) {\n        const reversedOutput = transpose(inferenceHandler, output, transposeAttribute!);\n        return reversedOutput;\n      } else {\n        return output;\n      }\n    };\n\nconst computeSoftmax =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes, logicalRowCount: number,\n     featureCount: number): Tensor[] => {\n      const computeMaxProgramInfo =\n          createComputeMaxProgramInfo(inferenceHandler, inputs[0], logicalRowCount, featureCount, [logicalRowCount]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo = createComputScaleProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          [logicalRowCount]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${featureCount}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n      return {\n        ...softmaxComputeMaxProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${featureCount}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount || normalizationPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${featureCount};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const squeezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return squeeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Squeeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey(\n    {min: node.attributes.getFloat('min', MIN_CLIP), max: node.attributes.getFloat('max', MAX_CLIP)});\n\nexport const clipV11 = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const attributes = generateClipAttributesFromInputs(handler, inputs);\n  return clip(handler, [inputs[0]], attributes);\n};\n\nconst generateClipAttributesFromInputs = (handler: WebGLInferenceHandler, inputs: Tensor[]): ClipAttributes => {\n  if (inputs.length >= 3 &&\n      (!handler.session.isInitializer(inputs[1].dataId) || !handler.session.isInitializer(inputs[2].dataId))) {\n    throw new Error('dynamic clip attributes are not allowed');\n  }\n\n  const min = (inputs.length >= 3) ? inputs[1].numberData[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].numberData[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const unsqueezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return unsqueeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Unsqueeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    // handle when roiInput is not given\n    if (node.inputs.length > 2) {\n      roiInputIdx = 1;\n      scalesInputIdx = 2;\n      sizesInputIdx = 3;\n    } else {\n      scalesInputIdx = 1;\n      sizesInputIdx = 2;\n    }\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length < 2)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare let OffscreenCanvas: {new (width: number, height: number): HTMLCanvasElement};\n\nfunction createCanvas(): HTMLCanvasElement {\n  if (typeof document === 'undefined') {\n    if (typeof OffscreenCanvas === 'undefined') {\n      throw new TypeError('failed to create canvas: OffscreenCanvas is not supported');\n    }\n    return new OffscreenCanvas(1, 1);\n  }\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {LongUtil, MAX_CLIP, MIN_CLIP, ProtoUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          // handle exception when opset > 9 and roi not given\n          if (input === '' && nodeProto.input.length === 3 && nodeProto.opType === 'Resize') {\n            continue;\n          }\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has one incoming input and the first output connected to other nodes.\n   * An input validation must be done before calling this function.\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          if (child.opType === 'Clip') {\n            if (child.inputs.length === 1) {\n              try {\n                node.attributes.set(\n                    'activation_params', 'floats',\n                    [child.attributes.getFloat('min'), child.attributes.getFloat('max')]);\n              } catch (e) {\n                node.attributes.set('activation_params', 'floats', [MIN_CLIP, MAX_CLIP]);\n              }\n            } else if (\n                child.inputs.length >= 3 && this._allData[child.inputs[1]].tensor !== undefined &&\n                this._allData[child.inputs[2]].tensor !== undefined) {\n              node.attributes.set('activation_params', 'floats', [\n                this._allData[child.inputs[1]].tensor!.floatData[0], this._allData[child.inputs[2]].tensor!.floatData[0]\n              ]);\n            } else {\n              // Skip fusion with clip node since clip min and clip max are not coming from initializer\n              continue;\n            }\n          }\n          node.attributes.set('activation', 'string', (child.opType));\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml'|'com.microsoft';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(buf, isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {decodeUtf8String, ProtoUtil, ShapeUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        value.data[i] = decodeUtf8String(str);\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  // This function is called to get a number from long type of data for attribute, dim, and ir version,\n  // which values are signed integers.\n  // To make it more generic, add an optional paramter to convert to a unsigned number.\n  static longToNumber(n: Long|flatbuffers.Long|number, unsigned?: boolean) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: unsigned ?? false}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/main/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], outputDims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n\nexport function decodeUtf8String(buffer: Uint8Array): string {\n  return new TextDecoder().decode(buffer);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString(\"deviceType\", allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType.toString(), allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n                  throw new Error(`Can't set a session config entry: \"deviceType\" - ${webnnOptions.deviceType}`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString(\"powerPreference\", allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference.toString(), allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n                  throw new Error(`Can't set a session config entry: \"powerPreference\" - ${webnnOptions.powerPreference}`);\n                }\n              }\n            }\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, options.executionProviders, allocs);\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions.get(sessionId);\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.slice(0).buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> =\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    !BUILD_DEFS.DISABLE_WASM_THREAD ? require('./binding/ort-wasm-threaded.js') : ortWasmFactory;\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.14.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n(()=>{var e={474:(e,t,r)=>{var _scriptDir,n=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){function t(){return W.buffer!=j&&ee(W.buffer),H}function n(){return W.buffer!=j&&ee(W.buffer),L}function a(){return W.buffer!=j&&ee(W.buffer),z}function o(){return W.buffer!=j&&ee(W.buffer),Y}function u(){return W.buffer!=j&&ee(W.buffer),N}function s(){return W.buffer!=j&&ee(W.buffer),B}function c(){return W.buffer!=j&&ee(W.buffer),G}var f,l,p=void 0!==(e=e||{})?e:{};p.ready=new Promise((function(e,t){f=e,l=t}));var d,m,g,h,y,v,_=Object.assign({},p),w=[],b=\\\"./this.program\\\",T=(e,t)=>{throw t},A=\\\"object\\\"==typeof window,O=\\\"function\\\"==typeof importScripts,S=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,E=p.ENVIRONMENT_IS_PTHREAD||!1,P=\\\"\\\";function C(e){return p.locateFile?p.locateFile(e,P):P+e}if(S){let t;P=O?r(908).dirname(P)+\\\"/\\\":\\\"//\\\",v=()=>{y||(h=r(384),y=r(908))},d=function(e,t){return v(),e=y.normalize(e),h.readFileSync(e,t?void 0:\\\"utf8\\\")},g=e=>{var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),t},m=(e,t,r)=>{v(),e=y.normalize(e),h.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},process.argv.length>1&&(b=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),w=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof ve))throw e})),process.on(\\\"unhandledRejection\\\",(function(e){throw e})),T=(e,t)=>{if(ue())throw process.exitCode=e,t;var r;(r=t)instanceof ve||R(\\\"exiting due to exception: \\\"+r),process.exit(e)},p.inspect=function(){return\\\"[Emscripten Module object]\\\"};try{t=r(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}r.g.Worker=t.Worker}else(A||O)&&(O?P=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(P=document.currentScript.src),_scriptDir&&(P=_scriptDir),P=0!==P.indexOf(\\\"blob:\\\")?P.substr(0,P.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",S||(d=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},O&&(g=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),m=(e,t,r)=>{var n=new XMLHttpRequest;n.open(\\\"GET\\\",e,!0),n.responseType=\\\"arraybuffer\\\",n.onload=()=>{200==n.status||0==n.status&&n.response?t(n.response):r()},n.onerror=r,n.send(null)}));S&&\\\"undefined\\\"==typeof performance&&(r.g.performance=r(953).performance);var M=console.log.bind(console),k=console.warn.bind(console);S&&(v(),M=e=>h.writeSync(1,e+\\\"\\\\n\\\"),k=e=>h.writeSync(2,e+\\\"\\\\n\\\"));var F,x=p.print||M,R=p.printErr||k;Object.assign(p,_),_=null,p.arguments&&(w=p.arguments),p.thisProgram&&(b=p.thisProgram),p.quit&&(T=p.quit),Atomics.load,Atomics.store,Atomics.compareExchange,p.wasmBinary&&(F=p.wasmBinary);var W,U,I=p.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&de(\\\"no native wasm support detected\\\");var D,j,H,L,z,Y,N,B,V,G,q=!1,$=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function X(e,t,r){for(var n=(t>>>=0)+r,a=t;e[a]&&!(a>=n);)++a;if(a-t>16&&e.buffer&&$)return $.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,a):e.subarray(t,a));for(var o=\\\"\\\";t<a;){var i=e[t++];if(128&i){var u=63&e[t++];if(192!=(224&i)){var s=63&e[t++];if((i=224==(240&i)?(15&i)<<12|u<<6|s:(7&i)<<18|u<<12|s<<6|63&e[t++])<65536)o+=String.fromCharCode(i);else{var c=i-65536;o+=String.fromCharCode(55296|c>>10,56320|1023&c)}}else o+=String.fromCharCode((31&i)<<6|u)}else o+=String.fromCharCode(i)}return o}function Q(e,t){return(e>>>=0)?X(n(),e,t):\\\"\\\"}function J(e,t,r,n){if(!(n>0))return 0;for(var a=r>>>=0,o=r+n-1,i=0;i<e.length;++i){var u=e.charCodeAt(i);if(u>=55296&&u<=57343&&(u=65536+((1023&u)<<10)|1023&e.charCodeAt(++i)),u<=127){if(r>=o)break;t[r++>>>0]=u}else if(u<=2047){if(r+1>=o)break;t[r++>>>0]=192|u>>6,t[r++>>>0]=128|63&u}else if(u<=65535){if(r+2>=o)break;t[r++>>>0]=224|u>>12,t[r++>>>0]=128|u>>6&63,t[r++>>>0]=128|63&u}else{if(r+3>=o)break;t[r++>>>0]=240|u>>18,t[r++>>>0]=128|u>>12&63,t[r++>>>0]=128|u>>6&63,t[r++>>>0]=128|63&u}}return t[r>>>0]=0,r-a}function Z(e,t,r){return J(e,n(),t,r)}function K(e){for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);n<=127?t++:n<=2047?t+=2:n>=55296&&n<=57343?(t+=4,++r):t+=3}return t}function ee(e){j=e,p.HEAP8=H=new Int8Array(e),p.HEAP16=z=new Int16Array(e),p.HEAP32=N=new Int32Array(e),p.HEAPU8=L=new Uint8Array(e),p.HEAPU16=Y=new Uint16Array(e),p.HEAPU32=B=new Uint32Array(e),p.HEAPF32=V=new Float32Array(e),p.HEAPF64=G=new Float64Array(e)}E&&(j=p.buffer);var te,re=p.INITIAL_MEMORY||16777216;if(E)W=p.wasmMemory,j=p.buffer;else if(p.wasmMemory)W=p.wasmMemory;else if(!((W=new WebAssembly.Memory({initial:re/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw R(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),S&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");W&&(j=W.buffer),re=j.byteLength,ee(j);var ne=[],ae=[],oe=[],ie=[];function ue(){return I||!1}function se(){E||Se(ae)}var ce,fe=0,le=null,pe=null;function de(e){E?postMessage({cmd:\\\"onAbort\\\",arg:e}):p.onAbort&&p.onAbort(e),R(e=\\\"Aborted(\\\"+e+\\\")\\\"),q=!0,D=1,e+=\\\". Build with -sASSERTIONS for more info.\\\";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function me(e){return e.startsWith(\\\"data:application/octet-stream;base64,\\\")}function ge(e){return e.startsWith(\\\"file://\\\")}function he(e){try{if(e==ce&&F)return new Uint8Array(F);if(g)return g(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){de(e)}}me(ce=\\\"ort-wasm-threaded.wasm\\\")||(ce=C(ce));var ye={};function ve(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function _e(e){var t=Oe.pthreads[e];t||de(void 0),Oe.returnWorkerToPool(t)}function we(e){var t=Oe.getNewWorker();if(!t)return 6;Oe.runningWorkers.push(t),Oe.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var r={cmd:\\\"run\\\",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}var be={varargs:void 0,get:function(){return be.varargs+=4,u()[be.varargs-4>>>2]},getStr:function(e){return Q(e)}};function Te(e){if(E)return Wt(1,1,e);D=e,ue()||(Oe.terminateAllThreads(),p.onExit&&p.onExit(e),q=!0),T(e,new ve(e))}var Ae=function(e,t){if(D=e,!t&&E)throw Pe(e),\\\"unwind\\\";ue()||E||(or(),Se(oe),nr(0),Bt[1].length&&Vt(1,10),Bt[2].length&&Vt(2,10),Oe.terminateAllThreads()),Te(e)},Oe={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){E?Oe.initWorker():Oe.initMainThread()},initMainThread:function(){},initWorker:function(){I=!1},setExitStatus:function(e){D=e},terminateAllThreads:function(){for(var e of Object.values(Oe.pthreads))Oe.returnWorkerToPool(e);for(var e of Oe.unusedWorkers)e.terminate();Oe.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete Oe.pthreads[t],Oe.unusedWorkers.push(e),Oe.runningWorkers.splice(Oe.runningWorkers.indexOf(e),1),e.pthread_ptr=0,cr(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){Oe.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(e,t){e.onmessage=r=>{var n,a=r.data,o=a.cmd;if(e.pthread_ptr&&(Oe.currentProxiedOperationCallerThread=e.pthread_ptr),a.targetThread&&a.targetThread!=er()){var i=Oe.pthreads[a.targetThread];return i?i.postMessage(a,a.transferList):R('Internal error! Worker sent a message \\\"'+o+'\\\" to target pthread '+a.targetThread+\\\", but that thread no longer exists!\\\"),void(Oe.currentProxiedOperationCallerThread=void 0)}\\\"processProxyingQueue\\\"===o?_t(a.queue):\\\"spawnThread\\\"===o?we(a):\\\"cleanupThread\\\"===o?_e(a.thread):\\\"killThread\\\"===o?function(e){var t=Oe.pthreads[e];delete Oe.pthreads[e],t.terminate(),cr(e),Oe.runningWorkers.splice(Oe.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(a.thread):\\\"cancelThread\\\"===o?(n=a.thread,Oe.pthreads[n].postMessage({cmd:\\\"cancel\\\"})):\\\"loaded\\\"===o?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):\\\"print\\\"===o?x(\\\"Thread \\\"+a.threadId+\\\": \\\"+a.text):\\\"printErr\\\"===o?R(\\\"Thread \\\"+a.threadId+\\\": \\\"+a.text):\\\"alert\\\"===o?alert(\\\"Thread \\\"+a.threadId+\\\": \\\"+a.text):\\\"setimmediate\\\"===a.target?e.postMessage(a):\\\"onAbort\\\"===o?p.onAbort&&p.onAbort(a.arg):o&&R(\\\"worker sent an unknown command \\\"+o),Oe.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw R(\\\"worker sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message),e},S&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"detachedExit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:p.mainScriptUrlOrBlob||_scriptDir,wasmMemory:W,wasmModule:U})},allocateUnusedWorker:function(){var e=C(\\\"ort-wasm-threaded.worker.js\\\");Oe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Oe.unusedWorkers.length&&(Oe.allocateUnusedWorker(),Oe.loadWasmModuleToWorker(Oe.unusedWorkers[0])),Oe.unusedWorkers.pop()}};function Se(e){for(;e.length>0;)e.shift()(p)}function Ee(e){var t=pr(),r=e();return dr(t),r}function Pe(e){if(E)return Wt(2,0,e);try{Ae(e)}catch(e){!function(e){if(e instanceof ve||\\\"unwind\\\"==e)return D;T(1,e)}(e)}}p.PThread=Oe,p.establishStackSpace=function(){var e=er(),t=u()[e+44>>>2],r=u()[e+48>>>2];lr(t,t-r),dr(t)};var Ce=[];function Me(e){this.excPtr=e,this.ptr=e-24,this.set_type=function(e){s()[this.ptr+4>>>2]=e},this.get_type=function(){return s()[this.ptr+4>>>2]},this.set_destructor=function(e){s()[this.ptr+8>>>2]=e},this.get_destructor=function(){return s()[this.ptr+8>>>2]},this.set_refcount=function(e){u()[this.ptr>>>2]=e},this.set_caught=function(e){e=e?1:0,t()[this.ptr+12>>>0]=e},this.get_caught=function(){return 0!=t()[this.ptr+12>>>0]},this.set_rethrown=function(e){e=e?1:0,t()[this.ptr+13>>>0]=e},this.get_rethrown=function(){return 0!=t()[this.ptr+13>>>0]},this.init=function(e,t){this.set_adjusted_ptr(0),this.set_type(e),this.set_destructor(t),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){Atomics.add(u(),this.ptr+0>>2,1)},this.release_ref=function(){return 1===Atomics.sub(u(),this.ptr+0>>2,1)},this.set_adjusted_ptr=function(e){s()[this.ptr+16>>>2]=e},this.get_adjusted_ptr=function(){return s()[this.ptr+16>>>2]},this.get_exception_ptr=function(){if(gr(this.get_type()))return s()[this.excPtr>>>2];var e=this.get_adjusted_ptr();return 0!==e?e:this.excPtr}}function ke(e,t,r,n){return E?Wt(3,1,e,t,r,n):Fe(e,t,r,n)}function Fe(e,t,r,n){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return R(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var a=[];if(E&&0===a.length)return ke(e,t,r,n);var o={startRoutine:r,pthread_ptr:e,arg:n,transferList:a};return E?(o.cmd=\\\"spawnThread\\\",postMessage(o,a),0):we(o)}function xe(e,t,r){return E?Wt(4,1,e,t,r):(be.varargs=r,0)}function Re(e,t){if(E)return Wt(5,1,e,t)}function We(e,t){if(E)return Wt(6,1,e,t)}function Ue(e,t,r){if(E)return Wt(7,1,e,t,r)}function Ie(e,t,r){return E?Wt(8,1,e,t,r):(be.varargs=r,0)}function De(e,t){if(E)return Wt(9,1,e,t)}function je(e,t,r){if(E)return Wt(10,1,e,t,r)}function He(e,t,r,n){if(E)return Wt(11,1,e,t,r,n)}function Le(e,t,r,n){if(E)return Wt(12,1,e,t,r,n);be.varargs=n}function ze(e,t,r,n){if(E)return Wt(13,1,e,t,r,n)}function Ye(e){if(E)return Wt(14,1,e)}function Ne(e,t){if(E)return Wt(15,1,e,t)}function Be(e,t,r){if(E)return Wt(16,1,e,t,r)}p.invokeEntryPoint=function(e,t){var r,n,a=((n=Ce[r=e])||(r>=Ce.length&&(Ce.length=r+1),Ce[r]=n=te.get(r)),n)(t);ue()?Oe.setExitStatus(a):fr(a)};var Ve=\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\";function Ge(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+e)}}var qe=void 0;function $e(e){for(var t=\\\"\\\",r=e;n()[r>>>0];)t+=qe[n()[r++>>>0]];return t}var Xe={},Qe={},Je={};function Ze(e){if(void 0===e)return\\\"_unknown\\\";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return t>=48&&t<=57?\\\"_\\\"+e:e}function Ke(e,t){return e=Ze(e),new Function(\\\"body\\\",\\\"return function \\\"+e+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(t)}function et(e,t){var r=Ke(t,(function(e){this.name=t,this.message=e;var r=new Error(e).stack;void 0!==r&&(this.stack=this.toString()+\\\"\\\\n\\\"+r.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return r.prototype=Object.create(e.prototype),r.prototype.constructor=r,r.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},r}var tt=void 0;function rt(e){throw new tt(e)}function nt(e,t,r={}){if(!(\\\"argPackAdvance\\\"in t))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var n=t.name;if(e||rt('type \\\"'+n+'\\\" must have a positive integer typeid pointer'),Qe.hasOwnProperty(e)){if(r.ignoreDuplicateRegistrations)return;rt(\\\"Cannot register type '\\\"+n+\\\"' twice\\\")}if(Qe[e]=t,delete Je[e],Xe.hasOwnProperty(e)){var a=Xe[e];delete Xe[e],a.forEach((e=>e()))}}var at=[],ot=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function it(e){e>4&&0==--ot[e].refcount&&(ot[e]=void 0,at.push(e))}var ut=e=>(e||rt(\\\"Cannot use deleted val. handle = \\\"+e),ot[e].value),st=e=>{switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=at.length?at.pop():ot.length;return ot[t]={refcount:1,value:e},t}};function ct(e){return this.fromWireType(u()[e>>>2])}function ft(e,t){switch(t){case 2:return function(e){return this.fromWireType((W.buffer!=j&&ee(W.buffer),V)[e>>>2])};case 3:return function(e){return this.fromWireType(c()[e>>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+e)}}function lt(e,r,i){switch(r){case 0:return i?function(e){return t()[e>>>0]}:function(e){return n()[e>>>0]};case 1:return i?function(e){return a()[e>>>1]}:function(e){return o()[e>>>1]};case 2:return i?function(e){return u()[e>>>2]}:function(e){return s()[e>>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+e)}}var pt=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function dt(e,t){for(var r=e,i=r>>1,u=i+t/2;!(i>=u)&&o()[i>>>0];)++i;if((r=i<<1)-e>32&&pt)return pt.decode(n().slice(e,r));for(var s=\\\"\\\",c=0;!(c>=t/2);++c){var f=a()[e+2*c>>>1];if(0==f)break;s+=String.fromCharCode(f)}return s}function mt(e,t,r){if(void 0===r&&(r=2147483647),r<2)return 0;for(var n=t,o=(r-=2)<2*e.length?r/2:e.length,i=0;i<o;++i){var u=e.charCodeAt(i);a()[t>>>1]=u,t+=2}return a()[t>>>1]=0,t-n}function gt(e){return 2*e.length}function ht(e,t){for(var r=0,n=\\\"\\\";!(r>=t/4);){var a=u()[e+4*r>>>2];if(0==a)break;if(++r,a>=65536){var o=a-65536;n+=String.fromCharCode(55296|o>>10,56320|1023&o)}else n+=String.fromCharCode(a)}return n}function yt(e,t,r){if(void 0===r&&(r=2147483647),r<4)return 0;for(var n=t>>>=0,a=n+r-4,o=0;o<e.length;++o){var i=e.charCodeAt(o);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),u()[t>>>2]=i,(t+=4)+4>a)break}return u()[t>>>2]=0,t-n}function vt(e){for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);n>=55296&&n<=57343&&++r,t+=4}return t}function _t(e){Atomics.store(u(),e>>2,1),er()&&sr(e),Atomics.compareExchange(u(),e>>2,1,0)}function wt(e,t){var r,n,a=Qe[e];return void 0===a&&rt(t+\\\" has unknown type \\\"+(n=$e(r=ar(e)),rr(r),n)),a}p.executeNotifiedProxyingQueue=_t;var bt={};function Tt(e){var t=bt[e];return void 0===t?$e(e):t}var At=[];function Ot(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}var St,Et=[],Pt={};function Ct(e){return s()[e>>>2]+4294967296*u()[e+4>>>2]}function Mt(e,t,r,n,a,o){return E?Wt(17,1,e,t,r,n,a,o):-52}function kt(e,t,r,n,a,o){if(E)return Wt(18,1,e,t,r,n,a,o);e>>>=0}function Ft(e){var r=K(e)+1,n=tr(r);return n&&J(e,t(),n,r),n}function xt(e,t,r){if(E)return Wt(19,1,e,t,r);var n=(new Date).getFullYear(),a=new Date(n,0,1),o=new Date(n,6,1),i=a.getTimezoneOffset(),c=o.getTimezoneOffset(),f=Math.max(i,c);function l(e){var t=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/);return t?t[1]:\\\"GMT\\\"}u()[e>>>2]=60*f,u()[t>>>2]=Number(i!=c);var p=l(a),d=l(o),m=Ft(p),g=Ft(d);c<i?(s()[r>>>2]=m,s()[r+4>>>2]=g):(s()[r>>>2]=g,s()[r+4>>>2]=m)}function Rt(e){Rt.shown||(Rt.shown={}),Rt.shown[e]||(Rt.shown[e]=1,S&&(e=\\\"warning: \\\"+e),R(e))}function Wt(e,t){var r=arguments.length-2,n=arguments;return Ee((()=>{for(var a=r,o=mr(8*a),i=o>>3,u=0;u<r;u++){var s=n[2+u];c()[i+u>>>0]=s}return ur(e,a,o,t)}))}St=S?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:E?()=>performance.now()-p.__performance_now_clock_drift:()=>performance.now();var Ut=[];function It(e){try{return W.grow(e-j.byteLength+65535>>>16),ee(W.buffer),1}catch(e){}}var Dt={};function jt(){if(!jt.strings){var e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:b||\\\"./this.program\\\"};for(var t in Dt)void 0===Dt[t]?delete e[t]:e[t]=Dt[t];var r=[];for(var t in e)r.push(t+\\\"=\\\"+e[t]);jt.strings=r}return jt.strings}function Ht(e,r){if(E)return Wt(20,1,e,r);var n=0;return jt().forEach((function(a,o){var i=r+n;s()[e+4*o>>>2]=i,function(e,r,n){for(var a=0;a<e.length;++a)t()[r++>>>0]=e.charCodeAt(a);t()[r>>>0]=0}(a,i),n+=a.length+1})),0}function Lt(e,t){if(E)return Wt(21,1,e,t);var r=jt();s()[e>>>2]=r.length;var n=0;return r.forEach((function(e){n+=e.length+1})),s()[t>>>2]=n,0}function zt(e){return E?Wt(22,1,e):52}function Yt(e,t,r,n){return E?Wt(23,1,e,t,r,n):52}function Nt(e,t,r,n,a){return E?Wt(24,1,e,t,r,n,a):70}var Bt=[null,[],[]];function Vt(e,t){var r=Bt[e];0===t||10===t?((1===e?x:R)(X(r,0)),r.length=0):r.push(t)}function Gt(e,t,r,a){if(E)return Wt(25,1,e,t,r,a);for(var o=0,i=0;i<r;i++){var u=s()[t>>>2],c=s()[t+4>>>2];t+=8;for(var f=0;f<c;f++)Vt(e,n()[u+f>>>0]);o+=c}return s()[a>>>2]=o,0}function qt(e){return e%4==0&&(e%100!=0||e%400==0)}var $t=[31,29,31,30,31,30,31,31,30,31,30,31],Xt=[31,28,31,30,31,30,31,31,30,31,30,31];function Qt(e,r,n,a){var o=u()[a+40>>>2],i={tm_sec:u()[a>>>2],tm_min:u()[a+4>>>2],tm_hour:u()[a+8>>>2],tm_mday:u()[a+12>>>2],tm_mon:u()[a+16>>>2],tm_year:u()[a+20>>>2],tm_wday:u()[a+24>>>2],tm_yday:u()[a+28>>>2],tm_isdst:u()[a+32>>>2],tm_gmtoff:u()[a+36>>>2],tm_zone:o?Q(o):\\\"\\\"},s=Q(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"};for(var f in c)s=s.replace(new RegExp(f,\\\"g\\\"),c[f]);var l=[\\\"Sunday\\\",\\\"Monday\\\",\\\"Tuesday\\\",\\\"Wednesday\\\",\\\"Thursday\\\",\\\"Friday\\\",\\\"Saturday\\\"],p=[\\\"January\\\",\\\"February\\\",\\\"March\\\",\\\"April\\\",\\\"May\\\",\\\"June\\\",\\\"July\\\",\\\"August\\\",\\\"September\\\",\\\"October\\\",\\\"November\\\",\\\"December\\\"];function d(e,t,r){for(var n=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";n.length<t;)n=r[0]+n;return n}function m(e,t){return d(e,t,\\\"0\\\")}function g(e,t){function r(e){return e<0?-1:e>0?1:0}var n;return 0===(n=r(e.getFullYear()-t.getFullYear()))&&0===(n=r(e.getMonth()-t.getMonth()))&&(n=r(e.getDate()-t.getDate())),n}function h(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function y(e){var t=function(e,t){for(var r=new Date(e.getTime());t>0;){var n=qt(r.getFullYear()),a=r.getMonth(),o=(n?$t:Xt)[a];if(!(t>o-r.getDate()))return r.setDate(r.getDate()+t),r;t-=o-r.getDate()+1,r.setDate(1),a<11?r.setMonth(a+1):(r.setMonth(0),r.setFullYear(r.getFullYear()+1))}return r}(new Date(e.tm_year+1900,0,1),e.tm_yday),r=new Date(t.getFullYear(),0,4),n=new Date(t.getFullYear()+1,0,4),a=h(r),o=h(n);return g(a,t)<=0?g(o,t)<=0?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var v={\\\"%a\\\":function(e){return l[e.tm_wday].substring(0,3)},\\\"%A\\\":function(e){return l[e.tm_wday]},\\\"%b\\\":function(e){return p[e.tm_mon].substring(0,3)},\\\"%B\\\":function(e){return p[e.tm_mon]},\\\"%C\\\":function(e){return m((e.tm_year+1900)/100|0,2)},\\\"%d\\\":function(e){return m(e.tm_mday,2)},\\\"%e\\\":function(e){return d(e.tm_mday,2,\\\" \\\")},\\\"%g\\\":function(e){return y(e).toString().substring(2)},\\\"%G\\\":function(e){return y(e)},\\\"%H\\\":function(e){return m(e.tm_hour,2)},\\\"%I\\\":function(e){var t=e.tm_hour;return 0==t?t=12:t>12&&(t-=12),m(t,2)},\\\"%j\\\":function(e){return m(e.tm_mday+function(e,t){for(var r=0,n=0;n<=t;r+=e[n++]);return r}(qt(e.tm_year+1900)?$t:Xt,e.tm_mon-1),3)},\\\"%m\\\":function(e){return m(e.tm_mon+1,2)},\\\"%M\\\":function(e){return m(e.tm_min,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return e.tm_hour>=0&&e.tm_hour<12?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return m(e.tm_sec,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.tm_wday||7},\\\"%U\\\":function(e){var t=e.tm_yday+7-e.tm_wday;return m(Math.floor(t/7),2)},\\\"%V\\\":function(e){var t=Math.floor((e.tm_yday+7-(e.tm_wday+6)%7)/7);if((e.tm_wday+371-e.tm_yday-2)%7<=2&&t++,t){if(53==t){var r=(e.tm_wday+371-e.tm_yday)%7;4==r||3==r&&qt(e.tm_year)||(t=1)}}else{t=52;var n=(e.tm_wday+7-e.tm_yday-1)%7;(4==n||5==n&&qt(e.tm_year%400-1))&&t++}return m(t,2)},\\\"%w\\\":function(e){return e.tm_wday},\\\"%W\\\":function(e){var t=e.tm_yday+7-(e.tm_wday+6)%7;return m(Math.floor(t/7),2)},\\\"%y\\\":function(e){return(e.tm_year+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.tm_year+1900},\\\"%z\\\":function(e){var t=e.tm_gmtoff,r=t>=0;return t=(t=Math.abs(t)/60)/60*100+t%60,(r?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+t).slice(-4)},\\\"%Z\\\":function(e){return e.tm_zone},\\\"%%\\\":function(){return\\\"%\\\"}};for(var f in s=s.replace(/%%/g,\\\"\\\\0\\\\0\\\"),v)s.includes(f)&&(s=s.replace(new RegExp(f,\\\"g\\\"),v[f](i)));var _,w,b,T=(w=K(_=s=s.replace(/\\\\0\\\\0/g,\\\"%\\\"))+1,J(_,b=new Array(w),0,b.length),b);return T.length>r?0:(function(e,r){t().set(e,r>>>0)}(T,e),T.length-1)}Oe.init(),function(){for(var e=new Array(256),t=0;t<256;++t)e[t]=String.fromCharCode(t);qe=e}(),tt=p.BindingError=et(Error,\\\"BindingError\\\"),p.InternalError=et(Error,\\\"InternalError\\\"),p.count_emval_handles=function(){for(var e=0,t=5;t<ot.length;++t)void 0!==ot[t]&&++e;return e},p.get_first_emval=function(){for(var e=5;e<ot.length;++e)if(void 0!==ot[e])return ot[e];return null};var Jt,Zt=[null,Te,Pe,ke,xe,Re,We,Ue,Ie,De,je,He,Le,ze,Ye,Ne,Be,Mt,kt,xt,Ht,Lt,zt,Yt,Nt,Gt],Kt={b:function(e){return tr(e+24)+24},c:function(e,t,r){throw new Me(e).init(t,r),e},ba:function(e){ir(e,!O,1,!A),Oe.threadInitTLS()},A:function(e){E?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):_e(e)},V:Fe,v:xe,ia:Re,R:We,T:Ue,M:Ie,ga:De,_:je,fa:He,C:Le,S:ze,P:Ye,ha:Ne,Q:Be,qa:function(e){},E:function(e,t){de(Ve)},ra:function(e,t){de(Ve)},L:function(e,t,r,n,a){},ta:function(e,r,n,o,i){var s=Ge(n);nt(e,{name:r=$e(r),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?o:i},argPackAdvance:8,readValueFromPointer:function(e){var o;if(1===n)o=t();else if(2===n)o=a();else{if(4!==n)throw new TypeError(\\\"Unknown boolean type size: \\\"+r);o=u()}return this.fromWireType(o[e>>>s])},destructorFunction:null})},sa:function(e,t){nt(e,{name:t=$e(t),fromWireType:function(e){var t=ut(e);return it(e),t},toWireType:function(e,t){return st(t)},argPackAdvance:8,readValueFromPointer:ct,destructorFunction:null})},F:function(e,t,r){var n=Ge(r);nt(e,{name:t=$e(t),fromWireType:function(e){return e},toWireType:function(e,t){return t},argPackAdvance:8,readValueFromPointer:ft(t,n),destructorFunction:null})},r:function(e,t,r,n,a){t=$e(t),-1===a&&(a=4294967295);var o=Ge(r),i=e=>e;if(0===n){var u=32-8*r;i=e=>e<<u>>>u}var s=t.includes(\\\"unsigned\\\");nt(e,{name:t,fromWireType:i,toWireType:s?function(e,t){return this.name,t>>>0}:function(e,t){return this.name,t},argPackAdvance:8,readValueFromPointer:lt(t,o,0!==n),destructorFunction:null})},n:function(e,t,r){var n=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];function a(e){e>>=2;var t=s(),r=t[e>>>0],a=t[e+1>>>0];return new n(j,a,r)}nt(e,{name:r=$e(r),fromWireType:a,argPackAdvance:8,readValueFromPointer:a},{ignoreDuplicateRegistrations:!0})},G:function(e,t){var r=\\\"std::string\\\"===(t=$e(t));nt(e,{name:t,fromWireType:function(e){var t,a=s()[e>>>2],o=e+4;if(r)for(var i=o,u=0;u<=a;++u){var c=o+u;if(u==a||0==n()[c>>>0]){var f=Q(i,c-i);void 0===t?t=f:(t+=String.fromCharCode(0),t+=f),i=c+1}}else{var l=new Array(a);for(u=0;u<a;++u)l[u]=String.fromCharCode(n()[o+u>>>0]);t=l.join(\\\"\\\")}return rr(e),t},toWireType:function(e,t){var a;t instanceof ArrayBuffer&&(t=new Uint8Array(t));var o=\\\"string\\\"==typeof t;o||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||rt(\\\"Cannot pass non-string to std::string\\\"),a=r&&o?K(t):t.length;var i=tr(4+a+1),u=i+4;if(u>>>=0,s()[i>>>2]=a,r&&o)Z(t,u,a+1);else if(o)for(var c=0;c<a;++c){var f=t.charCodeAt(c);f>255&&(rr(u),rt(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),n()[u+c>>>0]=f}else for(c=0;c<a;++c)n()[u+c>>>0]=t[c];return null!==e&&e.push(rr,i),i},argPackAdvance:8,readValueFromPointer:ct,destructorFunction:function(e){rr(e)}})},x:function(e,t,r){var n,a,i,u,c;r=$e(r),2===t?(n=dt,a=mt,u=gt,i=()=>o(),c=1):4===t&&(n=ht,a=yt,u=vt,i=()=>s(),c=2),nt(e,{name:r,fromWireType:function(e){for(var r,a=s()[e>>>2],o=i(),u=e+4,f=0;f<=a;++f){var l=e+4+f*t;if(f==a||0==o[l>>>c]){var p=n(u,l-u);void 0===r?r=p:(r+=String.fromCharCode(0),r+=p),u=l+t}}return rr(e),r},toWireType:function(e,n){\\\"string\\\"!=typeof n&&rt(\\\"Cannot pass non-string to C++ string type \\\"+r);var o=u(n),i=tr(4+o+t);return i>>>=0,s()[i>>>2]=o>>c,a(n,i+4,o+t),null!==e&&e.push(rr,i),i},argPackAdvance:8,readValueFromPointer:ct,destructorFunction:function(e){rr(e)}})},ua:function(e,t){nt(e,{isVoid:!0,name:t=$e(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(e,t){}})},D:function(){return Date.now()},W:function(){return 2097152},ka:function(){return!0},X:function(e,t,r,n){if(e==t)setTimeout((()=>_t(n)));else if(E)postMessage({targetThread:e,cmd:\\\"processProxyingQueue\\\",queue:n});else{var a=Oe.pthreads[e];if(!a)return;a.postMessage({cmd:\\\"processProxyingQueue\\\",queue:n})}return 1},aa:function(e,t,r){return-1},t:function(e,t,r){e=ut(e),t=wt(t,\\\"emval::as\\\");var n=[],a=st(n);return s()[r>>>2]=a,t.toWireType(n,e)},k:function(e,t,r,n,a){return(e=At[e])(t=ut(t),r=Tt(r),function(e){var t=[];return s()[e>>>2]=st(t),t}(n),a)},wa:function(e,t,r,n){(e=At[e])(t=ut(t),r=Tt(r),null,n)},d:it,J:function(e,t){return(e=ut(e))==ut(t)},H:function(e){return 0===e?st(Ot()):(e=Tt(e),st(Ot()[e]))},j:function(e,t){var r=function(e,t){for(var r=new Array(e),n=0;n<e;++n)r[n]=wt(s()[t+4*n>>>2],\\\"parameter \\\"+n);return r}(e,t),n=r[0],a=n.name+\\\"_$\\\"+r.slice(1).map((function(e){return e.name})).join(\\\"_\\\")+\\\"$\\\",o=Et[a];if(void 0!==o)return o;for(var i=[\\\"retType\\\"],u=[n],c=\\\"\\\",f=0;f<e-1;++f)c+=(0!==f?\\\", \\\":\\\"\\\")+\\\"arg\\\"+f,i.push(\\\"argType\\\"+f),u.push(r[1+f]);var l,p,d=\\\"return function \\\"+Ze(\\\"methodCaller_\\\"+a)+\\\"(handle, name, destructors, args) {\\\\n\\\",m=0;for(f=0;f<e-1;++f)d+=\\\"    var arg\\\"+f+\\\" = argType\\\"+f+\\\".readValueFromPointer(args\\\"+(m?\\\"+\\\"+m:\\\"\\\")+\\\");\\\\n\\\",m+=r[f+1].argPackAdvance;for(d+=\\\"    var rv = handle[name](\\\"+c+\\\");\\\\n\\\",f=0;f<e-1;++f)r[f+1].deleteObject&&(d+=\\\"    argType\\\"+f+\\\".deleteObject(arg\\\"+f+\\\");\\\\n\\\");return n.isVoid||(d+=\\\"    return retType.toWireType(destructors, rv);\\\\n\\\"),d+=\\\"};\\\\n\\\",i.push(d),l=function(e,t){if(!(e instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof e+\\\" which is not a function\\\");var r=Ke(e.name||\\\"unknownFunctionName\\\",(function(){}));r.prototype=e.prototype;var n=new r,a=e.apply(n,t);return a instanceof Object?a:n}(Function,i).apply(null,u),p=At.length,At.push(l),o=p,Et[a]=o,o},s:function(e,t){return e=ut(e),t=ut(t),st(e[t])},e:function(e){e>4&&(ot[e].refcount+=1)},va:function(e,t,r,n){e=ut(e);var a=Pt[t];return a||(a=function(e){for(var t=\\\"\\\",r=0;r<e;++r)t+=(0!==r?\\\", \\\":\\\"\\\")+\\\"arg\\\"+r;var n=\\\"return function emval_allocator_\\\"+e+\\\"(constructor, argTypes, args) {\\\\n  var HEAPU32 = getMemory();\\\\n\\\";for(r=0;r<e;++r)n+=\\\"var argType\\\"+r+\\\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \\\"+r+\\\"');\\\\nvar arg\\\"+r+\\\" = argType\\\"+r+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+r+\\\"['argPackAdvance'];\\\\nargTypes += 4;\\\\n\\\";return n+=\\\"var obj = new constructor(\\\"+t+\\\");\\\\nreturn valueToHandle(obj);\\\\n}\\\\n\\\",new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"valueToHandle\\\",\\\"getMemory\\\",n)(wt,p,st,(()=>s()))}(t),Pt[t]=a),a(e,r,n)},I:function(){return st([])},o:function(e){e=ut(e);var t=new Array(e.length);for(i=0;i<e.length;i++)t[i]=e[i];return st(t)},f:function(e){return st(Tt(e))},l:function(){return st({})},i:function(e){!function(e){for(;e.length;){var t=e.pop();e.pop()(t)}}(ut(e)),it(e)},g:function(e,t,r){e=ut(e),t=ut(t),r=ut(r),e[t]=r},h:function(e,t){var r=(e=wt(e,\\\"_emval_take_value\\\")).readValueFromPointer(t);return st(r)},ma:function(e,t){var r=new Date(1e3*Ct(e));u()[t>>>2]=r.getUTCSeconds(),u()[t+4>>>2]=r.getUTCMinutes(),u()[t+8>>>2]=r.getUTCHours(),u()[t+12>>>2]=r.getUTCDate(),u()[t+16>>>2]=r.getUTCMonth(),u()[t+20>>>2]=r.getUTCFullYear()-1900,u()[t+24>>>2]=r.getUTCDay();var n=Date.UTC(r.getUTCFullYear(),0,1,0,0,0,0),a=(r.getTime()-n)/864e5|0;u()[t+28>>>2]=a},na:function(e,t){var r=new Date(1e3*Ct(e));u()[t>>>2]=r.getSeconds(),u()[t+4>>>2]=r.getMinutes(),u()[t+8>>>2]=r.getHours(),u()[t+12>>>2]=r.getDate(),u()[t+16>>>2]=r.getMonth(),u()[t+20>>>2]=r.getFullYear()-1900,u()[t+24>>>2]=r.getDay();var n=new Date(r.getFullYear(),0,1),a=(r.getTime()-n.getTime())/864e5|0;u()[t+28>>>2]=a,u()[t+36>>>2]=-60*r.getTimezoneOffset();var o=new Date(r.getFullYear(),6,1).getTimezoneOffset(),i=n.getTimezoneOffset(),s=0|(o!=i&&r.getTimezoneOffset()==Math.min(i,o));u()[t+32>>>2]=s},oa:function(e){var t=new Date(u()[e+20>>>2]+1900,u()[e+16>>>2],u()[e+12>>>2],u()[e+8>>>2],u()[e+4>>>2],u()[e>>>2],0),r=u()[e+32>>>2],n=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=a.getTimezoneOffset(),s=Math.min(i,o);if(r<0)u()[e+32>>>2]=Number(o!=i&&s==n);else if(r>0!=(s==n)){var c=Math.max(i,o),f=r>0?s:c;t.setTime(t.getTime()+6e4*(f-n))}u()[e+24>>>2]=t.getDay();var l=(t.getTime()-a.getTime())/864e5|0;return u()[e+28>>>2]=l,u()[e>>>2]=t.getSeconds(),u()[e+4>>>2]=t.getMinutes(),u()[e+8>>>2]=t.getHours(),u()[e+12>>>2]=t.getDate(),u()[e+16>>>2]=t.getMonth(),t.getTime()/1e3|0},Y:Mt,Z:kt,pa:function e(t,r,n){e.called||(e.called=!0,xt(t,r,n))},m:function(){de(\\\"\\\")},B:function(){S||O||Rt(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")},O:function(){return 4294901760},q:St,ea:function(e,t,r){n().copyWithin(e>>>0,t>>>0,t+r>>>0)},u:function(){return S?r(993).cpus().length:navigator.hardwareConcurrency},$:function(e,t,r){Ut.length=t;for(var n=r>>3,a=0;a<t;a++)Ut[a]=c()[n+a>>>0];return(e<0?ye[-e-1]:Zt[e]).apply(null,Ut)},N:function(e){var t=n().length;if((e>>>=0)<=t)return!1;var r,a=4294901760;if(e>a)return!1;for(var o=1;o<=4;o*=2){var i=t*(1+.2/o);if(i=Math.min(i,e+100663296),It(Math.min(a,(r=Math.max(e,i))+(65536-r%65536)%65536)))return!0}return!1},ja:function(){throw\\\"unwind\\\"},ca:Ht,da:Lt,U:Ae,w:zt,z:Yt,K:Nt,y:Gt,a:W||p.wasmMemory,la:Qt,p:function(e,t,r,n){return Qt(e,t,r,n)}},er=(function(){var e={a:Kt};function t(e,t){var r,n,a=e.exports;p.asm=a,r=p.asm.Wa,Oe.tlsInitFunctions.push(r),te=p.asm._a,n=p.asm.xa,ae.unshift(n),U=t,E||function(e){if(fe--,p.monitorRunDependencies&&p.monitorRunDependencies(fe),0==fe&&(null!==le&&(clearInterval(le),le=null),pe)){var t=pe;pe=null,t()}}()}function r(e){t(e.instance,e.module)}function n(t){return function(){if(!F&&(A||O)){if(\\\"function\\\"==typeof fetch&&!ge(ce))return fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+ce+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return he(ce)}));if(m)return new Promise((function(e,t){m(ce,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he(ce)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){R(\\\"failed to asynchronously prepare wasm: \\\"+e),de(e)}))}if(E||(fe++,p.monitorRunDependencies&&p.monitorRunDependencies(fe)),p.instantiateWasm)try{return p.instantiateWasm(e,t)}catch(e){return R(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(F||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||me(ce)||ge(ce)||S||\\\"function\\\"!=typeof fetch?n(r):fetch(ce,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return R(\\\"wasm streaming compile failed: \\\"+e),R(\\\"falling back to ArrayBuffer instantiation\\\"),n(r)}))}))).catch(l)}(),p.___wasm_call_ctors=function(){return(p.___wasm_call_ctors=p.asm.xa).apply(null,arguments)},p._OrtInit=function(){return(p._OrtInit=p.asm.ya).apply(null,arguments)},p._OrtCreateSessionOptions=function(){return(p._OrtCreateSessionOptions=p.asm.za).apply(null,arguments)},p._OrtAppendExecutionProvider=function(){return(p._OrtAppendExecutionProvider=p.asm.Aa).apply(null,arguments)},p._OrtAddSessionConfigEntry=function(){return(p._OrtAddSessionConfigEntry=p.asm.Ba).apply(null,arguments)},p._OrtReleaseSessionOptions=function(){return(p._OrtReleaseSessionOptions=p.asm.Ca).apply(null,arguments)},p._OrtCreateSession=function(){return(p._OrtCreateSession=p.asm.Da).apply(null,arguments)},p._OrtReleaseSession=function(){return(p._OrtReleaseSession=p.asm.Ea).apply(null,arguments)},p._OrtGetInputCount=function(){return(p._OrtGetInputCount=p.asm.Fa).apply(null,arguments)},p._OrtGetOutputCount=function(){return(p._OrtGetOutputCount=p.asm.Ga).apply(null,arguments)},p._OrtGetInputName=function(){return(p._OrtGetInputName=p.asm.Ha).apply(null,arguments)},p._OrtGetOutputName=function(){return(p._OrtGetOutputName=p.asm.Ia).apply(null,arguments)},p._OrtFree=function(){return(p._OrtFree=p.asm.Ja).apply(null,arguments)},p._OrtCreateTensor=function(){return(p._OrtCreateTensor=p.asm.Ka).apply(null,arguments)},p._OrtGetTensorData=function(){return(p._OrtGetTensorData=p.asm.La).apply(null,arguments)},p._OrtReleaseTensor=function(){return(p._OrtReleaseTensor=p.asm.Ma).apply(null,arguments)},p._OrtCreateRunOptions=function(){return(p._OrtCreateRunOptions=p.asm.Na).apply(null,arguments)},p._OrtAddRunConfigEntry=function(){return(p._OrtAddRunConfigEntry=p.asm.Oa).apply(null,arguments)},p._OrtReleaseRunOptions=function(){return(p._OrtReleaseRunOptions=p.asm.Pa).apply(null,arguments)},p._OrtRun=function(){return(p._OrtRun=p.asm.Qa).apply(null,arguments)},p._OrtEndProfiling=function(){return(p._OrtEndProfiling=p.asm.Ra).apply(null,arguments)},p._pthread_self=function(){return(er=p._pthread_self=p.asm.Sa).apply(null,arguments)}),tr=p._malloc=function(){return(tr=p._malloc=p.asm.Ta).apply(null,arguments)},rr=p._free=function(){return(rr=p._free=p.asm.Ua).apply(null,arguments)},nr=p._fflush=function(){return(nr=p._fflush=p.asm.Va).apply(null,arguments)},ar=(p.__emscripten_tls_init=function(){return(p.__emscripten_tls_init=p.asm.Wa).apply(null,arguments)},p.___getTypeName=function(){return(ar=p.___getTypeName=p.asm.Xa).apply(null,arguments)}),or=(p.__embind_initialize_bindings=function(){return(p.__embind_initialize_bindings=p.asm.Ya).apply(null,arguments)},p.___funcs_on_exit=function(){return(or=p.___funcs_on_exit=p.asm.Za).apply(null,arguments)}),ir=p.__emscripten_thread_init=function(){return(ir=p.__emscripten_thread_init=p.asm.$a).apply(null,arguments)},ur=(p.__emscripten_thread_crashed=function(){return(p.__emscripten_thread_crashed=p.asm.ab).apply(null,arguments)},p._emscripten_run_in_main_runtime_thread_js=function(){return(ur=p._emscripten_run_in_main_runtime_thread_js=p.asm.bb).apply(null,arguments)}),sr=p.__emscripten_proxy_execute_task_queue=function(){return(sr=p.__emscripten_proxy_execute_task_queue=p.asm.cb).apply(null,arguments)},cr=p.__emscripten_thread_free_data=function(){return(cr=p.__emscripten_thread_free_data=p.asm.db).apply(null,arguments)},fr=p.__emscripten_thread_exit=function(){return(fr=p.__emscripten_thread_exit=p.asm.eb).apply(null,arguments)},lr=p._emscripten_stack_set_limits=function(){return(lr=p._emscripten_stack_set_limits=p.asm.fb).apply(null,arguments)},pr=p.stackSave=function(){return(pr=p.stackSave=p.asm.gb).apply(null,arguments)},dr=p.stackRestore=function(){return(dr=p.stackRestore=p.asm.hb).apply(null,arguments)},mr=p.stackAlloc=function(){return(mr=p.stackAlloc=p.asm.ib).apply(null,arguments)},gr=p.___cxa_is_pointer_type=function(){return(gr=p.___cxa_is_pointer_type=p.asm.jb).apply(null,arguments)};function hr(e){if(e=e||w,!(fe>0)){if(E)return f(p),se(),void postMessage({cmd:\\\"loaded\\\"});!function(){if(p.preRun)for(\\\"function\\\"==typeof p.preRun&&(p.preRun=[p.preRun]);p.preRun.length;)e=p.preRun.shift(),ne.unshift(e);var e;Se(ne)}(),fe>0||(p.setStatus?(p.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){p.setStatus(\\\"\\\")}),1),t()}),1)):t())}function t(){Jt||(Jt=!0,p.calledRun=!0,q||(se(),f(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),function(){if(!E){if(p.postRun)for(\\\"function\\\"==typeof p.postRun&&(p.postRun=[p.postRun]);p.postRun.length;)e=p.postRun.shift(),ie.unshift(e);var e;Se(ie)}}()))}}if(p.UTF8ToString=Q,p.stringToUTF8=Z,p.lengthBytesUTF8=K,p.keepRuntimeAlive=ue,p.wasmMemory=W,p.stackSave=pr,p.stackRestore=dr,p.stackAlloc=mr,p.ExitStatus=ve,p.PThread=Oe,pe=function e(){Jt||hr(),Jt||(pe=e)},p.preInit)for(\\\"function\\\"==typeof p.preInit&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();return hr(),e.ready});e.exports=n},932:(e,t,r)=>{var _scriptDir,n=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){var t,n,a=void 0!==(e=e||{})?e:{};a.ready=new Promise((function(e,r){t=e,n=r}));var o,u,s,c,f,l,p=Object.assign({},a),d=[],m=\\\"./this.program\\\",g=\\\"object\\\"==typeof window,h=\\\"function\\\"==typeof importScripts,y=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,v=\\\"\\\";y?(v=h?r(908).dirname(v)+\\\"/\\\":\\\"//\\\",l=()=>{f||(c=r(384),f=r(908))},o=function(e,t){return l(),e=f.normalize(e),c.readFileSync(e,t?void 0:\\\"utf8\\\")},s=e=>{var t=o(e,!0);return t.buffer||(t=new Uint8Array(t)),t},u=(e,t,r)=>{l(),e=f.normalize(e),c.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},process.argv.length>1&&(m=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),d=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof Z))throw e})),process.on(\\\"unhandledRejection\\\",(function(e){throw e})),a.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(g||h)&&(h?v=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(v=document.currentScript.src),_scriptDir&&(v=_scriptDir),v=0!==v.indexOf(\\\"blob:\\\")?v.substr(0,v.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",o=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},h&&(s=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),u=(e,t,r)=>{var n=new XMLHttpRequest;n.open(\\\"GET\\\",e,!0),n.responseType=\\\"arraybuffer\\\",n.onload=()=>{200==n.status||0==n.status&&n.response?t(n.response):r()},n.onerror=r,n.send(null)});var _,w,b=a.print||console.log.bind(console),T=a.printErr||console.warn.bind(console);Object.assign(a,p),p=null,a.arguments&&(d=a.arguments),a.thisProgram&&(m=a.thisProgram),a.quit&&a.quit,a.wasmBinary&&(_=a.wasmBinary),a.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&$(\\\"no native wasm support detected\\\");var A,O,S,E,P,C,M,k,F,x=!1,R=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function W(e,t,r){for(var n=(t>>>=0)+r,a=t;e[a]&&!(a>=n);)++a;if(a-t>16&&e.buffer&&R)return R.decode(e.subarray(t,a));for(var o=\\\"\\\";t<a;){var i=e[t++];if(128&i){var u=63&e[t++];if(192!=(224&i)){var s=63&e[t++];if((i=224==(240&i)?(15&i)<<12|u<<6|s:(7&i)<<18|u<<12|s<<6|63&e[t++])<65536)o+=String.fromCharCode(i);else{var c=i-65536;o+=String.fromCharCode(55296|c>>10,56320|1023&c)}}else o+=String.fromCharCode((31&i)<<6|u)}else o+=String.fromCharCode(i)}return o}function U(e,t){return(e>>>=0)?W(S,e,t):\\\"\\\"}function I(e,t,r,n){if(!(n>0))return 0;for(var a=r>>>=0,o=r+n-1,i=0;i<e.length;++i){var u=e.charCodeAt(i);if(u>=55296&&u<=57343&&(u=65536+((1023&u)<<10)|1023&e.charCodeAt(++i)),u<=127){if(r>=o)break;t[r++>>>0]=u}else if(u<=2047){if(r+1>=o)break;t[r++>>>0]=192|u>>6,t[r++>>>0]=128|63&u}else if(u<=65535){if(r+2>=o)break;t[r++>>>0]=224|u>>12,t[r++>>>0]=128|u>>6&63,t[r++>>>0]=128|63&u}else{if(r+3>=o)break;t[r++>>>0]=240|u>>18,t[r++>>>0]=128|u>>12&63,t[r++>>>0]=128|u>>6&63,t[r++>>>0]=128|63&u}}return t[r>>>0]=0,r-a}function D(e,t,r){return I(e,S,t,r)}function j(e){for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);n<=127?t++:n<=2047?t+=2:n>=55296&&n<=57343?(t+=4,++r):t+=3}return t}function H(e){A=e,a.HEAP8=O=new Int8Array(e),a.HEAP16=E=new Int16Array(e),a.HEAP32=C=new Int32Array(e),a.HEAPU8=S=new Uint8Array(e),a.HEAPU16=P=new Uint16Array(e),a.HEAPU32=M=new Uint32Array(e),a.HEAPF32=k=new Float32Array(e),a.HEAPF64=F=new Float64Array(e)}a.INITIAL_MEMORY;var L,z,Y=[],N=[],B=[],V=0,G=null,q=null;function $(e){a.onAbort&&a.onAbort(e),T(e=\\\"Aborted(\\\"+e+\\\")\\\"),x=!0,e+=\\\". Build with -sASSERTIONS for more info.\\\";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function X(e){return e.startsWith(\\\"data:application/octet-stream;base64,\\\")}function Q(e){return e.startsWith(\\\"file://\\\")}function J(e){try{if(e==L&&_)return new Uint8Array(_);if(s)return s(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){$(e)}}function Z(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function K(e){for(;e.length>0;)e.shift()(a)}function ee(e){this.excPtr=e,this.ptr=e-24,this.set_type=function(e){M[this.ptr+4>>>2]=e},this.get_type=function(){return M[this.ptr+4>>>2]},this.set_destructor=function(e){M[this.ptr+8>>>2]=e},this.get_destructor=function(){return M[this.ptr+8>>>2]},this.set_refcount=function(e){C[this.ptr>>>2]=e},this.set_caught=function(e){e=e?1:0,O[this.ptr+12>>>0]=e},this.get_caught=function(){return 0!=O[this.ptr+12>>>0]},this.set_rethrown=function(e){e=e?1:0,O[this.ptr+13>>>0]=e},this.get_rethrown=function(){return 0!=O[this.ptr+13>>>0]},this.init=function(e,t){this.set_adjusted_ptr(0),this.set_type(e),this.set_destructor(t),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var e=C[this.ptr>>>2];C[this.ptr>>>2]=e+1},this.release_ref=function(){var e=C[this.ptr>>>2];return C[this.ptr>>>2]=e-1,1===e},this.set_adjusted_ptr=function(e){M[this.ptr+16>>>2]=e},this.get_adjusted_ptr=function(){return M[this.ptr+16>>>2]},this.get_exception_ptr=function(){if(nt(this.get_type()))return M[this.excPtr>>>2];var e=this.get_adjusted_ptr();return 0!==e?e:this.excPtr}}X(L=\\\"ort-wasm.wasm\\\")||(z=L,L=a.locateFile?a.locateFile(z,v):v+z);var te={varargs:void 0,get:function(){return te.varargs+=4,C[te.varargs-4>>>2]},getStr:function(e){return U(e)}},re=\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\";function ne(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+e)}}var ae=void 0;function oe(e){for(var t=\\\"\\\",r=e;S[r>>>0];)t+=ae[S[r++>>>0]];return t}var ie={},ue={},se={};function ce(e){if(void 0===e)return\\\"_unknown\\\";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return t>=48&&t<=57?\\\"_\\\"+e:e}function fe(e,t){return e=ce(e),new Function(\\\"body\\\",\\\"return function \\\"+e+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(t)}function le(e,t){var r=fe(t,(function(e){this.name=t,this.message=e;var r=new Error(e).stack;void 0!==r&&(this.stack=this.toString()+\\\"\\\\n\\\"+r.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return r.prototype=Object.create(e.prototype),r.prototype.constructor=r,r.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},r}var pe=void 0;function de(e){throw new pe(e)}function me(e,t,r={}){if(!(\\\"argPackAdvance\\\"in t))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var n=t.name;if(e||de('type \\\"'+n+'\\\" must have a positive integer typeid pointer'),ue.hasOwnProperty(e)){if(r.ignoreDuplicateRegistrations)return;de(\\\"Cannot register type '\\\"+n+\\\"' twice\\\")}if(ue[e]=t,delete se[e],ie.hasOwnProperty(e)){var a=ie[e];delete ie[e],a.forEach((e=>e()))}}var ge=[],he=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function ye(e){e>4&&0==--he[e].refcount&&(he[e]=void 0,ge.push(e))}var ve=e=>(e||de(\\\"Cannot use deleted val. handle = \\\"+e),he[e].value),_e=e=>{switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=ge.length?ge.pop():he.length;return he[t]={refcount:1,value:e},t}};function we(e){return this.fromWireType(C[e>>>2])}function be(e,t){switch(t){case 2:return function(e){return this.fromWireType(k[e>>>2])};case 3:return function(e){return this.fromWireType(F[e>>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+e)}}function Te(e,t,r){switch(t){case 0:return r?function(e){return O[e>>>0]}:function(e){return S[e>>>0]};case 1:return r?function(e){return E[e>>>1]}:function(e){return P[e>>>1]};case 2:return r?function(e){return C[e>>>2]}:function(e){return M[e>>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+e)}}var Ae=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function Oe(e,t){for(var r=e,n=r>>1,a=n+t/2;!(n>=a)&&P[n>>>0];)++n;if((r=n<<1)-e>32&&Ae)return Ae.decode(S.subarray(e>>>0,r>>>0));for(var o=\\\"\\\",i=0;!(i>=t/2);++i){var u=E[e+2*i>>>1];if(0==u)break;o+=String.fromCharCode(u)}return o}function Se(e,t,r){if(void 0===r&&(r=2147483647),r<2)return 0;for(var n=t,a=(r-=2)<2*e.length?r/2:e.length,o=0;o<a;++o){var i=e.charCodeAt(o);E[t>>>1]=i,t+=2}return E[t>>>1]=0,t-n}function Ee(e){return 2*e.length}function Pe(e,t){for(var r=0,n=\\\"\\\";!(r>=t/4);){var a=C[e+4*r>>>2];if(0==a)break;if(++r,a>=65536){var o=a-65536;n+=String.fromCharCode(55296|o>>10,56320|1023&o)}else n+=String.fromCharCode(a)}return n}function Ce(e,t,r){if(void 0===r&&(r=2147483647),r<4)return 0;for(var n=t>>>=0,a=n+r-4,o=0;o<e.length;++o){var i=e.charCodeAt(o);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),C[t>>>2]=i,(t+=4)+4>a)break}return C[t>>>2]=0,t-n}function Me(e){for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);n>=55296&&n<=57343&&++r,t+=4}return t}function ke(e,t){var r,n,a=ue[e];return void 0===a&&de(t+\\\" has unknown type \\\"+(n=oe(r=Ke(e)),Ze(r),n)),a}var Fe={};function xe(e){var t=Fe[e];return void 0===t?oe(e):t}var Re=[];function We(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}var Ue,Ie=[],De={};function je(e){return M[e>>>2]+4294967296*C[e+4>>>2]}function He(e){var t=j(e)+1,r=Je(t);return r&&I(e,O,r,t),r}function Le(e){try{return w.grow(e-A.byteLength+65535>>>16),H(w.buffer),1}catch(e){}}Ue=y?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.now();var ze={};function Ye(){if(!Ye.strings){var e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:m||\\\"./this.program\\\"};for(var t in ze)void 0===ze[t]?delete e[t]:e[t]=ze[t];var r=[];for(var t in e)r.push(t+\\\"=\\\"+e[t]);Ye.strings=r}return Ye.strings}var Ne=[null,[],[]];function Be(e,t){var r=Ne[e];0===t||10===t?((1===e?b:T)(W(r,0)),r.length=0):r.push(t)}function Ve(e){return e%4==0&&(e%100!=0||e%400==0)}var Ge=[31,29,31,30,31,30,31,31,30,31,30,31],qe=[31,28,31,30,31,30,31,31,30,31,30,31];function $e(e,t,r,n){var a=C[n+40>>>2],o={tm_sec:C[n>>>2],tm_min:C[n+4>>>2],tm_hour:C[n+8>>>2],tm_mday:C[n+12>>>2],tm_mon:C[n+16>>>2],tm_year:C[n+20>>>2],tm_wday:C[n+24>>>2],tm_yday:C[n+28>>>2],tm_isdst:C[n+32>>>2],tm_gmtoff:C[n+36>>>2],tm_zone:a?U(a):\\\"\\\"},i=U(r),u={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"};for(var s in u)i=i.replace(new RegExp(s,\\\"g\\\"),u[s]);var c=[\\\"Sunday\\\",\\\"Monday\\\",\\\"Tuesday\\\",\\\"Wednesday\\\",\\\"Thursday\\\",\\\"Friday\\\",\\\"Saturday\\\"],f=[\\\"January\\\",\\\"February\\\",\\\"March\\\",\\\"April\\\",\\\"May\\\",\\\"June\\\",\\\"July\\\",\\\"August\\\",\\\"September\\\",\\\"October\\\",\\\"November\\\",\\\"December\\\"];function l(e,t,r){for(var n=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";n.length<t;)n=r[0]+n;return n}function p(e,t){return l(e,t,\\\"0\\\")}function d(e,t){function r(e){return e<0?-1:e>0?1:0}var n;return 0===(n=r(e.getFullYear()-t.getFullYear()))&&0===(n=r(e.getMonth()-t.getMonth()))&&(n=r(e.getDate()-t.getDate())),n}function m(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function g(e){var t=function(e,t){for(var r=new Date(e.getTime());t>0;){var n=Ve(r.getFullYear()),a=r.getMonth(),o=(n?Ge:qe)[a];if(!(t>o-r.getDate()))return r.setDate(r.getDate()+t),r;t-=o-r.getDate()+1,r.setDate(1),a<11?r.setMonth(a+1):(r.setMonth(0),r.setFullYear(r.getFullYear()+1))}return r}(new Date(e.tm_year+1900,0,1),e.tm_yday),r=new Date(t.getFullYear(),0,4),n=new Date(t.getFullYear()+1,0,4),a=m(r),o=m(n);return d(a,t)<=0?d(o,t)<=0?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var h={\\\"%a\\\":function(e){return c[e.tm_wday].substring(0,3)},\\\"%A\\\":function(e){return c[e.tm_wday]},\\\"%b\\\":function(e){return f[e.tm_mon].substring(0,3)},\\\"%B\\\":function(e){return f[e.tm_mon]},\\\"%C\\\":function(e){return p((e.tm_year+1900)/100|0,2)},\\\"%d\\\":function(e){return p(e.tm_mday,2)},\\\"%e\\\":function(e){return l(e.tm_mday,2,\\\" \\\")},\\\"%g\\\":function(e){return g(e).toString().substring(2)},\\\"%G\\\":function(e){return g(e)},\\\"%H\\\":function(e){return p(e.tm_hour,2)},\\\"%I\\\":function(e){var t=e.tm_hour;return 0==t?t=12:t>12&&(t-=12),p(t,2)},\\\"%j\\\":function(e){return p(e.tm_mday+function(e,t){for(var r=0,n=0;n<=t;r+=e[n++]);return r}(Ve(e.tm_year+1900)?Ge:qe,e.tm_mon-1),3)},\\\"%m\\\":function(e){return p(e.tm_mon+1,2)},\\\"%M\\\":function(e){return p(e.tm_min,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return e.tm_hour>=0&&e.tm_hour<12?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return p(e.tm_sec,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.tm_wday||7},\\\"%U\\\":function(e){var t=e.tm_yday+7-e.tm_wday;return p(Math.floor(t/7),2)},\\\"%V\\\":function(e){var t=Math.floor((e.tm_yday+7-(e.tm_wday+6)%7)/7);if((e.tm_wday+371-e.tm_yday-2)%7<=2&&t++,t){if(53==t){var r=(e.tm_wday+371-e.tm_yday)%7;4==r||3==r&&Ve(e.tm_year)||(t=1)}}else{t=52;var n=(e.tm_wday+7-e.tm_yday-1)%7;(4==n||5==n&&Ve(e.tm_year%400-1))&&t++}return p(t,2)},\\\"%w\\\":function(e){return e.tm_wday},\\\"%W\\\":function(e){var t=e.tm_yday+7-(e.tm_wday+6)%7;return p(Math.floor(t/7),2)},\\\"%y\\\":function(e){return(e.tm_year+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.tm_year+1900},\\\"%z\\\":function(e){var t=e.tm_gmtoff,r=t>=0;return t=(t=Math.abs(t)/60)/60*100+t%60,(r?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+t).slice(-4)},\\\"%Z\\\":function(e){return e.tm_zone},\\\"%%\\\":function(){return\\\"%\\\"}};for(var s in i=i.replace(/%%/g,\\\"\\\\0\\\\0\\\"),h)i.includes(s)&&(i=i.replace(new RegExp(s,\\\"g\\\"),h[s](o)));var y,v,_,w=(!1,v=j(y=i=i.replace(/\\\\0\\\\0/g,\\\"%\\\"))+1,I(y,_=new Array(v),0,_.length),_);return w.length>t?0:(function(e,t){O.set(e,t>>>0)}(w,e),w.length-1)}!function(){for(var e=new Array(256),t=0;t<256;++t)e[t]=String.fromCharCode(t);ae=e}(),pe=a.BindingError=le(Error,\\\"BindingError\\\"),a.InternalError=le(Error,\\\"InternalError\\\"),a.count_emval_handles=function(){for(var e=0,t=5;t<he.length;++t)void 0!==he[t]&&++e;return e},a.get_first_emval=function(){for(var e=5;e<he.length;++e)if(void 0!==he[e])return he[e];return null};var Xe,Qe={a:function(e){return Je(e+24)+24},b:function(e,t,r){throw new ee(e).init(t,r),e},t:function(e,t,r){return te.varargs=r,0},Y:function(e,t){},M:function(e,t){},O:function(e,t,r){},I:function(e,t,r){return te.varargs=r,0},W:function(e,t){},R:function(e,t,r){},V:function(e,t,r,n){},z:function(e,t,r,n){te.varargs=n},N:function(e,t,r,n){},K:function(e){},X:function(e,t){},L:function(e,t,r){},ca:function(e){},ea:function(e,t){$(re)},da:function(e,t){$(re)},H:function(e,t,r,n,a){},ha:function(e,t,r,n,a){var o=ne(r);me(e,{name:t=oe(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:a},argPackAdvance:8,readValueFromPointer:function(e){var n;if(1===r)n=O;else if(2===r)n=E;else{if(4!==r)throw new TypeError(\\\"Unknown boolean type size: \\\"+t);n=C}return this.fromWireType(n[e>>>o])},destructorFunction:null})},ga:function(e,t){me(e,{name:t=oe(t),fromWireType:function(e){var t=ve(e);return ye(e),t},toWireType:function(e,t){return _e(t)},argPackAdvance:8,readValueFromPointer:we,destructorFunction:null})},B:function(e,t,r){var n=ne(r);me(e,{name:t=oe(t),fromWireType:function(e){return e},toWireType:function(e,t){return t},argPackAdvance:8,readValueFromPointer:be(t,n),destructorFunction:null})},o:function(e,t,r,n,a){t=oe(t),-1===a&&(a=4294967295);var o=ne(r),i=e=>e;if(0===n){var u=32-8*r;i=e=>e<<u>>>u}var s=t.includes(\\\"unsigned\\\");me(e,{name:t,fromWireType:i,toWireType:s?function(e,t){return this.name,t>>>0}:function(e,t){return this.name,t},argPackAdvance:8,readValueFromPointer:Te(t,o,0!==n),destructorFunction:null})},l:function(e,t,r){var n=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];function a(e){var t=M,r=t[(e>>=2)>>>0],a=t[e+1>>>0];return new n(A,a,r)}me(e,{name:r=oe(r),fromWireType:a,argPackAdvance:8,readValueFromPointer:a},{ignoreDuplicateRegistrations:!0})},C:function(e,t){var r=\\\"std::string\\\"===(t=oe(t));me(e,{name:t,fromWireType:function(e){var t,n=M[e>>>2],a=e+4;if(r)for(var o=a,i=0;i<=n;++i){var u=a+i;if(i==n||0==S[u>>>0]){var s=U(o,u-o);void 0===t?t=s:(t+=String.fromCharCode(0),t+=s),o=u+1}}else{var c=new Array(n);for(i=0;i<n;++i)c[i]=String.fromCharCode(S[a+i>>>0]);t=c.join(\\\"\\\")}return Ze(e),t},toWireType:function(e,t){var n;t instanceof ArrayBuffer&&(t=new Uint8Array(t));var a=\\\"string\\\"==typeof t;a||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||de(\\\"Cannot pass non-string to std::string\\\"),n=r&&a?j(t):t.length;var o=Je(4+n+1),i=o+4;if(i>>>=0,M[o>>>2]=n,r&&a)D(t,i,n+1);else if(a)for(var u=0;u<n;++u){var s=t.charCodeAt(u);s>255&&(Ze(i),de(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),S[i+u>>>0]=s}else for(u=0;u<n;++u)S[i+u>>>0]=t[u];return null!==e&&e.push(Ze,o),o},argPackAdvance:8,readValueFromPointer:we,destructorFunction:function(e){Ze(e)}})},w:function(e,t,r){var n,a,o,i,u;r=oe(r),2===t?(n=Oe,a=Se,i=Ee,o=()=>P,u=1):4===t&&(n=Pe,a=Ce,i=Me,o=()=>M,u=2),me(e,{name:r,fromWireType:function(e){for(var r,a=M[e>>>2],i=o(),s=e+4,c=0;c<=a;++c){var f=e+4+c*t;if(c==a||0==i[f>>>u]){var l=n(s,f-s);void 0===r?r=l:(r+=String.fromCharCode(0),r+=l),s=f+t}}return Ze(e),r},toWireType:function(e,n){\\\"string\\\"!=typeof n&&de(\\\"Cannot pass non-string to C++ string type \\\"+r);var o=i(n),s=Je(4+o+t);return M[(s>>>=0)>>>2]=o>>u,a(n,s+4,o+t),null!==e&&e.push(Ze,s),s},argPackAdvance:8,readValueFromPointer:we,destructorFunction:function(e){Ze(e)}})},ia:function(e,t){me(e,{isVoid:!0,name:t=oe(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(e,t){}})},A:function(){return Date.now()},Z:function(){return!0},q:function(e,t,r){e=ve(e),t=ke(t,\\\"emval::as\\\");var n=[],a=_e(n);return M[r>>>2]=a,t.toWireType(n,e)},j:function(e,t,r,n,a){return(e=Re[e])(t=ve(t),r=xe(r),function(e){var t=[];return M[e>>>2]=_e(t),t}(n),a)},ka:function(e,t,r,n){(e=Re[e])(t=ve(t),r=xe(r),null,n)},c:ye,F:function(e,t){return(e=ve(e))==ve(t)},D:function(e){return 0===e?_e(We()):(e=xe(e),_e(We()[e]))},i:function(e,t){var r=function(e,t){for(var r=new Array(e),n=0;n<e;++n)r[n]=ke(M[t+4*n>>>2],\\\"parameter \\\"+n);return r}(e,t),n=r[0],a=n.name+\\\"_$\\\"+r.slice(1).map((function(e){return e.name})).join(\\\"_\\\")+\\\"$\\\",o=Ie[a];if(void 0!==o)return o;for(var i=[\\\"retType\\\"],u=[n],s=\\\"\\\",c=0;c<e-1;++c)s+=(0!==c?\\\", \\\":\\\"\\\")+\\\"arg\\\"+c,i.push(\\\"argType\\\"+c),u.push(r[1+c]);var f,l,p=\\\"return function \\\"+ce(\\\"methodCaller_\\\"+a)+\\\"(handle, name, destructors, args) {\\\\n\\\",d=0;for(c=0;c<e-1;++c)p+=\\\"    var arg\\\"+c+\\\" = argType\\\"+c+\\\".readValueFromPointer(args\\\"+(d?\\\"+\\\"+d:\\\"\\\")+\\\");\\\\n\\\",d+=r[c+1].argPackAdvance;for(p+=\\\"    var rv = handle[name](\\\"+s+\\\");\\\\n\\\",c=0;c<e-1;++c)r[c+1].deleteObject&&(p+=\\\"    argType\\\"+c+\\\".deleteObject(arg\\\"+c+\\\");\\\\n\\\");return n.isVoid||(p+=\\\"    return retType.toWireType(destructors, rv);\\\\n\\\"),p+=\\\"};\\\\n\\\",i.push(p),f=function(e,t){if(!(e instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof e+\\\" which is not a function\\\");var r=fe(e.name||\\\"unknownFunctionName\\\",(function(){}));r.prototype=e.prototype;var n=new r,a=e.apply(n,t);return a instanceof Object?a:n}(Function,i).apply(null,u),l=Re.length,Re.push(f),o=l,Ie[a]=o,o},p:function(e,t){return e=ve(e),t=ve(t),_e(e[t])},d:function(e){e>4&&(he[e].refcount+=1)},ja:function(e,t,r,n){e=ve(e);var o=De[t];return o||(o=function(e){for(var t=\\\"\\\",r=0;r<e;++r)t+=(0!==r?\\\", \\\":\\\"\\\")+\\\"arg\\\"+r;var n=\\\"return function emval_allocator_\\\"+e+\\\"(constructor, argTypes, args) {\\\\n  var HEAPU32 = getMemory();\\\\n\\\";for(r=0;r<e;++r)n+=\\\"var argType\\\"+r+\\\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \\\"+r+\\\"');\\\\nvar arg\\\"+r+\\\" = argType\\\"+r+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+r+\\\"['argPackAdvance'];\\\\nargTypes += 4;\\\\n\\\";return n+=\\\"var obj = new constructor(\\\"+t+\\\");\\\\nreturn valueToHandle(obj);\\\\n}\\\\n\\\",new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"valueToHandle\\\",\\\"getMemory\\\",n)(ke,a,_e,(()=>M))}(t),De[t]=o),o(e,r,n)},E:function(){return _e([])},m:function(e){e=ve(e);var t=new Array(e.length);for(i=0;i<e.length;i++)t[i]=e[i];return _e(t)},e:function(e){return _e(xe(e))},k:function(){return _e({})},h:function(e){!function(e){for(;e.length;){var t=e.pop();e.pop()(t)}}(ve(e)),ye(e)},f:function(e,t,r){e=ve(e),t=ve(t),r=ve(r),e[t]=r},g:function(e,t){var r=(e=ke(e,\\\"_emval_take_value\\\")).readValueFromPointer(t);return _e(r)},_:function(e,t){var r=new Date(1e3*je(e));C[t>>>2]=r.getUTCSeconds(),C[t+4>>>2]=r.getUTCMinutes(),C[t+8>>>2]=r.getUTCHours(),C[t+12>>>2]=r.getUTCDate(),C[t+16>>>2]=r.getUTCMonth(),C[t+20>>>2]=r.getUTCFullYear()-1900,C[t+24>>>2]=r.getUTCDay();var n=Date.UTC(r.getUTCFullYear(),0,1,0,0,0,0),a=(r.getTime()-n)/864e5|0;C[t+28>>>2]=a},$:function(e,t){var r=new Date(1e3*je(e));C[t>>>2]=r.getSeconds(),C[t+4>>>2]=r.getMinutes(),C[t+8>>>2]=r.getHours(),C[t+12>>>2]=r.getDate(),C[t+16>>>2]=r.getMonth(),C[t+20>>>2]=r.getFullYear()-1900,C[t+24>>>2]=r.getDay();var n=new Date(r.getFullYear(),0,1),a=(r.getTime()-n.getTime())/864e5|0;C[t+28>>>2]=a,C[t+36>>>2]=-60*r.getTimezoneOffset();var o=new Date(r.getFullYear(),6,1).getTimezoneOffset(),i=n.getTimezoneOffset(),u=0|(o!=i&&r.getTimezoneOffset()==Math.min(i,o));C[t+32>>>2]=u},aa:function(e){var t=new Date(C[e+20>>>2]+1900,C[e+16>>>2],C[e+12>>>2],C[e+8>>>2],C[e+4>>>2],C[e>>>2],0),r=C[e+32>>>2],n=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=a.getTimezoneOffset(),u=Math.min(i,o);if(r<0)C[e+32>>>2]=Number(o!=i&&u==n);else if(r>0!=(u==n)){var s=Math.max(i,o),c=r>0?u:s;t.setTime(t.getTime()+6e4*(c-n))}C[e+24>>>2]=t.getDay();var f=(t.getTime()-a.getTime())/864e5|0;return C[e+28>>>2]=f,C[e>>>2]=t.getSeconds(),C[e+4>>>2]=t.getMinutes(),C[e+8>>>2]=t.getHours(),C[e+12>>>2]=t.getDate(),C[e+16>>>2]=t.getMonth(),t.getTime()/1e3|0},P:function(e,t,r,n,a,o){return-52},Q:function(e,t,r,n,a,o){},ba:function e(t,r,n){e.called||(e.called=!0,function(e,t,r){var n=(new Date).getFullYear(),a=new Date(n,0,1),o=new Date(n,6,1),i=a.getTimezoneOffset(),u=o.getTimezoneOffset(),s=Math.max(i,u);function c(e){var t=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/);return t?t[1]:\\\"GMT\\\"}C[e>>>2]=60*s,C[t>>>2]=Number(i!=u);var f=c(a),l=c(o),p=He(f),d=He(l);u<i?(M[r>>>2]=p,M[r+4>>>2]=d):(M[r>>>2]=d,M[r+4>>>2]=p)}(t,r,n))},r:function(){$(\\\"\\\")},J:function(){return 4294901760},u:Ue,U:function(e,t,r){S.copyWithin(e>>>0,t>>>0,t+r>>>0)},s:function(e){var t,r=S.length,n=4294901760;if((e>>>=0)>n)return!1;for(var a=1;a<=4;a*=2){var o=r*(1+.2/a);if(o=Math.min(o,e+100663296),Le(Math.min(n,(t=Math.max(e,o))+(65536-t%65536)%65536)))return!0}return!1},S:function(e,t){var r=0;return Ye().forEach((function(n,a){var o=t+r;M[e+4*a>>>2]=o,function(e,t,r){for(var n=0;n<e.length;++n)O[t++>>>0]=e.charCodeAt(n);O[t>>>0]=0}(n,o),r+=n.length+1})),0},T:function(e,t){var r=Ye();M[e>>>2]=r.length;var n=0;return r.forEach((function(e){n+=e.length+1})),M[t>>>2]=n,0},v:function(e){return 52},y:function(e,t,r,n){return 52},G:function(e,t,r,n,a){return 70},x:function(e,t,r,n){for(var a=0,o=0;o<r;o++){var i=M[t>>>2],u=M[t+4>>>2];t+=8;for(var s=0;s<u;s++)Be(e,S[i+s>>>0]);a+=u}return M[n>>>2]=a,0},fa:$e,n:function(e,t,r,n){return $e(e,t,r,n)}},Je=(function(){var e={a:Qe};function t(e,t){var r,n=e.exports;a.asm=n,H((w=a.asm.la).buffer),a.asm.Ma,r=a.asm.ma,N.unshift(r),function(e){if(V--,a.monitorRunDependencies&&a.monitorRunDependencies(V),0==V&&(null!==G&&(clearInterval(G),G=null),q)){var t=q;q=null,t()}}()}function r(e){t(e.instance)}function o(t){return function(){if(!_&&(g||h)){if(\\\"function\\\"==typeof fetch&&!Q(L))return fetch(L,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+L+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return J(L)}));if(u)return new Promise((function(e,t){u(L,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return J(L)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){T(\\\"failed to asynchronously prepare wasm: \\\"+e),$(e)}))}if(V++,a.monitorRunDependencies&&a.monitorRunDependencies(V),a.instantiateWasm)try{return a.instantiateWasm(e,t)}catch(e){return T(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(_||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||X(L)||Q(L)||y||\\\"function\\\"!=typeof fetch?o(r):fetch(L,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return T(\\\"wasm streaming compile failed: \\\"+e),T(\\\"falling back to ArrayBuffer instantiation\\\"),o(r)}))}))).catch(n)}(),a.___wasm_call_ctors=function(){return(a.___wasm_call_ctors=a.asm.ma).apply(null,arguments)},a._OrtInit=function(){return(a._OrtInit=a.asm.na).apply(null,arguments)},a._OrtCreateSessionOptions=function(){return(a._OrtCreateSessionOptions=a.asm.oa).apply(null,arguments)},a._OrtAppendExecutionProvider=function(){return(a._OrtAppendExecutionProvider=a.asm.pa).apply(null,arguments)},a._OrtAddSessionConfigEntry=function(){return(a._OrtAddSessionConfigEntry=a.asm.qa).apply(null,arguments)},a._OrtReleaseSessionOptions=function(){return(a._OrtReleaseSessionOptions=a.asm.ra).apply(null,arguments)},a._OrtCreateSession=function(){return(a._OrtCreateSession=a.asm.sa).apply(null,arguments)},a._OrtReleaseSession=function(){return(a._OrtReleaseSession=a.asm.ta).apply(null,arguments)},a._OrtGetInputCount=function(){return(a._OrtGetInputCount=a.asm.ua).apply(null,arguments)},a._OrtGetOutputCount=function(){return(a._OrtGetOutputCount=a.asm.va).apply(null,arguments)},a._OrtGetInputName=function(){return(a._OrtGetInputName=a.asm.wa).apply(null,arguments)},a._OrtGetOutputName=function(){return(a._OrtGetOutputName=a.asm.xa).apply(null,arguments)},a._OrtFree=function(){return(a._OrtFree=a.asm.ya).apply(null,arguments)},a._OrtCreateTensor=function(){return(a._OrtCreateTensor=a.asm.za).apply(null,arguments)},a._OrtGetTensorData=function(){return(a._OrtGetTensorData=a.asm.Aa).apply(null,arguments)},a._OrtReleaseTensor=function(){return(a._OrtReleaseTensor=a.asm.Ba).apply(null,arguments)},a._OrtCreateRunOptions=function(){return(a._OrtCreateRunOptions=a.asm.Ca).apply(null,arguments)},a._OrtAddRunConfigEntry=function(){return(a._OrtAddRunConfigEntry=a.asm.Da).apply(null,arguments)},a._OrtReleaseRunOptions=function(){return(a._OrtReleaseRunOptions=a.asm.Ea).apply(null,arguments)},a._OrtRun=function(){return(a._OrtRun=a.asm.Fa).apply(null,arguments)},a._OrtEndProfiling=function(){return(a._OrtEndProfiling=a.asm.Ga).apply(null,arguments)},a._malloc=function(){return(Je=a._malloc=a.asm.Ha).apply(null,arguments)}),Ze=a._free=function(){return(Ze=a._free=a.asm.Ia).apply(null,arguments)},Ke=(a._fflush=function(){return(a._fflush=a.asm.Ja).apply(null,arguments)},a.___getTypeName=function(){return(Ke=a.___getTypeName=a.asm.Ka).apply(null,arguments)}),et=(a.__embind_initialize_bindings=function(){return(a.__embind_initialize_bindings=a.asm.La).apply(null,arguments)},a.stackSave=function(){return(et=a.stackSave=a.asm.Na).apply(null,arguments)}),tt=a.stackRestore=function(){return(tt=a.stackRestore=a.asm.Oa).apply(null,arguments)},rt=a.stackAlloc=function(){return(rt=a.stackAlloc=a.asm.Pa).apply(null,arguments)},nt=a.___cxa_is_pointer_type=function(){return(nt=a.___cxa_is_pointer_type=a.asm.Qa).apply(null,arguments)};function at(e){function r(){Xe||(Xe=!0,a.calledRun=!0,x||(K(N),t(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),function(){if(a.postRun)for(\\\"function\\\"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;)e=a.postRun.shift(),B.unshift(e);var e;K(B)}()))}e=e||d,V>0||(function(){if(a.preRun)for(\\\"function\\\"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)e=a.preRun.shift(),Y.unshift(e);var e;K(Y)}(),V>0||(a.setStatus?(a.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){a.setStatus(\\\"\\\")}),1),r()}),1)):r()))}if(a.UTF8ToString=U,a.stringToUTF8=D,a.lengthBytesUTF8=j,a.stackSave=et,a.stackRestore=tt,a.stackAlloc=rt,q=function e(){Xe||at(),Xe||(q=e)},a.preInit)for(\\\"function\\\"==typeof a.preInit&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return at(),e.ready});e.exports=n},967:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=(e,r,n,a)=>{if(\\\"object\\\"==typeof e&&null!==e){if(n.has(e))throw new Error(\\\"Circular reference in options\\\");n.add(e)}Object.entries(e).forEach((([e,o])=>{const i=r?r+e:e;if(\\\"object\\\"==typeof o)(0,t.iterateExtraOptions)(o,i+\\\".\\\",n,a);else if(\\\"string\\\"==typeof o||\\\"number\\\"==typeof o)a(i,o.toString());else{if(\\\"boolean\\\"!=typeof o)throw new Error(\\\"Can't handle extra config type: \\\"+typeof o);a(i,o?\\\"1\\\":\\\"0\\\")}}))}},586:(e,t,r)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;const n=r(967),a=r(983),o=r(361);t.setRunOptions=e=>{const t=(0,o.getInstance)();let r=0;const i=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);let o=0;if(void 0!==(null==e?void 0:e.tag)&&(o=(0,a.allocWasmString)(e.tag,i)),r=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,o),0===r)throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&(0,n.iterateExtraOptions)(e.extra,\\\"\\\",new WeakSet,((e,n)=>{const o=(0,a.allocWasmString)(e,i),u=(0,a.allocWasmString)(n,i);if(0!==t._OrtAddRunConfigEntry(r,o,u))throw new Error(`Can't set a run config entry: ${e} - ${n}`)})),[r,i]}catch(e){throw 0!==r&&t._OrtReleaseRunOptions(r),i.forEach(t._free),e}}},919:(e,t,r)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;const n=r(967),a=r(983),o=r(361);t.setSessionOptions=e=>{const t=(0,o.getInstance)();let r=0;const i=[],u=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")})(u);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(u.graphOptimizationLevel=\\\"all\\\");const s=(e=>{switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(u.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(u.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(u.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(u.executionMode=\\\"sequential\\\");const c=(e=>{switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(u.executionMode);let f=0;if(void 0!==(null==e?void 0:e.logId)&&(f=(0,a.allocWasmString)(e.logId,i)),void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);if(void 0===(null==e?void 0:e.enableProfiling)&&(u.enableProfiling=!1),r=t._OrtCreateSessionOptions(s,!!u.enableCpuMemArena,!!u.enableMemPattern,c,!!u.enableProfiling,0,f,u.logSeverityLevel,u.logVerbosityLevel),0===r)throw new Error(\\\"Can't create session options\\\");return(null==e?void 0:e.executionProviders)&&((e,t,r)=>{for(const n of t){let t=\\\"string\\\"==typeof n?n:n.name;switch(t){case\\\"xnnpack\\\":t=\\\"XNNPACK\\\";break;case\\\"webnn\\\":if(t=\\\"WEBNN\\\",\\\"string\\\"!=typeof n){const t=n;if(null==t?void 0:t.deviceType){const n=(0,a.allocWasmString)(\\\"deviceType\\\",r),i=(0,a.allocWasmString)(t.deviceType.toString(),r);if(0!==(0,o.getInstance)()._OrtAddSessionConfigEntry(e,n,i))throw new Error(`Can't set a session config entry: \\\"deviceType\\\" - ${t.deviceType}`)}if(null==t?void 0:t.powerPreference){const n=(0,a.allocWasmString)(\\\"powerPreference\\\",r),i=(0,a.allocWasmString)(t.powerPreference.toString(),r);if(0!==(0,o.getInstance)()._OrtAddSessionConfigEntry(e,n,i))throw new Error(`Can't set a session config entry: \\\"powerPreference\\\" - ${t.powerPreference}`)}}break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(`not supported EP: ${t}`)}const i=(0,a.allocWasmString)(t,r);if(0!==(0,o.getInstance)()._OrtAppendExecutionProvider(e,i))throw new Error(`Can't append execution provider: ${t}`)}})(r,e.executionProviders,i),void 0!==(null==e?void 0:e.extra)&&(0,n.iterateExtraOptions)(e.extra,\\\"\\\",new WeakSet,((e,n)=>{const o=(0,a.allocWasmString)(e,i),u=(0,a.allocWasmString)(n,i);if(0!==t._OrtAddSessionConfigEntry(r,o,u))throw new Error(`Can't set a session config entry: ${e} - ${n}`)})),[r,i]}catch(e){throw 0!==r&&t._OrtReleaseSessionOptions(r),i.forEach(t._free),e}}},983:(e,t,r)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;const n=r(361);t.allocWasmString=(e,t)=>{const r=(0,n.getInstance)(),a=r.lengthBytesUTF8(e)+1,o=r._malloc(a);return r.stringToUTF8(e,o,a),t.push(o),o}},349:(e,t,r)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initOrt=void 0;const n=r(586),a=r(919),o=r(983),i=r(361);t.initOrt=(e,t)=>{const r=(0,i.getInstance)()._OrtInit(e,t);if(0!==r)throw new Error(`Can't initialize onnxruntime. error code = ${r}`)};const u=new Map;t.createSessionAllocate=e=>{const t=(0,i.getInstance)(),r=t._malloc(e.byteLength);return t.HEAPU8.set(e,r),[r,e.byteLength]},t.createSessionFinalize=(e,t)=>{const r=(0,i.getInstance)();let n=0,o=0,s=[];try{if([o,s]=(0,a.setSessionOptions)(t),n=r._OrtCreateSession(e[0],e[1],o),0===n)throw new Error(\\\"Can't create a session\\\")}finally{r._free(e[0]),r._OrtReleaseSessionOptions(o),s.forEach(r._free)}const c=r._OrtGetInputCount(n),f=r._OrtGetOutputCount(n),l=[],p=[],d=[],m=[];for(let e=0;e<c;e++){const t=r._OrtGetInputName(n,e);if(0===t)throw new Error(\\\"Can't get an input name\\\");p.push(t),l.push(r.UTF8ToString(t))}for(let e=0;e<f;e++){const t=r._OrtGetOutputName(n,e);if(0===t)throw new Error(\\\"Can't get an output name\\\");m.push(t),d.push(r.UTF8ToString(t))}return u.set(n,[n,p,m]),[n,l,d]},t.createSession=(e,r)=>{const n=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(n,r)},t.releaseSession=e=>{const t=(0,i.getInstance)(),r=u.get(e);if(!r)throw new Error(\\\"invalid session id\\\");const n=r[0],a=r[1],o=r[2];a.forEach(t._OrtFree),o.forEach(t._OrtFree),t._OrtReleaseSession(n),u.delete(e)};const s=e=>{switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(`unsupported data type: ${e}`)}},c=e=>{switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(`unsupported data type: ${e}`)}},f=e=>{switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}};t.run=(e,t,r,a,l)=>{const p=(0,i.getInstance)(),d=u.get(e);if(!d)throw new Error(\\\"invalid session id\\\");const m=d[0],g=d[1],h=d[2],y=t.length,v=a.length;let _=0,w=[];const b=[],T=[];try{[_,w]=(0,n.setRunOptions)(l);for(let e=0;e<y;e++){const t=r[e][0],n=r[e][1],a=r[e][2];let i,u;if(Array.isArray(a)){u=4*a.length,i=p._malloc(u),T.push(i);let e=i/4;for(let t=0;t<a.length;t++){if(\\\"string\\\"!=typeof a[t])throw new TypeError(`tensor data at index ${t} is not a string`);p.HEAPU32[e++]=(0,o.allocWasmString)(a[t],T)}}else u=a.byteLength,i=p._malloc(u),T.push(i),p.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),i);const c=p.stackSave(),f=p.stackAlloc(4*n.length);try{let e=f/4;n.forEach((t=>p.HEAP32[e++]=t));const r=p._OrtCreateTensor(s(t),i,u,f,n.length);if(0===r)throw new Error(\\\"Can't create a tensor\\\");b.push(r)}finally{p.stackRestore(c)}}const e=p.stackSave(),i=p.stackAlloc(4*y),u=p.stackAlloc(4*y),d=p.stackAlloc(4*v),A=p.stackAlloc(4*v);try{let r=i/4,n=u/4,o=d/4,s=A/4;for(let e=0;e<y;e++)p.HEAPU32[r++]=b[e],p.HEAPU32[n++]=g[t[e]];for(let e=0;e<v;e++)p.HEAPU32[o++]=0,p.HEAPU32[s++]=h[a[e]];let l=p._OrtRun(m,u,i,y,A,v,d,_);const w=[];if(0===l)for(let e=0;e<v;e++){const t=p.HEAPU32[d/4+e],r=p.stackSave(),n=p.stackAlloc(16);let a,o=0;try{if(l=p._OrtGetTensorData(t,n,n+4,n+8,n+12),0!==l)throw new Error(`Can't access output tensor data. error code = ${l}`);let e=n/4;const i=p.HEAPU32[e++];o=p.HEAPU32[e++];const u=p.HEAPU32[e++],s=p.HEAPU32[e++],d=[];for(let e=0;e<s;e++)d.push(p.HEAPU32[u/4+e]);p._OrtFree(u);const m=0===d.length?1:d.reduce(((e,t)=>e*t));if(a=c(i),\\\"string\\\"===a){const e=[];let t=o/4;for(let r=0;r<m;r++){const n=p.HEAPU32[t++],a=r===m-1?void 0:p.HEAPU32[t]-n;e.push(p.UTF8ToString(n,a))}w.push([a,d,e])}else{const e=new(f(a))(m);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(p.HEAPU8.subarray(o,o+e.byteLength)),w.push([a,d,e])}}finally{p.stackRestore(r),\\\"string\\\"===a&&o&&p._free(o),p._OrtReleaseTensor(t)}}if(0===l)return w;throw new Error(`failed to call OrtRun(). error code = ${l}.`)}finally{p.stackRestore(e)}}finally{b.forEach(p._OrtReleaseTensor),T.forEach(p._free),p._OrtReleaseRunOptions(_),w.forEach(p._free)}},t.endProfiling=e=>{const t=(0,i.getInstance)(),r=u.get(e);if(!r)throw new Error(\\\"invalid session id\\\");const n=r[0],a=t._OrtEndProfiling(n);if(0===a)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(a)},t.extractTransferableBuffers=e=>{const t=[];for(const r of e){const e=r[2];!Array.isArray(e)&&e.buffer&&t.push(e.slice(0).buffer)}return t}},361:function(e,t,r){\\\"use strict\\\";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var a=Object.getOwnPropertyDescriptor(t,r);a&&!(\\\"get\\\"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,a)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)\\\"default\\\"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const u=o(r(449)),s=i(r(932)),c=r(474);let f,l=!1,p=!1,d=!1;const m=(e,t)=>t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\";t.initializeWebAssembly=async e=>{if(l)return Promise.resolve();if(p)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(d)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");p=!0;const t=e.initTimeout,n=e.numThreads,a=e.simd,o=n>1&&(()=>{try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),i=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),g=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,h=m(!1,o),y=m(i,o),v=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[y]:void 0;let _=!1;const w=[];if(t>0&&w.push(new Promise((e=>{setTimeout((()=>{_=!0,e()}),t)}))),w.push(new Promise(((e,t)=>{const n=o?c:s.default,a={locateFile:(e,t)=>o&&e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([r(154)],{type:\\\"text/javascript\\\"})):e===h?null!=v?v:(null!=g?g:t)+y:t+e};if(o)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=u.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${n.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([e],{type:\\\"text/javascript\\\"})}n(a).then((t=>{p=!1,l=!0,f=t,e()}),(e=>{p=!1,d=!0,t(e)}))}))),await Promise.race(w),_)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(l&&f)return f;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=()=>{var e;!l||p||d||(p=!0,null===(e=f.PThread)||void 0===e||e.terminateAllThreads(),f=void 0,p=!1,l=!1,d=!0)}},154:e=>{\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={},t=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(t){var a=require(\\\"worker_threads\\\"),r=a.parentPort;r.on(\\\"message\\\",(e=>onmessage({data:e})));var o=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){r.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");t?o.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,a)=>{var r=new WebAssembly.Instance(e.wasmModule,t);return a(r),e.wasmModule=null,r.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if(\\\"load\\\"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var a=URL.createObjectURL(t.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(e).then((function(t){e=t}))}else if(\\\"run\\\"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(e.__embind_initialize_bindings(),n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if(\\\"unwind\\\"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else\\\"cancel\\\"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===t.data.target||(\\\"processProxyingQueue\\\"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i(\\\"worker.js received unknown command \\\"+t.data.cmd),i(t.data)))}catch(t){throw i(\\\"worker.js onmessage() captured an uncaught exception: \\\"+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};\\\\n'},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}r.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(e){if(\\\"object\\\"==typeof window)return window}}(),(()=>{\\\"use strict\\\";const e=r(349),t=r(361);self.onmessage=r=>{switch(r.data.type){case\\\"init-wasm\\\":(0,t.initializeWebAssembly)(r.data.in).then((()=>postMessage({type:\\\"init-wasm\\\"})),(e=>postMessage({type:\\\"init-wasm\\\",err:e})));break;case\\\"init-ort\\\":try{const{numThreads:t,loggingLevel:n}=r.data.in;(0,e.initOrt)(t,n),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create_allocate\\\":try{const{model:t}=r.data.in,n=(0,e.createSessionAllocate)(t);postMessage({type:\\\"create_allocate\\\",out:n})}catch(e){postMessage({type:\\\"create_allocate\\\",err:e})}break;case\\\"create_finalize\\\":try{const{modeldata:t,options:n}=r.data.in,a=(0,e.createSessionFinalize)(t,n);postMessage({type:\\\"create_finalize\\\",out:a})}catch(e){postMessage({type:\\\"create_finalize\\\",err:e})}break;case\\\"create\\\":try{const{model:t,options:n}=r.data.in,a=(0,e.createSession)(t,n);postMessage({type:\\\"create\\\",out:a})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{const t=r.data.in;(0,e.releaseSession)(t),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{const{sessionId:t,inputIndices:n,inputs:a,outputIndices:o,options:i}=r.data.in,u=(0,e.run)(t,n,a,o,i);postMessage({type:\\\"run\\\",out:u},(0,e.extractTransferableBuffers)(u))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{const t=r.data.in;(0,e.endProfiling)(t),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}})()})();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__1670__;","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MNIST.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MNIST.vue?vue&type=script&lang=ts&\"","\nimport MainMenu from \"./components/MainMenu.vue\";\nimport {\n  DEMO_TITLES,\n  DEMO_DESCRIPTIONS,\n  DEMO_MODEL_LINKS,\n} from \"./data/demo-titles\";\nimport Component from \"vue-class-component\";\nimport Vue from \"vue\";\n\n@Component({\n  components: { MainMenu },\n})\nexport default class App extends Vue {\n  showNav: boolean;\n  hasWebGL: boolean;\n\n  constructor() {\n    super();\n    this.showNav = false;\n    this.hasWebGL = true;\n  }\n\n  get currentView() {\n    const path = this.$route.path;\n    return path.replace(/^\\//, \"\") || \"home\";\n  }\n\n  get currentTitle() {\n    const title = DEMO_TITLES[this.currentView];\n    if (title) {\n      return title;\n    } else {\n      return \"ONNX Runtime Web\";\n    }\n  }\n  get currentDescription() {\n    const description = DEMO_DESCRIPTIONS[this.currentView];\n    if (description) {\n      return description;\n    } else {\n      return \"\";\n    }\n  }\n  get currentLink() {\n    const link = DEMO_MODEL_LINKS[this.currentView];\n    if (link) {\n      return link;\n    } else {\n      return \"\";\n    }\n  }\n}\n","module.exports = __webpack_public_path__ + \"img/happy.5440c995.jpg\";","import * as imagenetUtils from './imagenet';\nimport * as mathUtils from './math';\nimport * as runModelUtils from './runModel';\nimport * as yoloTransforms from './utils-yolo/yoloPostprocess';\nimport * as yolo from './yolo';\n\nexport {imagenetUtils, mathUtils, runModelUtils, yolo, yoloTransforms};\n","import { render, staticRenderFns } from \"./Mobilenet.vue?vue&type=template&id=6651cd70&\"\nimport script from \"./Mobilenet.vue?vue&type=script&lang=ts&\"\nexport * from \"./Mobilenet.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebcamModelUI.vue?vue&type=style&index=0&id=181d8ac0&prod&lang=postcss&scoped=true&\"","\nimport ndarray from \"ndarray\";\nimport ops from \"ndarray-ops\";\nimport ImageModelUI from \"../common/ImageModelUI.vue\";\nimport { Tensor } from \"onnxruntime-web\";\nimport { Vue, Component } from \"vue-property-decorator\";\nimport { MOBILENET_IMAGE_URLS } from \"../../data/sample-image-urls\";\nimport { imagenetUtils, mathUtils } from \"../../utils/index\";\n\nconst MODEL_FILEPATH_PROD = `/onnxruntime-web-demo/mobilenetv2-7.onnx`;\nconst MODEL_FILEPATH_DEV = \"/mobilenetv2-7.onnx\";\n\n@Component({\n  components: {\n    ImageModelUI,\n  },\n})\nexport default class MobileNet extends Vue {\n  modelFilepath: string;\n  imageUrls: Array<{ text: string; value: string }>;\n\n  constructor() {\n    super();\n    this.modelFilepath =\n      process.env.NODE_ENV === \"production\"\n        ? MODEL_FILEPATH_PROD\n        : MODEL_FILEPATH_DEV;\n    this.imageUrls = MOBILENET_IMAGE_URLS;\n  }\n\n  preprocess(ctx: CanvasRenderingContext2D): Tensor {\n    const imageData = ctx.getImageData(\n      0,\n      0,\n      ctx.canvas.width,\n      ctx.canvas.height\n    );\n    const { data, width, height } = imageData;\n\n    // data processing\n    const dataTensor = ndarray(new Float32Array(data), [width, height, 4]);\n    const dataProcessedTensor = ndarray(new Float32Array(width * height * 3), [\n      1,\n      3,\n      width,\n      height,\n    ]);\n\n    ops.assign(\n      dataProcessedTensor.pick(0, 0, null, null),\n      dataTensor.pick(null, null, 0)\n    );\n    ops.assign(\n      dataProcessedTensor.pick(0, 1, null, null),\n      dataTensor.pick(null, null, 1)\n    );\n    ops.assign(\n      dataProcessedTensor.pick(0, 2, null, null),\n      dataTensor.pick(null, null, 2)\n    );\n\n    ops.divseq(dataProcessedTensor, 255);\n    ops.subseq(dataProcessedTensor.pick(0, 0, null, null), 0.485);\n    ops.subseq(dataProcessedTensor.pick(0, 1, null, null), 0.456);\n    ops.subseq(dataProcessedTensor.pick(0, 2, null, null), 0.406);\n\n    ops.divseq(dataProcessedTensor.pick(0, 0, null, null), 0.229);\n    ops.divseq(dataProcessedTensor.pick(0, 1, null, null), 0.224);\n    ops.divseq(dataProcessedTensor.pick(0, 2, null, null), 0.225);\n\n    const tensor = new Tensor(\"float32\", new Float32Array(width * height * 3), [\n      1,\n      3,\n      width,\n      height,\n    ]);\n    (tensor.data as Float32Array).set(dataProcessedTensor.data);\n    return tensor;\n  }\n\n  getPredictedClass(res: Float32Array): {} {\n    if (!res || res.length === 0) {\n      const empty = [];\n      for (let i = 0; i < 5; i++) {\n        empty.push({ name: \"-\", probability: 0, index: 0 });\n      }\n      return empty;\n    }\n    const output = mathUtils.softmax(Array.prototype.slice.call(res));\n    return imagenetUtils.imagenetClassesTopK(output, 5);\n  }\n}\n","\nimport {Tensor} from 'onnxruntime-web';\nimport {ShapeUtil, TypedArrayUtil} from './yoloPostprocessUtils';\n\nexport function concat(x: Tensor[], axis: number): Tensor {\n  const input0 = x[0];\n  const inputShape = input0.dims ? input0.dims : [input0.data.length];\n\n  if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n    throw new Error(`axis specified for concat doesn't match input dimensionality`);\n  }\n\n  if (axis < 0) {\n    axis = inputShape.length + axis;\n  }\n\n  // ensure all of the non-concatenated axes match each other\n  // along the way, calculate the shape of the output tensor\n  let concatAxisSize = inputShape[axis];\n  const outputShape = new Array<number>(inputShape.length);\n\n  for (let i = 1; i < x.length; i++) {\n    const dataN = x[i];\n    const dataNShape = dataN.dims ? dataN.dims : [dataN.data.length];\n\n    for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n      // add to the placeholder for computing output shape\n      if (axisIndex === axis) {\n        concatAxisSize += dataNShape[axisIndex];\n      }\n\n      // ensure all non-cancatenated axes match each other\n      if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n        throw new Error(`non concat dimensions must match`);\n      }\n\n      // fill the 'outputShape' array\n      outputShape[axisIndex] = dataNShape[axisIndex];\n    }\n  }\n\n  // complete the 'outputShape' array\n  outputShape[axis] = concatAxisSize;\n\n  // main logic\n  // tslint:disable-next-line:max-line-length\n  const output =\n      new Tensor(input0.type, TypedArrayUtil.createTypedArray(x[0].type, ShapeUtil.size(outputShape)), outputShape);\n  const Y = output.data;\n\n  // the axisPitch is the number of elements to add to move\n  // to the next split axis in the output\n  let axisPitch = 1;\n  for (let i = outputShape.length - 1; i >= axis; i--) {\n    axisPitch *= outputShape[i];\n  }\n\n  let outputBase = 0;\n  for (let inputIndex = 0; inputIndex < x.length; inputIndex++) {\n    const dataN = x[inputIndex];\n    const dataNDims = dataN.dims ? dataN.dims : [dataN.data.length];\n\n    // the inputAxisPitch is the number of elements to add\n    // to move to the next split axis in the input\n    let inputAxisPitch = 1;\n    for (let i = dataNDims.length - 1; i >= axis; i--) {\n      inputAxisPitch *= dataNDims[i];\n    }\n\n    const inputData = dataN.data;\n    const inputSize = ShapeUtil.size(dataNDims);\n\n    // copy the data across.\n    // for every 'inputAxisPitch' values copied, we move over by\n    // the 'axisPitch'\n\n    let outputOffset = outputBase;\n\n    for (let i = 0, j = 0; i < inputSize; i++) {\n      Y[outputOffset + i] = inputData[i];\n      if (++j === inputAxisPitch) {\n        // subtract inputAxisPitch because output is being indexed by 'i'\n        outputOffset += (axisPitch - inputAxisPitch);\n        j = 0;\n      }\n    }\n    outputBase += inputAxisPitch;\n  }\n\n  return output;\n}","module.exports = __webpack_public_path__ + \"img/sad_baby2.a04d2945.jpg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainMenu.vue?vue&type=style&index=0&id=f56a341a&prod&lang=postcss&\"","import { render, staticRenderFns } from \"./Squeezenet.vue?vue&type=template&id=e3d53ae8&\"\nimport script from \"./Squeezenet.vue?vue&type=script&lang=ts&\"\nexport * from \"./Squeezenet.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/yolo.d62e10c6.png\";","module.exports = __webpack_public_path__ + \"img/angry_baby.2070876e.jpg\";","\n/**\n * - setup()\n * - capture()\n * - adjustVideoSize()\n * are adapted from:\n * https://github.com/ModelDepot/tfjs-yolo-tiny-demo/blob/master/src/webcam.js\n */\n\nimport { InferenceSession, Tensor } from \"onnxruntime-web\";\nimport { Vue, Component, Prop, Watch } from \"vue-property-decorator\";\nimport loadImage from \"blueimp-load-image\";\nimport ModelStatus from \"../common/ModelStatus.vue\";\nimport { runModelUtils } from \"../../utils\";\n\n@Component({\n  components: {\n    ModelStatus,\n  },\n})\nexport default class WebcamModelUI extends Vue {\n  @Prop(Boolean) hasWebGL!: boolean;\n  @Prop({ type: String, required: true }) modelFilepath!: string;\n  @Prop({ type: Number, required: true }) imageSize!: number;\n  @Prop({ type: Array, required: true }) imageUrls!: Array<{\n    text: string;\n    value: string;\n  }>;\n  @Prop({ type: Function, required: true }) warmupModel!: (\n    session: InferenceSession\n  ) => Promise<void>;\n  @Prop({ type: Function, required: true }) preprocess!: (\n    ctx: CanvasRenderingContext2D\n  ) => Tensor;\n  @Prop({ type: Function, required: true }) postprocess!: (\n    t: Tensor,\n    inferenceTime: number\n  ) => void;\n\n  webcamElement: HTMLVideoElement;\n  videoOrigWidth: number;\n  videoOrigHeight: number;\n  webcamContainer: HTMLElement;\n  inferenceTime: number;\n  session: InferenceSession;\n  gpuSession: InferenceSession | undefined;\n  cpuSession: InferenceSession | undefined;\n  xnnpackSession: InferenceSession | undefined;\n  webnnGpuSession: InferenceSession | undefined;\n  webnnCpuSession: InferenceSession | undefined;\n\n  modelLoading: boolean;\n  modelInitializing: boolean;\n  sessionRunning: boolean;\n  modelLoadingError: boolean;\n\n  imageURLInput: string;\n  imageURLSelect: null;\n  imageURLSelectList: Array<{ text: string; value: string }>;\n  imageLoading: boolean;\n  imageLoadingError: boolean;\n\n  webcamEnabled: boolean;\n  webcamInitialized: boolean;\n  webcamStream: MediaStream;\n\n  sessionBackend: string;\n  modelFile: ArrayBuffer;\n  backendSelectList: Array<{ text: string; value: string }>;\n\n  constructor() {\n    super();\n    this.inferenceTime = 0;\n    this.imageURLInput = \"\";\n    this.imageURLSelect = null;\n    this.imageURLSelectList = this.imageUrls;\n    this.imageLoading = false;\n    this.imageLoadingError = false;\n\n    this.modelLoading = true;\n    this.modelInitializing = true;\n    this.sessionRunning = false;\n    this.modelLoadingError = false;\n\n    this.webcamEnabled = false;\n    this.webcamInitialized = false;\n\n    this.sessionBackend = \"webgl\";\n    this.modelFile = new ArrayBuffer(0);\n    this.backendSelectList = [\n      { text: \"GPU-WebGL\", value: \"webgl\" },\n      { text: \"CPU-WebAssembly\", value: \"wasm\" },\n      { text: \"XNNPACK-WebAssembly\", value: \"xnnpack\" },\n      { text: \"GPU-WebNN\", value: \"webnn_gpu\" },\n      { text: \"CPU-WebNN\", value: \"webnn_cpu\" },\n    ];\n  }\n\n  async mounted() {\n    this.webcamElement = document.getElementById(\"webcam\") as HTMLVideoElement;\n    this.webcamContainer = document.getElementById(\n      \"webcam-container\"\n    ) as HTMLElement;\n  }\n\n  async created() {\n    // fetch the model file to be used later\n    const response = await fetch(this.modelFilepath);\n    this.modelFile = await response.arrayBuffer();\n    try {\n      await this.initSession();\n    } catch (e) {\n      this.sessionBackend = \"wasm\";\n    }\n  }\n\n  async initSession() {\n    this.sessionRunning = false;\n    this.modelLoadingError = false;\n    if (this.sessionBackend === \"webgl\") {\n      if (this.gpuSession) {\n        this.session = this.gpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"wasm\") {\n      if (this.cpuSession) {\n        this.session = this.cpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"xnnpack\") {\n      if (this.xnnpackSession) {\n        this.session = this.xnnpackSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"webnn_gpu\") {\n      if (this.webnnGpuSession) {\n        this.session = this.webnnGpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n    if (this.sessionBackend === \"webnn_cpu\") {\n      if (this.webnnCpuSession) {\n        this.session = this.webnnCpuSession;\n        return;\n      }\n      this.modelLoading = true;\n      this.modelInitializing = true;\n    }\n\n    try {\n      if (this.sessionBackend === \"webgl\") {\n        this.gpuSession = await runModelUtils.createModelGpu(this.modelFile);\n        this.session = this.gpuSession;\n      } else if (this.sessionBackend === \"wasm\") {\n        this.cpuSession = await runModelUtils.createModelCpu(this.modelFile);\n        this.session = this.cpuSession;\n      } else if (this.sessionBackend === \"xnnpack\") {\n        this.xnnpackSession = await runModelUtils.createModelXnnpack(this.modelFile);\n        this.session = this.xnnpackSession;\n      } else if (this.sessionBackend === \"webnn_gpu\") {\n        this.webnnGpuSession = await runModelUtils.createModelWebnn(this.modelFile, 1);\n        this.session = this.webnnGpuSession;\n      } else if (this.sessionBackend === \"webnn_cpu\") {\n        this.webnnCpuSession = await runModelUtils.createModelWebnn(this.modelFile, 2);\n        this.session = this.webnnCpuSession;\n      }\n    } catch (e) {\n      console.log(e);\n      this.modelLoading = false;\n      this.modelInitializing = false;\n      if (this.sessionBackend === \"webgl\") {\n        this.gpuSession = undefined;\n      } else if (this.sessionBackend === \"wasm\") {\n        this.cpuSession = undefined;\n      } else if (this.sessionBackend === \"xnnpack\") {\n        this.xnnpackSession = undefined;\n      } else if (this.sessionBackend === \"webnn_gpu\") {\n        this.webnnGpuSession = undefined;\n      } else if (this.sessionBackend === \"webnn_cpu\") {\n        this.webnnCpuSession = undefined;\n      }\n      throw new Error(\"Error: Backend not supported. \");\n    }\n    this.modelLoading = false;\n    // warm up session with a sample tensor. Use setTimeout(..., 0) to make it an async execution so\n    // that UI update can be done.\n    if (this.sessionBackend === \"webgl\") {\n      setTimeout(() => {\n        this.warmupModel(this.session!);\n        this.modelInitializing = false;\n      }, 0);\n    } else {\n      await this.warmupModel(this.session!);\n      this.modelInitializing = false;\n    }\n  }\n\n  @Watch(\"sessionBackend\")\n  async onSessionBackendChange(newVal: string) {\n    this.sessionBackend = newVal;\n    if (this.webcamEnabled) {\n      this.stopCamera();\n    }\n    this.clearRects();\n    this.clearCanvas();\n    this.clearFileInput();\n    try {\n      await this.initSession();\n    } catch (e) {\n      this.modelLoadingError = true;\n    }\n    return newVal;\n  }\n\n  @Watch(\"imageURLSelect\")\n  onImageURLSelectChange(newVal: string) {\n    if (this.webcamEnabled) {\n      this.stopCamera();\n    }\n    this.imageURLInput = newVal;\n    this.clearRects();\n    this.loadImageToCanvas(newVal);\n  }\n\n  handleFileChange(e: any) {\n    this.$emit(\"input\", e.target.files[0]);\n    this.loadImageToCanvas(e.target.files[0]);\n  }\n\n  get webcamStatus() {\n    if (this.webcamEnabled) {\n      return \"Stop Camera\";\n    } else {\n      return \"Start Camera\";\n    }\n  }\n\n  beforeDestroy() {\n    this.stopCamera();\n    if (this.webcamInitialized) {\n      this.webcamStream.getTracks()[0].stop();\n    }\n  }\n\n  webcamController() {\n    if (this.webcamEnabled) {\n      this.stopCamera();\n    } else {\n      this.clearRects();\n      this.runLiveVideo();\n    }\n  }\n\n  loadImageToCanvas(url: string) {\n    if (!url) {\n      const element = document.getElementById(\n        \"input-canvas\"\n      ) as HTMLCanvasElement;\n      const ctx = element.getContext(\"2d\") as CanvasRenderingContext2D;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      return;\n    }\n    loadImage(\n      url,\n      (img) => {\n        if ((img as Event).type === \"error\") {\n          this.imageLoadingError = true;\n          this.imageLoading = false;\n        } else {\n          // load image data onto input canvas\n          const element = document.getElementById(\n            \"input-canvas\"\n          ) as HTMLCanvasElement;\n          const ctx = element.getContext(\"2d\") as CanvasRenderingContext2D;\n          const imageWidth = (img as HTMLImageElement).width;\n          const imageHeight = (img as HTMLImageElement).height;\n          ctx.drawImage(\n            img as HTMLImageElement,\n            0,\n            0,\n            imageWidth,\n            imageHeight,\n            0,\n            0,\n            element.width,\n            element.height\n          );\n          this.imageLoadingError = false;\n          this.imageLoading = false;\n          this.sessionRunning = true;\n          this.inferenceTime = 0;\n          // model predict\n          this.$nextTick(function () {\n            setTimeout(() => {\n              this.runModel(ctx);\n            }, 10);\n          });\n        }\n      },\n      {\n        cover: true,\n        crop: true,\n        canvas: true,\n        crossOrigin: \"Anonymous\",\n      }\n    );\n  }\n\n  async setup() {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: { facingMode: \"environment\" },\n      });\n      this.webcamStream = stream;\n      this.webcamElement.srcObject = stream;\n      return new Promise<void>((resolve) => {\n        this.webcamElement.onloadedmetadata = () => {\n          this.videoOrigWidth = this.webcamElement.videoWidth;\n          this.videoOrigHeight = this.webcamElement.videoHeight;\n          this.adjustVideoSize(this.videoOrigWidth, this.videoOrigHeight);\n          resolve();\n        };\n      });\n    } else {\n      throw new Error(\"No webcam found!\");\n    }\n  }\n\n  async stopCamera() {\n    this.webcamElement.pause();\n    while (this.sessionRunning) {\n      await new Promise<void>((resolve) =>\n        requestAnimationFrame(() => resolve())\n      );\n    }\n    this.clearRects();\n    this.clearCanvas();\n    this.webcamEnabled = false;\n  }\n\n  async startCamera() {\n    if (!this.webcamInitialized) {\n      this.sessionRunning = true;\n      try {\n        await this.setup();\n      } catch (e) {\n        this.sessionRunning = false;\n        this.webcamEnabled = false;\n        alert(\"no webcam found\");\n        return;\n      }\n      this.webcamElement.play();\n      this.webcamInitialized = true;\n      this.sessionRunning = false;\n    } else {\n      await this.webcamElement.play();\n    }\n    this.webcamEnabled = true;\n  }\n\n  async runLiveVideo() {\n    await this.startCamera();\n    if (!this.webcamEnabled) {\n      return;\n    }\n    while (this.webcamEnabled) {\n      const ctx = this.capture();\n      // run model\n      await this.runModel(ctx);\n      await new Promise<void>((resolve) =>\n        requestAnimationFrame(() => resolve())\n      );\n    }\n  }\n\n  async runModel(ctx: CanvasRenderingContext2D) {\n    this.sessionRunning = true;\n    const data = this.preprocess(ctx);\n    let outputTensor: Tensor;\n    [outputTensor, this.inferenceTime] = await runModelUtils.runModel(\n      this.session,\n      data\n    );\n    this.clearRects();\n    this.postprocess(outputTensor, this.inferenceTime);\n    this.sessionRunning = false;\n  }\n\n  clearCanvas() {\n    this.inferenceTime = 0;\n    this.imageURLInput = \"\";\n    this.imageURLSelect = null;\n    this.imageLoading = false;\n    this.imageLoadingError = false;\n    const element = document.getElementById(\n      \"input-canvas\"\n    ) as HTMLCanvasElement;\n    if (element) {\n      const ctx = element.getContext(\"2d\");\n      if (ctx) {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      }\n    }\n  }\n\n  clearRects() {\n    while (this.webcamContainer.childNodes.length > 2) {\n      this.webcamContainer.removeChild(this.webcamContainer.childNodes[2]);\n    }\n  }\n\n  clearFileInput() {\n    const file = document.getElementById(\"input-upload-image\") as HTMLInputElement;\n    if (file) {\n      file.value = '';\n    }\n  }\n\n  // Capture image from video\n  capture(): CanvasRenderingContext2D {\n    const size = Math.min(this.videoOrigWidth, this.videoOrigHeight);\n    const centerHeight = this.videoOrigHeight / 2;\n    const beginHeight = centerHeight - size / 2;\n    const centerWidth = this.videoOrigWidth / 2;\n    const beginWidth = centerWidth - size / 2;\n\n    // placeholder to draw a image\n    const canvas = document.getElementById(\"screenshot\") as HTMLCanvasElement;\n    canvas.width = Math.min(\n      this.webcamElement.width,\n      this.webcamElement.height\n    );\n    canvas.height = Math.min(\n      this.webcamElement.width,\n      this.webcamElement.height\n    );\n    const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    context.drawImage(\n      this.webcamElement,\n      beginWidth,\n      beginHeight,\n      size,\n      size,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n    return context;\n  }\n  /**\n   * Adjusts the video size so we can make a centered square crop without\n   * including whitespace.\n   * @param {number} width The real width of the video element.\n   * @param {number} height The real height of the video element.\n   */\n  adjustVideoSize(width: number, height: number) {\n    const aspectRatio = width / height;\n    if (width >= height) {\n      this.webcamElement.width = aspectRatio * this.webcamElement.height;\n    } else if (width < height) {\n      this.webcamElement.height = this.webcamElement.width / aspectRatio;\n    }\n  }\n}\n","import { render, staticRenderFns } from \"./DrawingModelUI.vue?vue&type=template&id=ee1ecc3a&scoped=true&\"\nimport script from \"./DrawingModelUI.vue?vue&type=script&lang=ts&\"\nexport * from \"./DrawingModelUI.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./DrawingModelUI.vue?vue&type=style&index=0&id=ee1ecc3a&prod&scoped=true&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ee1ecc3a\",\n  null\n  \n)\n\nexport default component.exports","export default [\n  'Aeroplane',   'Bicycle', 'Bird',  'Boat',      'Bottle', 'Bus',         'Car',   'Cat',  'Chair', 'Cow',\n  'Diningtable', 'Dog',     'Horse', 'Motorbike', 'Person', 'Pottedplant', 'Sheep', 'Sofa', 'Train', 'Tvmonitor'\n];","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('WebcamModel',{attrs:{\"modelName\":\"Yolo\",\"hasWebGL\":_vm.hasWebGL,\"modelFilepath\":_vm.modelFilepath,\"imageSize\":416,\"imageUrls\":_vm.imageUrls,\"warmupModel\":_vm.warmupModel,\"preprocess\":_vm.preprocess,\"postprocess\":_vm.postprocess}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const DEMO_TITLES: {[key: string]: string} = {\n  mobilenet: 'MobileNet, trained on ImageNet',\n  squeezenet: 'SqueezeNet, trained on ImageNet',\n  emotion_ferplus: 'FER+ Emotion, real-time emotion detection',\n  yolo: 'Yolo, real-time object detection',\n  mnist: 'MNIST, handwritten digit prediction'\n};\n\nexport const DEMO_DESCRIPTIONS: {[key: string]: string} = {\n  mobilenet: 'MobileNet models perform image classification - they are also very efficient in terms of speed and size and hence are ideal for embedded and mobile applications.',\n  squeezenet: 'SqueezeNet is a light-weight convolutional networks for image classification.',\n  emotion_ferplus: 'FER+ Emotion, a deep convolutional neural network for emotion recognition in faces.',\n  yolo: 'YOLO can detect multiple objects in an image and puts bounding boxes around these objects.',\n  mnist: 'MNIST, handwritten digit prediction.'\n};\n\nexport const DEMO_MODEL_LINKS: {[key: string]: string} = {\n  mobilenet: 'https://github.com/onnx/models/tree/master/vision/classification/mobilenet',\n  squeezenet: 'https://github.com/onnx/models/tree/master/vision/classification/squeezenet',\n  emotion_ferplus: 'https://github.com/onnx/models/tree/master/vision/body_analysis/emotion_ferplus',\n  yolo: 'https://github.com/onnx/models/tree/master/vision/object_detection_segmentation/tiny-yolov2',\n  mnist: 'https://github.com/onnx/models/tree/master/vision/classification/mnist'\n};"],"sourceRoot":""}